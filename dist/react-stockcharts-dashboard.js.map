{"version":3,"sources":["webpack:///react-stockcharts-dashboard.js","webpack:///./docs/dashboard.js","webpack:///./docs/lib/examples/areachart.jsx","webpack:///./docs/lib/examples/areachart-with-ypercent.jsx","webpack:///./docs/lib/examples/areachart-with-crosshair-mousepointer.jsx","webpack:///./docs/lib/examples/areachart-with-mousepointer.jsx","webpack:///./docs/lib/examples/areachart-with-tooltip.jsx","webpack:///./docs/lib/examples/areachart-with-ma.jsx","webpack:///./docs/lib/examples/areachart-with-edge-coordinates.jsx","webpack:///./docs/lib/examples/linechart.jsx","webpack:///./docs/lib/examples/candlestickchart.jsx","webpack:///./docs/lib/examples/synchronized-mouse-move.jsx","webpack:///./docs/lib/examples/areachart-with-zoom.jsx","webpack:///./docs/lib/navbar.jsx","webpack:///./docs/lib/sidebar.jsx","webpack:///./docs/lib/main-container.jsx","webpack:///./docs/lib/menu-group.jsx","webpack:///./docs/lib/menu-item.jsx","webpack:///./docs/lib/content-section.jsx","webpack:///./docs/lib/row.jsx","webpack:///./docs/lib/section.jsx","webpack:///./docs/lib/scroll-mixin.jsx","webpack:///./docs/md/OVERVIEW.md","webpack:///./docs/md/AREACHART.md"],"names":["webpackJsonp","module","exports","__webpack_require__","React","d3","parseDate","time","format","parse","Nav","Sidebar","MainContainer","MenuGroup","MenuItem","ContentSection","Row","Section","ScrollMixin","tsv","err","data","forEach","d","date","Date","getTime","open","high","low","close","volume","AreaChart","init","AreaChartWithYPercent","ExamplesPage","createClass","displayName","mixins","render","createElement","label","active","title","anchor","colSpan","dangerouslySetInnerHTML","__html","className","document","body","ReStock","ChartCanvas","XAxis","YAxis","AreaSeries","Chart","Translate","DataSeries","ChartWidthMixin","InitialStateMixin","this","state","width","console","log","height","margin","left","right","top","bottom","id","axisAt","orient","ticks","yAccessor","xAccessor","percentScale","tickFormat","EventCapture","MouseCoordinates","CrossHair","AreaChartWithCrossHairMousePointer","getInitialState","dateFormat","from","to","forChart","xDisplayFormat","yDisplayFormat","y","toFixed","mouseMove","mainChart","VerticalMousePointer","CurrentCoordinate","AreaChartWithVerticalMousePointer","TooltipContainer","OHLCTooltip","AreaChartWithToolTip","OverlaySeries","LineSeries","MovingAverageTooltip","AreaChartWithMA","handleMATooltipClick","overlay","type","options","period","onClick","EdgeContainer","EdgeIndicator","AreaChartWithEdgeCoordinates","getEventStore","refs","eventStore","updateEventStore","ref","forOverlay","itemType","edgeAt","LineChart","CandlestickSeries","DataTransform","CandleStickChart","transformType","axisPadding","SyncMouseMove","componentDidMount","componentDidUpdate","AreaChartWithZoom","zoom","origin","href","SideBar","props","children","propTypes","PropTypes","bool","string","isRequired","getDefaultProps","number","contentTop","handleWindowResize","splice","$","find","each","push","attr","offset","componentWillUnMount","window","removeEventListener","addEventListener","topRange","edgeMargin","animationTime","bind","e","which","stop","click","index","length","newTop","Math","min","animate","scrollTop","scroll","winTop","bodyHt","vpHt","i","loc","removeClass","eq","addClass","on"],"mappings":"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","file":"react-stockcharts-dashboard.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**/\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\n\t__webpack_require__(26);\n\t__webpack_require__(24);\n\n\tvar Nav = __webpack_require__(15);\n\tvar Sidebar = __webpack_require__(16);\n\tvar MainContainer = __webpack_require__(17);\n\tvar MenuGroup = __webpack_require__(18);\n\tvar MenuItem = __webpack_require__(19);\n\tvar ContentSection = __webpack_require__(20);\n\tvar Row = __webpack_require__(21);\n\tvar Section = __webpack_require__(22);\n\tvar ScrollMixin = __webpack_require__(23);\n\n\n\td3.tsv(\"data/data.tsv\", function(err, data) {\n\t\tdata.forEach(function(d, i)  {\n\t\t\td.date = new Date(parseDate(d.date).getTime());\n\t\t\td.open = +d.open;\n\t\t\td.high = +d.high;\n\t\t\td.low = +d.low;\n\t\t\td.close = +d.close;\n\t\t\td.volume = +d.volume;\n\t\t\t// console.log(d);\n\t\t});\n\n\t\tvar AreaChart = __webpack_require__(4).init(data);\n\t\tvar AreaChartWithYPercent = __webpack_require__(5).init(data);\n\t\tvar AreaChartWithCrossHairMousePointer = __webpack_require__(6).init(data);\n\t\tvar AreaChartWithVerticalMousePointer = __webpack_require__(7).init(data);\n\t\tvar AreaChartWithToolTip = __webpack_require__(8).init(data);\n\t\tvar AreaChartWithMA = __webpack_require__(9).init(data);\n\t\tvar AreaChartWithEdgeCoordinates = __webpack_require__(10).init(data);\n\t\tvar LineChart = __webpack_require__(11).init(data);\n\t\tvar CandleStickChart = __webpack_require__(12).init(data);\n\t\tvar SyncMouseMove = __webpack_require__(13).init(data);\n\t\tvar AreaChartWithZoom = __webpack_require__(14).init(data);\n\t\tvar AreaChartWithZoomPan = __webpack_require__(3).init(data);\n\n\t\tvar ExamplesPage = React.createClass({displayName: \"ExamplesPage\",\n\t\t\tmixins: [ScrollMixin],\n\t\t\trender:function() {\n\t\t\t\treturn (\n\t\t\t\t\tReact.createElement(\"body\", null, \n\t\t\t\t\t\tReact.createElement(Nav, null), \n\t\t\t\t\t\tReact.createElement(MainContainer, null, \n\t\t\t\t\t\t\tReact.createElement(Sidebar, null, \n\t\t\t\t\t\t\t\tReact.createElement(MenuGroup, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Overview\", active: true}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"AreaChart\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"CandlestickChart\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"LineChart\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"LineChart2\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"LineChart3\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"LineChart4\"})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(ContentSection, {title: \"Getting Started\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Row, {anchor: \"Overview\", title: \"Home\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(29)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"AreaChart\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(AreaChart, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(30)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(AreaChartWithYPercent, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"CandlestickChart\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"LineChart\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"LineChart2\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"LineChart3\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"LineChart4\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tReact.render(React.createElement(ExamplesPage, null), document.body);\n\t});\n\t// React.render(<ExamplesPage />, document.getElementById(\"area\"));\n\n\t//module.exports = ExamplesPage;\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(31)\n\t\t, InitialStateMixin = __webpack_require__(32)\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChart = React.createClass({displayName: \"AreaChart\",/**/\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\t\t\t\t\tconsole.log(this.state.width);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 0}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn AreaChart;\n\t\t}\n\t}\n\n\t/*\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\n\t<ChartCanvas  width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t\t<Chart data={this.state.data}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(0.15)}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.log()}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data} interval=\"D\"\n\t\t\tpolyLinear={false}\n\t\t\tviewRange={dateRange}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={4} tickFormat={d3.time.format(\"%b\")}/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data} interval=\"D\"\n\t\t\tpolyLinear={false}\n\t\t\tviewRange={dateRange}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data}\n\t\t\tpolyLinear={true}\n\t\t\tdateAccessor={(d) => d.date}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(.5)}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\n\n\t<DataTransform data={} transformDataAs={POLYLINEAR}>\n\t\t<DataTransform transformDataAs={RENKO}>\n\t\t\t<Chart currentItemEmitter={} xScale={} yScale={} xDomainUpdate={true} yDomainUpdate={true}>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={} xAccesor={} tooltipDisplayEmitter={}>\n\t\t\t\t\t<CandlestickSeries/>\n\t\t\t\t</DataSeries\n\t\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} xAccesor={} yAccesor={} toolTipId={}>\n\t\t\t\t\t<LineSeries />\n\t\t\t\t</ChartOverlay>\n\t\t\t\t<ChartOverlay type=\"macrossover\" options={{ period: 10 }} id={0}> //moving average crossover\n\t\t\t\t\t<Markers />\n\t\t\t\t</ChartOverlay>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t\t<DataTransform transformDataAs={VOLUMEPROFILE}>\n\t\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t\t<YAxis />\n\t\t\t\t<LineSeries />\n\t\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} id={0}>\n\t\t\t\t\t<LineSeries />\n\t\t\t\t</ChartOverlay>\n\t\t\t\t<TooltipEmitter sendUsing={} />\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t<YAxis />\n\t\t\t<HistogramSeries  />\n\t\t\t<EdgeCoordinate />\n\t\t</Chart>\n\t\t<MouseCoordinates listenTo={} /> // this is here so it is above all charts\n\t\t<EdgeCoordinate /> // this is here so it is above all charts and I can click and bring an edge coordinate to the front\n\t\t<EdgeCoordinate edgeAt=\"\" orient=\"\" />\n\t\t<EventCapture mouseMove={true} zoom={true} pan={true} />\n\t\t<TooltipContainer>\n\t\t\t<OHLCTooltip />\n\t\t\t<MovingAverageTooltipContainer>\n\t\t\t\t<MATooltip onClick={} onToggle={} onRemove={} toolTipId={} />\n\t\t\t\t<MATooltip toolTipId={} />\n\t\t\t\t<MATooltip toolTipId={} />\n\t\t\t</MovingAverageTooltipContainer>\n\t\t</TooltipContainer>\n\t</DataTransform>\n\t*/\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(31)\n\t\t, InitialStateMixin = __webpack_require__(32)\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithYPercent = React.createClass({displayName: \"AreaChartWithYPercent\",/**/\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\t\t\t\t\tconsole.log(this.state.width);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 0}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", percentScale: true, tickFormat: d3.format(\".0%\")}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn AreaChartWithYPercent;\n\t\t}\n\t}\n\n\t/*\n\n\t<ChartCanvas  width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t\t<Chart data={this.state.data}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(0.15)}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.log()}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data} interval=\"D\"\n\t\t\tpolyLinear={false}\n\t\t\tviewRange={dateRange}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={4} tickFormat={d3.time.format(\"%b\")}/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data} interval=\"D\"\n\t\t\tpolyLinear={false}\n\t\t\tviewRange={dateRange}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data}\n\t\t\tpolyLinear={true}\n\t\t\tdateAccessor={(d) => d.date}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(.5)}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\n\n\t<DataTransform data={} transformDataAs={POLYLINEAR}>\n\t\t<DataTransform transformDataAs={RENKO}>\n\t\t\t<Chart currentItemEmitter={} xScale={} yScale={} xDomainUpdate={true} yDomainUpdate={true}>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={} xAccesor={} tooltipDisplayEmitter={}>\n\t\t\t\t\t<CandlestickSeries/>\n\t\t\t\t</DataSeries\n\t\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} xAccesor={} yAccesor={} toolTipId={}>\n\t\t\t\t\t<LineSeries />\n\t\t\t\t</ChartOverlay>\n\t\t\t\t<ChartOverlay type=\"macrossover\" options={{ period: 10 }} id={0}> //moving average crossover\n\t\t\t\t\t<Markers />\n\t\t\t\t</ChartOverlay>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t\t<DataTransform transformDataAs={VOLUMEPROFILE}>\n\t\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t\t<YAxis />\n\t\t\t\t<LineSeries />\n\t\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} id={0}>\n\t\t\t\t\t<LineSeries />\n\t\t\t\t</ChartOverlay>\n\t\t\t\t<TooltipEmitter sendUsing={} />\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t<YAxis />\n\t\t\t<HistogramSeries  />\n\t\t\t<EdgeCoordinate />\n\t\t</Chart>\n\t\t<MouseCoordinates listenTo={} /> // this is here so it is above all charts\n\t\t<EdgeCoordinate /> // this is here so it is above all charts and I can click and bring an edge coordinate to the front\n\t\t<EdgeCoordinate edgeAt=\"\" orient=\"\" />\n\t\t<EventCapture mouseMove={true} zoom={true} pan={true} />\n\t\t<TooltipContainer>\n\t\t\t<OHLCTooltip />\n\t\t\t<MovingAverageTooltipContainer>\n\t\t\t\t<MATooltip onClick={} onToggle={} onRemove={} toolTipId={} />\n\t\t\t\t<MATooltip toolTipId={} />\n\t\t\t\t<MATooltip toolTipId={} />\n\t\t\t</MovingAverageTooltipContainer>\n\t\t</TooltipContainer>\n\t</DataTransform>\n\t*/\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithCrossHairMousePointer = React.createClass({displayName: \"AreaChartWithCrossHairMousePointer\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: this.state.width, height: this.state.height, margin: {left: 5, right: 90, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 3}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 3, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 3})\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithCrossHairMousePointer;\n\t\t}\n\t}\n\n\t/*\n\t\tchangeWidth() {\n\t\t\tthis.setState({\n\t\t\t\twidth: this.state.width + 10\n\t\t\t});\n\t\t},\n\t\t\t<rect width={100} height={100} onClick={this.changeWidth}/>\n\t*/\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, VerticalMousePointer = ReStock.VerticalMousePointer\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithVerticalMousePointer = React.createClass({displayName: \"AreaChartWithVerticalMousePointer\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: this.state.width, height: this.state.height, margin: {left: 50, right: 100, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 0}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", percentScale: true, tickFormat: d3.format(\".0%\")}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 0}), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 0, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(VerticalMousePointer, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 0})\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn AreaChartWithVerticalMousePointer;\n\t\t}\n\t}\n\n\t/*\n\t\t\t\t\t\t\t\t\t\n\n\t*/\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithToolTip = React.createClass({displayName: \"AreaChartWithToolTip\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: this.state.width, height: this.state.height, margin: {left: 5, right: 90, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithToolTip;\n\t\t}\n\t}\n\n\t/*\n\t\tchangeWidth() {\n\t\t\tthis.setState({\n\t\t\t\twidth: this.state.width + 10\n\t\t\t});\n\t\t},\t\t\t\t\t\t\t<OHLCTooltip xDisplayFormat={dateFormat} accessor={(d) => {return {open: d.open, high: d.high, low: d.low, close: d.close, volume: d.volume}}}/>\n\n\t\t\t<rect width={100} height={100} onClick={this.changeWidth}/>\n\t*/\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t\t, OverlaySeries = ReStock.OverlaySeries\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithMA = React.createClass({displayName: \"AreaChartWithMA\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\thandleMATooltipClick:function(overlay) {\n\t\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: this.state.width, height: this.state.height, margin: {left: 5, right: 90, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 0, type: \"sma\", options: { period: 50}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 1, type: \"sma\", options: { period: 150}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 3, type: \"sma\", options: { period: 250}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 4, type: \"sma\", options: { period: 350}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 5, type: \"sma\", options: { period: 450}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1}), \n\t\t\t\t\t\t\t\tReact.createElement(MovingAverageTooltip, {forChart: 1, onClick: this.handleMATooltipClick})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithMA;\n\t\t}\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t\t, OverlaySeries = ReStock.OverlaySeries\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t\t, EdgeContainer = ReStock.EdgeContainer\n\t\t, EdgeIndicator = ReStock.EdgeIndicator\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithEdgeCoordinates = React.createClass({displayName: \"AreaChartWithEdgeCoordinates\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetEventStore:function() {\n\t\t\t\t\treturn this.refs.eventStore.getEventStore();\n\t\t\t\t},\n\t\t\t\tupdateEventStore:function(eventStore) {\n\t\t\t\t\treturn this.refs.eventStore.updateEventStore(eventStore);\n\t\t\t\t},\n\t\t\t\thandleMATooltipClick:function(overlay) {\n\t\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {\n\t\t\t\t\t\t\twidth: this.state.width, height: this.state.height, \n\t\t\t\t\t\t\tmargin: {left: 5, right: 90, top:10, bottom: 30}, data: data, ref: \"eventStore\"}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 0, type: \"sma\", options: { period: 50}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 1, type: \"sma\", options: { period: 150}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 3, type: \"sma\", options: { period: 250}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 4, type: \"sma\", options: { period: 350}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 5, type: \"sma\", options: { period: 450}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 1}), \n\t\t\t\t\t\t\tReact.createElement(EdgeContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 1}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 5}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1}), \n\t\t\t\t\t\t\t\tReact.createElement(MovingAverageTooltip, {forChart: 1, onClick: this.handleMATooltipClick})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithEdgeCoordinates;\n\t\t}\n\t}\n\n\t/*\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t<EdgeContainer>\n\n\t\t\t\t\t\t\t</EdgeContainer>\n\n\n\t\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t\t/>\n\t*/\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries;\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar LineChart = React.createClass({displayName: \"LineChart\",\n\t\t\t\trender:function() {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: 500, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", percentScale: true, tickFormat: d3.format(\".0%\")}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn LineChart\n\t\t}\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries;\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: 500, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(DataTransform, {transformType: \"stockscale\", data: data}, \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", axisPadding: 10, orient: \"right\", percentScale: true, tickFormat: d3.format(\".0%\"), ticks: 3}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithEdgeCoordinates = __webpack_require__(10).init(data);\n\n\t\t\tvar SyncMouseMove = React.createClass({displayName: \"SyncMouseMove\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\thandleMATooltipClick:function(overlay) {\n\t\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t\t},\n\t\t\t\tcomponentDidMount:function() {\n\t\t\t\t\tvar eventStore = this.refs.left.getEventStore();\n\t\t\t\t\tthis.refs.right.updateEventStore(eventStore);\n\t\t\t\t\t// console.log('SyncMouseMove.componentDidMount', eventStore);\n\t\t\t\t},\n\t\t\t\tcomponentDidUpdate:function() {\n\t\t\t\t\t// console.log('SyncMouseMove.componentDidUpdate');\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\tReact.createElement(\"div\", null, \n\t\t\t\t\t\tReact.createElement(\"div\", {className: \"col-md-6 react-stockchart\"}, \n\t\t\t\t\t\t\tReact.createElement(AreaChartWithEdgeCoordinates, {ref: \"left\"})\n\t\t\t\t\t\t), \n\t\t\t\t\t\tReact.createElement(\"div\", {className: \"col-md-6 react-stockchart\"}, \n\t\t\t\t\t\t\tReact.createElement(AreaChartWithEdgeCoordinates, {ref: \"right\"})\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn SyncMouseMove;\n\t\t}\n\t}\n\n\t/*\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t<EdgeContainer>\n\n\t\t\t\t\t\t\t</EdgeContainer>\n\n\n\t\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t\t/>\n\t*/\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(34);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t\t, OverlaySeries = ReStock.OverlaySeries\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t\t, EdgeContainer = ReStock.EdgeContainer\n\t\t, EdgeIndicator = ReStock.EdgeIndicator\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithZoom = React.createClass({displayName: \"AreaChartWithZoom\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\thandleMATooltipClick:function(overlay) {\n\t\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {\n\t\t\t\t\t\t\twidth: this.state.width, height: this.state.height, \n\t\t\t\t\t\t\tmargin: {left: 65, right: 90, top:30, bottom: 30}, data: data, ref: \"eventStore\"}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 0, type: \"sma\", options: { period: 50}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 1, type: \"sma\", options: { period: 150}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 2, type: \"sma\", options: { period: 250}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 3, type: \"sma\", options: { period: 350}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 4, type: \"sma\", options: { period: 450}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 1}), \n\t\t\t\t\t\t\tReact.createElement(EdgeContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 0}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"first\", \n\t\t\t\t\t\t\t\t\torient: \"left\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"left\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 1}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"first\", \n\t\t\t\t\t\t\t\t\torient: \"left\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"left\", \n\t\t\t\t\t\t\t\t\tforChart: 1}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 2}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 3}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, zoom: true, mainChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1, origin: [-60, -20]}), \n\t\t\t\t\t\t\t\tReact.createElement(MovingAverageTooltip, {forChart: 1, onClick: this.handleMATooltipClick, origin: [-60, -10]})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithZoom;\n\t\t}\n\t}\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar Nav = React.createClass({displayName: \"Nav\",\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"nav\", {className: \"navbar navbar-fixed-top\"}, \n\t\t\t\t\tReact.createElement(\"div\", {className: \"container-fluid\"}, \n\t\t\t\t\t\tReact.createElement(\"div\", {className: \"navbar-header\"}, \n\t\t\t\t\t\t\tReact.createElement(\"a\", {className: \"navbar-brand\", href: \"index.html\"}, \"React Stockcharts\")\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = Nav;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar SideBar = React.createClass({displayName: \"SideBar\",\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"col-sm-3 col-md-2 sidebar\"}, this.props.children)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = SideBar;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\tvar Row = __webpack_require__(21);\n\n\tvar MainContainer = React.createClass({displayName: \"MainContainer\",\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"container-fluid\", id: \"MainContainer\"}, \n\t\t\t\t\tReact.createElement(Row, null, this.props.children)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = MainContainer;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar MenuGroup = React.createClass({displayName: \"MenuGroup\",\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"ul\", {className: \"nav nav-sidebar\"}, this.props.children)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = MenuGroup;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar MenuItem = React.createClass({displayName: \"MenuItem\",\n\t\tpropTypes: {\n\t\t\tactive: React.PropTypes.bool,\n\t\t\tanchor: React.PropTypes.string,\n\t\t\tlabel: React.PropTypes.string.isRequired\n\t\t},\n\t\tgetDefaultProps:function() {\n\t\t\treturn {\n\t\t\t\tactive: false,\n\t\t\t};\n\t\t},\n\t\trender:function() {\n\t\t\tvar className = (this.props.active) ? 'active' : '';\n\t\t\tvar anchor = this.props.anchor || this.props.label;\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"li\", {className: className}, \n\t\t\t\t\tReact.createElement(\"a\", {href: '#' + anchor}, this.props.label, \n\t\t\t\t\t\t(this.props.active) ? React.createElement(\"span\", {className: \"sr-only\"}, \"(current)\") : ''\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = MenuItem;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar ContentSection = React.createClass({displayName: \"ContentSection\",\n\t\tpropTypes: {\n\t\t\ttitle: React.PropTypes.string.isRequired\n\t\t},\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {id: \"ContentSection\", className: \"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\"}, \n\t\t\t\t\tReact.createElement(\"h1\", {className: \"page-header\"}, this.props.title), \n\t\t\t\t\tthis.props.children\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = ContentSection;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar Row = React.createClass({displayName: \"Row\",\n\t\tpropTypes: {\n\t\t\ttitle: React.PropTypes.string,\n\t\t\tanchor: React.PropTypes.string\n\t\t},\n\t\trender:function() {\n\t\t\tvar anchor = this.props.anchor || this.props.title;\n\t\t\tvar title = this.props.title\n\t\t\t\t\t? React.createElement(\"h4\", null, React.createElement(\"a\", {id: anchor, href: '#' + anchor}, this.props.title))\n\t\t\t\t\t: null;\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"row\"}, \n\t\t\t\t\ttitle, \n\t\t\t\t\tthis.props.children\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = Row;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar Section = React.createClass({displayName: \"Section\",\n\t\tpropTypes: {\n\t\t\tcolSpan: React.PropTypes.number.isRequired,\n\t\t\ttitle: React.PropTypes.string\n\t\t},\n\t\tgetDefaultProps:function() {\n\t\t\treturn {\n\t\t\t\tcolSpan: 1\n\t\t\t}\n\t\t},\n\t\trender:function() {\n\t\t\tvar className = this.props.className + ' col-md-' + (6 * this.props.colSpan);\n\t\t\tvar title = this.props.title ? React.createElement(\"h4\", null, this.props.title) : null;\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: className}, \n\t\t\t\t\ttitle, \n\t\t\t\t\tthis.props.children\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = Section;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar contentTop = [];\n\n\tvar ScrollMixin = {\n\t\thandleWindowResize:function() {\n\t\t\tcontentTop.splice(0);\n\t\t\t// Set up content an array of locations\n\t\t\t$('.nav-sidebar').find('a').each(function(){\n\t\t\t\tcontentTop.push( $( $(this).attr('href') ).offset().top );\n\t\t\t})\n\t\t},\n\t\tcomponentWillUnMount:function() {\n\t\t\twindow.removeEventListener(\"resize\", this.handleWindowResize);\n\t\t},\n\t\tcomponentDidMount:function() {\n\t\t\twindow.addEventListener(\"resize\", this.handleWindowResize);\n\n\t\t\tvar topRange      = 200,  // measure from the top of the viewport to X pixels down\n\t\t\t\tedgeMargin    = 20,   // margin above the top or margin from the end of the page\n\t\t\t\tanimationTime = 500; // time in milliseconds\n\t\t\t\t\n\t\t\t// Stop animated scroll if the user does something\n\t\t\t$('html,body').bind('scroll mousedown DOMMouseScroll mousewheel keyup', function(e) {\n\t\t\t\tif ( e.which > 0 || e.type == 'mousedown' || e.type == 'mousewheel' ) {\n\t\t\t\t\t$('html,body').stop();\n\t\t\t\t}\n\t\t\t});\n\t\t\t//$('div#ContentSection').scrollTop(-50)\n\t\t\t// console.log($('html,body').scrollTop());\n\t\t\t// Set up content an array of locations\n\t\t\t$('.nav-sidebar').find('a').each(function(){\n\t\t\t\tcontentTop.push( $( $(this).attr('href') ).offset().top );\n\t\t\t})\n\t\t\t// Animate menu scroll to content\n\t\t\t$('.nav-sidebar').find('a').click(function() {\n\t\t\t\tvar sel = this,\n\t\t\t\t\tindex = $('.nav-sidebar a').index( $(this) ),\n\t\t\t\t\toffset = index === contentTop.length - 1 ? 0 : -50,\n\t\t\t\t\tnewTop = Math.min( contentTop[index], $(document).height() - $(window).height() ) + offset; // get content top or top position if at the document bottom\n\t\t\t\t// console.log(newTop)\n\t\t\t\t$('html,body')\n\t\t\t\t\t//.stop()\n\t\t\t\t\t.animate({\n\t\t\t\t\t\t\t'scrollTop' : newTop\n\t\t\t\t\t\t},\n\t\t\t\t\t\tanimationTime/*,\n\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\twindow.location.hash = $(sel).attr('href');\n\t\t\t\t\t\t}*/);\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\t$(window).scroll(function(e) {\n\t\t\t\t// console.log(e)\n\t\t\t\tvar winTop = $(window).scrollTop(),\n\t\t\t\t\tbodyHt = $(document).height(),\n\t\t\t\t\tvpHt = $(window).height() + edgeMargin;  // viewport height + margin\n\n\t\t\t\t$.each( contentTop, function(i, loc){\n\t\t\t\t\tif ( ( loc > winTop - edgeMargin && ( loc < winTop + topRange || ( winTop + vpHt ) >= bodyHt ) ) ) {\n\t\t\t\t\t\t$('ul.nav-sidebar li')\n\t\t\t\t\t\t\t.removeClass('active')\n\t\t\t\t\t\t\t.eq(i).addClass('active');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t\t\t$(window).on('hashchange', function() {\n\t\t\t\tvar top = $('html,body').scrollTop() - 50;\n\t\t\t\t$('html,body').scrollTop(top);\n\t\t\t});/**/\n\t\t}\n\t};\n\n\tmodule.exports = ScrollMixin;\n\n/***/ },\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<h4>React Stockcharts - Built with <a href=\\\"http://facebook.github.io/react/\\\">React JS</a> and <a href=\\\"http://d3js.org/\\\">d3</a></h4><p>The motivation of the React Stockcharts project is to provide flexible library to create charts to represent time series data, easy to learn, ability to customize by means of</p><ul><li>adding custom chart components</li><li>access the <code>svg</code> elements</li><li>styling with CSS</li></ul><p>There are many charting libraries available, but I feel there are very few that provide the features and flexibility to create stock charts that compete with the likes of the ones provided by commercial trading systems.</p><h4>SVG vs Canvas</h4><p>When deciding on a web technology for charts - not just charts, but ones which are interactive too - representing many many data points, the decision of performance is bound to come up, and HTML5 presents options. React Stockcharts is built on SVG</p><p>I am not going to debate between the pros and cons between SVG and Canvas. They are discussed at great length <a href=http://stackoverflow.com/questions/12310024/fast-and-responsive-interactive-charts-graphs-svg-canvas-other>here</a> and <a href=http://stackoverflow.com/questions/5882716/html5-canvas-vs-svg-vs-div>here</a>. Needless to say they are both very powerful and for charting, there really is no right answer. I have chosen to use SVG for React Stockcharts because,</p><ul><li>you will see very soon the performance is not an issue really, thanks to React JS and the virtual dom</li><li>the flexibility of development and the convinenience of debuging a DOM is hard to beat</li><li>styling with css is something I cannot give up</li></ul><p>That said, I do wish to some day create a fork of this on Canvas.</p><h4>DOM Manipulation</h4><p>The only place where DOM Manipulation is used is in the <code>XAxis</code> and <code>YAxis</code> components, I will soon migrate to use the native <code>svg</code> axes provided by <a href=https://github.com/esbullington/react-d3>react-d3</a>, at which time the entire project will be built with native svg components making server side rendering possible.</p><p>Now let us get started with a very simple AreaChart</p>\";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p><code>data.tsv</code></p><table><thead><tr><th>date<th>close<tbody><tr><td>2011-01-24<td>5743.25<tr><td>2011-01-25<td>5687.4<tr><td>2011-01-27<td>5604.3<tr><td>2011-01-28<td>5512.15<tr><td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>'d3'</span>);\\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>\\\"%Y-%m-%d\\\"</span>).parse\\n\\nd3.tsv(<span class=hljs-string>\\\"path/to/data.tsv\\\"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\\n    data.forEach((d, i) =&gt; {\\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\\n        d.close = +d.close;\\n    });\\n...\\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>Let us review each line</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n</code></pre><p>Creates an <code>svg</code> element with the provided <code>height</code> and <code>width</code> and creates a <code>svg:g</code> element with the provided <code>margin</code>. <code>data</code> is well the data used to plot.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\\n</code></pre><p>There can be one or more <code>Chart</code>s in each <code>ChartCanvas</code> and hence the need for an <code>id</code> attribute.</p><p>If you are not familiar with <a href=https://github.com/mbostock/d3/wiki/Scales>scales</a> in d3 I recommend doing so. Each <code>Chart</code> defines an <code>xScale</code> and <code>yScale</code>. For starters, it is easier to understand scale as a function which converts a <code>domain</code> say 2011-01-01 to 2014-12-31 to a <code>range</code> say 0 to 500 pixels. This scale can now interpolate an input date to a value in pixels which can be drawn.</p><p>With SVG it is important to understand the coordinate system and where the origin <code>(0, 0)</code> is located. for a SVG of size 300x100, the</p><p><img src=http://www.w3.org/TR/SVG/images/coords/InitialCoords.png alt=\\\"alt text\\\" title=\\\"Logo Title Text 1\\\"></p><p>For more details about the SVG coordinate system see <a href=http://www.w3.org/TR/SVG/coords.html>here</a></p><p>Back to scales,</p><p>A time scale converts a date/time domain to a range, this is used as the xScale, the xDomain is calculated from the input data, and the range is calculated as <code>height - margin.left - margin.right</code>.</p><p>A Linear scale converts a <code>domain</code> say 4600 - 6200 to a <code>range</code> say 0 to 300 pixels. Like the name represents the data in between is interpolated linear, similarly there is log scale which creates a logrithmic scale, which is not linear.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\\n</code></pre><p>The <code>ticks</code> attribute simple passes on the value to the <a href=https://github.com/mbostock/d3/wiki/SVG-Axes#ticks>d3.axis</a>, the <code>XAxis</code> also has the following optional attributes <code>innerTickSize, outerTickSize, tickFormat, tickPadding, tickSize, ticks, tickValues</code> all of which correspond to a function with the same name in d3.axis.</p><p><code>axisAt</code> takes on possible values as <code>top, middle, bottom</code> for advanced cases, you can also pass in a number indicating the pixel position where the axis has to be drawn.</p><p><code>orient</code> takes on possible values as <code>top, bottom</code>, this orients the axis ticks on the top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> /&gt;</span>\\n</code></pre><p>Similar to <code>XAxis</code> except left/right instead of top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p>A <code>DataSeries</code> is a shell component intended to house the x and y Accessor. You will find in other examples below how <code>DataSeries</code> helps create a yAccessor with more than one y value to plot for a given x, like in candlestick.</p><p>If you are not clear what the arrow functions mean, read more about them <a href=https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions>here</a>. In short</p><p><code>(d) =&gt; d.close</code> means <code>function (d) { return d.close; }</code></p><p><code>(d) =&gt; d.date</code> means <code>function (d) { return d.date; }</code></p><h3>Highly customizable you say, how?</h3><p>So you dont want to display the <code>YAxis</code> at all, go ahead and just remove that.</p><p>Want to display <code>YAxis</code> on both left and right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> /&gt;</span>\\n</code></pre><p>next to the existing <code>YAxis</code></p><p>Want to add a <code>YAxis</code> with a percent scale on the right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>percentScale</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\".0%\\\")}</span>/&gt;</span>\\n</code></pre><p>and you will get.</p>\";\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** react-stockcharts-dashboard.js\n **/","'use strict';\n/**/\nvar React = require('react');\nvar d3 = require('d3');\nvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\nrequire('styles/react-stockcharts');\nrequire('stylesheets/re-stock');\n\nvar Nav = require('lib/navbar');\nvar Sidebar = require('lib/sidebar');\nvar MainContainer = require('lib/main-container');\nvar MenuGroup = require('lib/menu-group');\nvar MenuItem = require('lib/menu-item');\nvar ContentSection = require('lib/content-section');\nvar Row = require('lib/row');\nvar Section = require('lib/section');\nvar ScrollMixin = require('lib/scroll-mixin');\n\n\nd3.tsv(\"data/data.tsv\", function(err, data) {\n\tdata.forEach((d, i) => {\n\t\td.date = new Date(parseDate(d.date).getTime());\n\t\td.open = +d.open;\n\t\td.high = +d.high;\n\t\td.low = +d.low;\n\t\td.close = +d.close;\n\t\td.volume = +d.volume;\n\t\t// console.log(d);\n\t});\n\n\tvar AreaChart = require('./lib/examples/areachart').init(data);\n\tvar AreaChartWithYPercent = require('./lib/examples/areachart-with-ypercent').init(data);\n\tvar AreaChartWithCrossHairMousePointer = require('./lib/examples/areachart-with-crosshair-mousepointer').init(data);\n\tvar AreaChartWithVerticalMousePointer = require('./lib/examples/areachart-with-mousepointer').init(data);\n\tvar AreaChartWithToolTip = require('./lib/examples/areachart-with-tooltip').init(data);\n\tvar AreaChartWithMA = require('./lib/examples/areachart-with-ma').init(data);\n\tvar AreaChartWithEdgeCoordinates = require('./lib/examples/areachart-with-edge-coordinates').init(data);\n\tvar LineChart = require('./lib/examples/linechart').init(data);\n\tvar CandleStickChart = require('./lib/examples/candlestickchart').init(data);\n\tvar SyncMouseMove = require('./lib/examples/synchronized-mouse-move').init(data);\n\tvar AreaChartWithZoom = require('./lib/examples/areachart-with-zoom').init(data);\n\tvar AreaChartWithZoomPan = require('./lib/examples/areachart-with-zoom-and-pan').init(data);\n\n\tvar ExamplesPage = React.createClass({\n\t\tmixins: [ScrollMixin],\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<body>\n\t\t\t\t\t<Nav />\n\t\t\t\t\t<MainContainer>\n\t\t\t\t\t\t<Sidebar>\n\t\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t\t<MenuItem label=\"Overview\" active={true} />\n\t\t\t\t\t\t\t\t<MenuItem label=\"AreaChart\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"CandlestickChart\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"LineChart\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"LineChart2\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"LineChart3\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"LineChart4\" />\n\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t</Sidebar>\n\t\t\t\t\t\t<ContentSection title=\"Getting Started\">\n\t\t\t\t\t\t\t<Row anchor=\"Overview\" title=\"Home\">\n\t\t\t\t\t\t\t\t<Section  colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/OVERVIEW')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"AreaChart\">\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<AreaChart />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/AREACHART')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<AreaChartWithYPercent />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"CandlestickChart\">\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"LineChart\">\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"LineChart2\">\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"LineChart3\">\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"LineChart4\">\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</ContentSection>\n\t\t\t\t\t</MainContainer>\n\t\t\t\t</body>\n\t\t\t);\n\t\t}\n\t});\n\n\tReact.render(<ExamplesPage />, document.body);\n});\n// React.render(<ExamplesPage />, document.getElementById(\"area\"));\n\n//module.exports = ExamplesPage;\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/dashboard.js\n **/","'use strict';\n\nvar React = require('react');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChart = React.createClass({/**/\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\t\t\t\tconsole.log(this.state.width);\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<Chart id={0} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn AreaChart;\n\t}\n}\n\n/*\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\n<ChartCanvas  width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t<Chart data={this.state.data}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(0.15)}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.log()}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data} interval=\"D\"\n\t\tpolyLinear={false}\n\t\tviewRange={dateRange}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={4} tickFormat={d3.time.format(\"%b\")}/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data} interval=\"D\"\n\t\tpolyLinear={false}\n\t\tviewRange={dateRange}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data}\n\t\tpolyLinear={true}\n\t\tdateAccessor={(d) => d.date}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(.5)}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n\n\n<DataTransform data={} transformDataAs={POLYLINEAR}>\n\t<DataTransform transformDataAs={RENKO}>\n\t\t<Chart currentItemEmitter={} xScale={} yScale={} xDomainUpdate={true} yDomainUpdate={true}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={} xAccesor={} tooltipDisplayEmitter={}>\n\t\t\t\t<CandlestickSeries/>\n\t\t\t</DataSeries\n\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} xAccesor={} yAccesor={} toolTipId={}>\n\t\t\t\t<LineSeries />\n\t\t\t</ChartOverlay>\n\t\t\t<ChartOverlay type=\"macrossover\" options={{ period: 10 }} id={0}> //moving average crossover\n\t\t\t\t<Markers />\n\t\t\t</ChartOverlay>\n\t\t</Chart>\n\t</DataTransform>\n\t<DataTransform transformDataAs={VOLUMEPROFILE}>\n\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t<YAxis />\n\t\t\t<LineSeries />\n\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} id={0}>\n\t\t\t\t<LineSeries />\n\t\t\t</ChartOverlay>\n\t\t\t<TooltipEmitter sendUsing={} />\n\t\t</Chart>\n\t</DataTransform>\n\t<Chart xAccesor={} yAccesor={}>\n\t\t<YAxis />\n\t\t<HistogramSeries  />\n\t\t<EdgeCoordinate />\n\t</Chart>\n\t<MouseCoordinates listenTo={} /> // this is here so it is above all charts\n\t<EdgeCoordinate /> // this is here so it is above all charts and I can click and bring an edge coordinate to the front\n\t<EdgeCoordinate edgeAt=\"\" orient=\"\" />\n\t<EventCapture mouseMove={true} zoom={true} pan={true} />\n\t<TooltipContainer>\n\t\t<OHLCTooltip />\n\t\t<MovingAverageTooltipContainer>\n\t\t\t<MATooltip onClick={} onToggle={} onRemove={} toolTipId={} />\n\t\t\t<MATooltip toolTipId={} />\n\t\t\t<MATooltip toolTipId={} />\n\t\t</MovingAverageTooltipContainer>\n\t</TooltipContainer>\n</DataTransform>\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart.jsx\n **/","'use strict';\n\nvar React = require('react');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithYPercent = React.createClass({/**/\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\t\t\t\tconsole.log(this.state.width);\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<Chart id={0} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn AreaChartWithYPercent;\n\t}\n}\n\n/*\n\n<ChartCanvas  width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t<Chart data={this.state.data}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(0.15)}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.log()}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data} interval=\"D\"\n\t\tpolyLinear={false}\n\t\tviewRange={dateRange}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={4} tickFormat={d3.time.format(\"%b\")}/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data} interval=\"D\"\n\t\tpolyLinear={false}\n\t\tviewRange={dateRange}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data}\n\t\tpolyLinear={true}\n\t\tdateAccessor={(d) => d.date}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(.5)}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n\n\n<DataTransform data={} transformDataAs={POLYLINEAR}>\n\t<DataTransform transformDataAs={RENKO}>\n\t\t<Chart currentItemEmitter={} xScale={} yScale={} xDomainUpdate={true} yDomainUpdate={true}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={} xAccesor={} tooltipDisplayEmitter={}>\n\t\t\t\t<CandlestickSeries/>\n\t\t\t</DataSeries\n\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} xAccesor={} yAccesor={} toolTipId={}>\n\t\t\t\t<LineSeries />\n\t\t\t</ChartOverlay>\n\t\t\t<ChartOverlay type=\"macrossover\" options={{ period: 10 }} id={0}> //moving average crossover\n\t\t\t\t<Markers />\n\t\t\t</ChartOverlay>\n\t\t</Chart>\n\t</DataTransform>\n\t<DataTransform transformDataAs={VOLUMEPROFILE}>\n\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t<YAxis />\n\t\t\t<LineSeries />\n\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} id={0}>\n\t\t\t\t<LineSeries />\n\t\t\t</ChartOverlay>\n\t\t\t<TooltipEmitter sendUsing={} />\n\t\t</Chart>\n\t</DataTransform>\n\t<Chart xAccesor={} yAccesor={}>\n\t\t<YAxis />\n\t\t<HistogramSeries  />\n\t\t<EdgeCoordinate />\n\t</Chart>\n\t<MouseCoordinates listenTo={} /> // this is here so it is above all charts\n\t<EdgeCoordinate /> // this is here so it is above all charts and I can click and bring an edge coordinate to the front\n\t<EdgeCoordinate edgeAt=\"\" orient=\"\" />\n\t<EventCapture mouseMove={true} zoom={true} pan={true} />\n\t<TooltipContainer>\n\t\t<OHLCTooltip />\n\t\t<MovingAverageTooltipContainer>\n\t\t\t<MATooltip onClick={} onToggle={} onRemove={} toolTipId={} />\n\t\t\t<MATooltip toolTipId={} />\n\t\t\t<MATooltip toolTipId={} />\n\t\t</MovingAverageTooltipContainer>\n\t</TooltipContainer>\n</DataTransform>\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-ypercent.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithCrossHairMousePointer = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas data={data} width={this.state.width} height={this.state.height} margin={{left: 5, right: 90, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={3}>\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<MouseCoordinates forChart={3} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true} mainChart={3}/>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithCrossHairMousePointer;\n\t}\n}\n\n/*\n\tchangeWidth() {\n\t\tthis.setState({\n\t\t\twidth: this.state.width + 10\n\t\t});\n\t},\n\t\t<rect width={100} height={100} onClick={this.changeWidth}/>\n*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-crosshair-mousepointer.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, VerticalMousePointer = ReStock.VerticalMousePointer\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithVerticalMousePointer = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas data={data} width={this.state.width} height={this.state.height} margin={{left: 50, right: 100, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={0} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<CurrentCoordinate forChart={0} />\n\t\t\t\t\t\t<MouseCoordinates forChart={0} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<VerticalMousePointer />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true}  mainChart={0}/>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn AreaChartWithVerticalMousePointer;\n\t}\n}\n\n/*\n\t\t\t\t\t\t\t\t\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-mousepointer.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithToolTip = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas data={data} width={this.state.width} height={this.state.height} margin={{left: 5, right: 90, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={1}>\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true} mainChart={1} />\n\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t<OHLCTooltip forChart={1} />\n\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithToolTip;\n\t}\n}\n\n/*\n\tchangeWidth() {\n\t\tthis.setState({\n\t\t\twidth: this.state.width + 10\n\t\t});\n\t},\t\t\t\t\t\t\t<OHLCTooltip xDisplayFormat={dateFormat} accessor={(d) => {return {open: d.open, high: d.high, low: d.low, close: d.close, volume: d.volume}}}/>\n\n\t\t<rect width={100} height={100} onClick={this.changeWidth}/>\n*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-tooltip.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\t, OverlaySeries = ReStock.OverlaySeries\n\t, LineSeries = ReStock.LineSeries\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithMA = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\thandleMATooltipClick(overlay) {\n\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas data={data} width={this.state.width} height={this.state.height} margin={{left: 5, right: 90, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={1}>\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t\t<OverlaySeries id={0} type=\"sma\" options={{ period: 50 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={1} type=\"sma\" options={{ period: 150 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={3} type=\"sma\" options={{ period: 250 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={4} type=\"sma\" options={{ period: 350 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={5} type=\"sma\" options={{ period: 450 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} />\n\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true}  mainChart={1}/>\n\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t<OHLCTooltip forChart={1} />\n\t\t\t\t\t\t\t<MovingAverageTooltip forChart={1} onClick={this.handleMATooltipClick} />\n\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithMA;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-ma.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\t, OverlaySeries = ReStock.OverlaySeries\n\t, LineSeries = ReStock.LineSeries\n\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t, EdgeContainer = ReStock.EdgeContainer\n\t, EdgeIndicator = ReStock.EdgeIndicator\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithEdgeCoordinates = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetEventStore() {\n\t\t\t\treturn this.refs.eventStore.getEventStore();\n\t\t\t},\n\t\t\tupdateEventStore(eventStore) {\n\t\t\t\treturn this.refs.eventStore.updateEventStore(eventStore);\n\t\t\t},\n\t\t\thandleMATooltipClick(overlay) {\n\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas \n\t\t\t\t\t\twidth={this.state.width} height={this.state.height}\n\t\t\t\t\t\tmargin={{left: 5, right: 90, top:10, bottom: 30}} data={data} ref=\"eventStore\">\n\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t\t<OverlaySeries id={0} type=\"sma\" options={{ period: 50 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={1} type=\"sma\" options={{ period: 150 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={3} type=\"sma\" options={{ period: 250 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={4} type=\"sma\" options={{ period: 350 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={5} type=\"sma\" options={{ period: 450 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} />\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={1} />\n\t\t\t\t\t\t<EdgeContainer>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={5}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</EdgeContainer>\n\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true}  mainChart={1}/>\n\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t<OHLCTooltip forChart={1} />\n\t\t\t\t\t\t\t<MovingAverageTooltip forChart={1} onClick={this.handleMATooltipClick} />\n\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithEdgeCoordinates;\n\t}\n}\n\n/*\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t<EdgeContainer>\n\n\t\t\t\t\t\t</EdgeContainer>\n\n\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t/>\n*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-edge-coordinates.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, LineSeries = ReStock.LineSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries;\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar LineChart = React.createClass({\n\t\t\trender() {\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas  data={data} width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={1}>\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<LineSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn LineChart\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/linechart.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries;\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t\t\t\t\t\t<DataTransform transformType=\"stockscale\" data={data}>\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" axisPadding={10} orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")} ticks={3}/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor}>\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t</DataTransform>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithEdgeCoordinates = require('./areachart-with-edge-coordinates').init(data);\n\n\t\tvar SyncMouseMove = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\thandleMATooltipClick(overlay) {\n\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t},\n\t\t\tcomponentDidMount() {\n\t\t\t\tvar eventStore = this.refs.left.getEventStore();\n\t\t\t\tthis.refs.right.updateEventStore(eventStore);\n\t\t\t\t// console.log('SyncMouseMove.componentDidMount', eventStore);\n\t\t\t},\n\t\t\tcomponentDidUpdate() {\n\t\t\t\t// console.log('SyncMouseMove.componentDidUpdate');\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"col-md-6 react-stockchart\">\n\t\t\t\t\t\t<AreaChartWithEdgeCoordinates ref=\"left\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-6 react-stockchart\">\n\t\t\t\t\t\t<AreaChartWithEdgeCoordinates ref=\"right\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn SyncMouseMove;\n\t}\n}\n\n/*\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t<EdgeContainer>\n\n\t\t\t\t\t\t</EdgeContainer>\n\n\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t/>\n*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/synchronized-mouse-move.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\t, OverlaySeries = ReStock.OverlaySeries\n\t, LineSeries = ReStock.LineSeries\n\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t, EdgeContainer = ReStock.EdgeContainer\n\t, EdgeIndicator = ReStock.EdgeIndicator\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithZoom = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\thandleMATooltipClick(overlay) {\n\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas \n\t\t\t\t\t\twidth={this.state.width} height={this.state.height}\n\t\t\t\t\t\tmargin={{left: 65, right: 90, top:30, bottom: 30}} data={data} ref=\"eventStore\">\n\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t\t<OverlaySeries id={0} type=\"sma\" options={{ period: 50 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={1} type=\"sma\" options={{ period: 150 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={2} type=\"sma\" options={{ period: 250 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={3} type=\"sma\" options={{ period: 350 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={4} type=\"sma\" options={{ period: 450 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} />\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={1} />\n\t\t\t\t\t\t<EdgeContainer>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={0}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={2}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={3}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</EdgeContainer>\n\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true} zoom={true} mainChart={1}/>\n\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t<OHLCTooltip forChart={1} origin={[-60, -20]}/>\n\t\t\t\t\t\t\t<MovingAverageTooltip forChart={1} onClick={this.handleMATooltipClick}  origin={[-60, -10]}/>\n\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithZoom;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-zoom.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar Nav = React.createClass({\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-fixed-top\">\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t\t<a className=\"navbar-brand\" href=\"index.html\">React Stockcharts</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n});\n\nmodule.exports = Nav;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/navbar.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar SideBar = React.createClass({\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"col-sm-3 col-md-2 sidebar\">{this.props.children}</div>\n\t\t);\n\t}\n});\n\nmodule.exports = SideBar;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/sidebar.jsx\n **/","'use strict';\nvar React = require('react');\nvar Row = require('lib/row');\n\nvar MainContainer = React.createClass({\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container-fluid\" id=\"MainContainer\">\n\t\t\t\t<Row>{this.props.children}</Row>\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nmodule.exports = MainContainer;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/main-container.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar MenuGroup = React.createClass({\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"nav nav-sidebar\">{this.props.children}</ul>\n\t\t);\n\t}\n});\n\nmodule.exports = MenuGroup;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/menu-group.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar MenuItem = React.createClass({\n\tpropTypes: {\n\t\tactive: React.PropTypes.bool,\n\t\tanchor: React.PropTypes.string,\n\t\tlabel: React.PropTypes.string.isRequired\n\t},\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tactive: false,\n\t\t};\n\t},\n\trender() {\n\t\tvar className = (this.props.active) ? 'active' : '';\n\t\tvar anchor = this.props.anchor || this.props.label;\n\t\treturn (\n\t\t\t<li className={className}>\n\t\t\t\t<a href={'#' + anchor}>{this.props.label}\n\t\t\t\t\t{(this.props.active) ? <span className=\"sr-only\">(current)</span> : ''}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t}\n});\n\nmodule.exports = MenuItem;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/menu-item.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar ContentSection = React.createClass({\n\tpropTypes: {\n\t\ttitle: React.PropTypes.string.isRequired\n\t},\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"ContentSection\" className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n\t\t\t\t<h1 className=\"page-header\">{this.props.title}</h1>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nmodule.exports = ContentSection;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/content-section.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar Row = React.createClass({\n\tpropTypes: {\n\t\ttitle: React.PropTypes.string,\n\t\tanchor: React.PropTypes.string\n\t},\n\trender() {\n\t\tvar anchor = this.props.anchor || this.props.title;\n\t\tvar title = this.props.title\n\t\t\t\t? <h4><a id={anchor} href={'#' + anchor}>{this.props.title}</a></h4>\n\t\t\t\t: null;\n\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t{title}\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nmodule.exports = Row;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/row.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar Section = React.createClass({\n\tpropTypes: {\n\t\tcolSpan: React.PropTypes.number.isRequired,\n\t\ttitle: React.PropTypes.string\n\t},\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tcolSpan: 1\n\t\t}\n\t},\n\trender() {\n\t\tvar className = this.props.className + ' col-md-' + (6 * this.props.colSpan);\n\t\tvar title = this.props.title ? <h4>{this.props.title}</h4> : null;\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t{title}\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nmodule.exports = Section;\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/section.jsx\n **/","'use strict';\nvar contentTop = [];\n\nvar ScrollMixin = {\n\thandleWindowResize() {\n\t\tcontentTop.splice(0);\n\t\t// Set up content an array of locations\n\t\t$('.nav-sidebar').find('a').each(function(){\n\t\t\tcontentTop.push( $( $(this).attr('href') ).offset().top );\n\t\t})\n\t},\n\tcomponentWillUnMount() {\n\t\twindow.removeEventListener(\"resize\", this.handleWindowResize);\n\t},\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"resize\", this.handleWindowResize);\n\n\t\tvar topRange      = 200,  // measure from the top of the viewport to X pixels down\n\t\t\tedgeMargin    = 20,   // margin above the top or margin from the end of the page\n\t\t\tanimationTime = 500; // time in milliseconds\n\t\t\t\n\t\t// Stop animated scroll if the user does something\n\t\t$('html,body').bind('scroll mousedown DOMMouseScroll mousewheel keyup', function(e) {\n\t\t\tif ( e.which > 0 || e.type == 'mousedown' || e.type == 'mousewheel' ) {\n\t\t\t\t$('html,body').stop();\n\t\t\t}\n\t\t});\n\t\t//$('div#ContentSection').scrollTop(-50)\n\t\t// console.log($('html,body').scrollTop());\n\t\t// Set up content an array of locations\n\t\t$('.nav-sidebar').find('a').each(function(){\n\t\t\tcontentTop.push( $( $(this).attr('href') ).offset().top );\n\t\t})\n\t\t// Animate menu scroll to content\n\t\t$('.nav-sidebar').find('a').click(function() {\n\t\t\tvar sel = this,\n\t\t\t\tindex = $('.nav-sidebar a').index( $(this) ),\n\t\t\t\toffset = index === contentTop.length - 1 ? 0 : -50,\n\t\t\t\tnewTop = Math.min( contentTop[index], $(document).height() - $(window).height() ) + offset; // get content top or top position if at the document bottom\n\t\t\t// console.log(newTop)\n\t\t\t$('html,body')\n\t\t\t\t//.stop()\n\t\t\t\t.animate({\n\t\t\t\t\t\t'scrollTop' : newTop\n\t\t\t\t\t},\n\t\t\t\t\tanimationTime/*,\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\twindow.location.hash = $(sel).attr('href');\n\t\t\t\t\t}*/);\n\t\t\treturn false;\n\t\t});\n\n\t\t$(window).scroll(function(e) {\n\t\t\t// console.log(e)\n\t\t\tvar winTop = $(window).scrollTop(),\n\t\t\t\tbodyHt = $(document).height(),\n\t\t\t\tvpHt = $(window).height() + edgeMargin;  // viewport height + margin\n\n\t\t\t$.each( contentTop, function(i, loc){\n\t\t\t\tif ( ( loc > winTop - edgeMargin && ( loc < winTop + topRange || ( winTop + vpHt ) >= bodyHt ) ) ) {\n\t\t\t\t\t$('ul.nav-sidebar li')\n\t\t\t\t\t\t.removeClass('active')\n\t\t\t\t\t\t.eq(i).addClass('active');\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t\t$(window).on('hashchange', function() {\n\t\t\tvar top = $('html,body').scrollTop() - 50;\n\t\t\t$('html,body').scrollTop(top);\n\t\t});/**/\n\t}\n};\n\nmodule.exports = ScrollMixin;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/scroll-mixin.jsx\n **/","module.exports = \"<h4>React Stockcharts - Built with <a href=\\\"http://facebook.github.io/react/\\\">React JS</a> and <a href=\\\"http://d3js.org/\\\">d3</a></h4><p>The motivation of the React Stockcharts project is to provide flexible library to create charts to represent time series data, easy to learn, ability to customize by means of</p><ul><li>adding custom chart components</li><li>access the <code>svg</code> elements</li><li>styling with CSS</li></ul><p>There are many charting libraries available, but I feel there are very few that provide the features and flexibility to create stock charts that compete with the likes of the ones provided by commercial trading systems.</p><h4>SVG vs Canvas</h4><p>When deciding on a web technology for charts - not just charts, but ones which are interactive too - representing many many data points, the decision of performance is bound to come up, and HTML5 presents options. React Stockcharts is built on SVG</p><p>I am not going to debate between the pros and cons between SVG and Canvas. They are discussed at great length <a href=http://stackoverflow.com/questions/12310024/fast-and-responsive-interactive-charts-graphs-svg-canvas-other>here</a> and <a href=http://stackoverflow.com/questions/5882716/html5-canvas-vs-svg-vs-div>here</a>. Needless to say they are both very powerful and for charting, there really is no right answer. I have chosen to use SVG for React Stockcharts because,</p><ul><li>you will see very soon the performance is not an issue really, thanks to React JS and the virtual dom</li><li>the flexibility of development and the convinenience of debuging a DOM is hard to beat</li><li>styling with css is something I cannot give up</li></ul><p>That said, I do wish to some day create a fork of this on Canvas.</p><h4>DOM Manipulation</h4><p>The only place where DOM Manipulation is used is in the <code>XAxis</code> and <code>YAxis</code> components, I will soon migrate to use the native <code>svg</code> axes provided by <a href=https://github.com/esbullington/react-d3>react-d3</a>, at which time the entire project will be built with native svg components making server side rendering possible.</p><p>Now let us get started with a very simple AreaChart</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/OVERVIEW.md\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = \"<p><code>data.tsv</code></p><table><thead><tr><th>date<th>close<tbody><tr><td>2011-01-24<td>5743.25<tr><td>2011-01-25<td>5687.4<tr><td>2011-01-27<td>5604.3<tr><td>2011-01-28<td>5512.15<tr><td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>'d3'</span>);\\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>\\\"%Y-%m-%d\\\"</span>).parse\\n\\nd3.tsv(<span class=hljs-string>\\\"path/to/data.tsv\\\"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\\n    data.forEach((d, i) =&gt; {\\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\\n        d.close = +d.close;\\n    });\\n...\\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>Let us review each line</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n</code></pre><p>Creates an <code>svg</code> element with the provided <code>height</code> and <code>width</code> and creates a <code>svg:g</code> element with the provided <code>margin</code>. <code>data</code> is well the data used to plot.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\\n</code></pre><p>There can be one or more <code>Chart</code>s in each <code>ChartCanvas</code> and hence the need for an <code>id</code> attribute.</p><p>If you are not familiar with <a href=https://github.com/mbostock/d3/wiki/Scales>scales</a> in d3 I recommend doing so. Each <code>Chart</code> defines an <code>xScale</code> and <code>yScale</code>. For starters, it is easier to understand scale as a function which converts a <code>domain</code> say 2011-01-01 to 2014-12-31 to a <code>range</code> say 0 to 500 pixels. This scale can now interpolate an input date to a value in pixels which can be drawn.</p><p>With SVG it is important to understand the coordinate system and where the origin <code>(0, 0)</code> is located. for a SVG of size 300x100, the</p><p><img src=http://www.w3.org/TR/SVG/images/coords/InitialCoords.png alt=\\\"alt text\\\" title=\\\"Logo Title Text 1\\\"></p><p>For more details about the SVG coordinate system see <a href=http://www.w3.org/TR/SVG/coords.html>here</a></p><p>Back to scales,</p><p>A time scale converts a date/time domain to a range, this is used as the xScale, the xDomain is calculated from the input data, and the range is calculated as <code>height - margin.left - margin.right</code>.</p><p>A Linear scale converts a <code>domain</code> say 4600 - 6200 to a <code>range</code> say 0 to 300 pixels. Like the name represents the data in between is interpolated linear, similarly there is log scale which creates a logrithmic scale, which is not linear.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\\n</code></pre><p>The <code>ticks</code> attribute simple passes on the value to the <a href=https://github.com/mbostock/d3/wiki/SVG-Axes#ticks>d3.axis</a>, the <code>XAxis</code> also has the following optional attributes <code>innerTickSize, outerTickSize, tickFormat, tickPadding, tickSize, ticks, tickValues</code> all of which correspond to a function with the same name in d3.axis.</p><p><code>axisAt</code> takes on possible values as <code>top, middle, bottom</code> for advanced cases, you can also pass in a number indicating the pixel position where the axis has to be drawn.</p><p><code>orient</code> takes on possible values as <code>top, bottom</code>, this orients the axis ticks on the top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> /&gt;</span>\\n</code></pre><p>Similar to <code>XAxis</code> except left/right instead of top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p>A <code>DataSeries</code> is a shell component intended to house the x and y Accessor. You will find in other examples below how <code>DataSeries</code> helps create a yAccessor with more than one y value to plot for a given x, like in candlestick.</p><p>If you are not clear what the arrow functions mean, read more about them <a href=https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions>here</a>. In short</p><p><code>(d) =&gt; d.close</code> means <code>function (d) { return d.close; }</code></p><p><code>(d) =&gt; d.date</code> means <code>function (d) { return d.date; }</code></p><h3>Highly customizable you say, how?</h3><p>So you dont want to display the <code>YAxis</code> at all, go ahead and just remove that.</p><p>Want to display <code>YAxis</code> on both left and right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> /&gt;</span>\\n</code></pre><p>next to the existing <code>YAxis</code></p><p>Want to add a <code>YAxis</code> with a percent scale on the right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>percentScale</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\".0%\\\")}</span>/&gt;</span>\\n</code></pre><p>and you will get.</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/AREACHART.md\n ** module id = 30\n ** module chunks = 0\n **/"],"sourceRoot":""}