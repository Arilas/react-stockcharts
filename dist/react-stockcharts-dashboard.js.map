{"version":3,"sources":["webpack:///react-stockcharts-dashboard.js","webpack:///./docs/dashboard.js","webpack:///./docs/lib/examples/areachart.jsx","webpack:///./docs/lib/examples/areachart-with-ypercent.jsx","webpack:///./docs/lib/examples/areachart-with-crosshair-mousepointer.jsx","webpack:///./docs/lib/examples/areachart-with-mousepointer.jsx","webpack:///./docs/lib/examples/areachart-with-tooltip.jsx","webpack:///./docs/lib/examples/areachart-with-ma.jsx","webpack:///./docs/lib/examples/areachart-with-edge-coordinates.jsx","webpack:///./docs/lib/examples/linechart.jsx","webpack:///./docs/lib/examples/candlestickchart.jsx","webpack:///./docs/lib/examples/candlestickchart-stockscale.jsx","webpack:///./docs/lib/examples/synchronized-mouse-move.jsx","webpack:///./docs/lib/examples/areachart-with-zoom.jsx","webpack:///./docs/lib/examples/candlestickchart-with-volume-histogram.jsx","webpack:///./docs/lib/examples/candlestickchart-with-volume-histogram2.jsx","webpack:///./docs/lib/examples/candlestickchart-with-crosshair.jsx","webpack:///./docs/lib/examples/candlestickchart-with-zoompan.jsx","webpack:///./docs/lib/examples/candlestickchart-with-ma.jsx","webpack:///./docs/lib/examples/candlestickchart-with-edge.jsx","webpack:///./docs/lib/navbar.jsx","webpack:///./docs/lib/sidebar.jsx","webpack:///./docs/lib/main-container.jsx","webpack:///./docs/lib/menu-group.jsx","webpack:///./docs/lib/menu-item.jsx","webpack:///./docs/lib/content-section.jsx","webpack:///./docs/lib/row.jsx","webpack:///./docs/lib/section.jsx","webpack:///./docs/lib/scroll-mixin.jsx","webpack:///./docs/md/OVERVIEW.md","webpack:///./docs/md/AREACHART.md","webpack:///./docs/md/CANDLESTICK.md","webpack:///./docs/md/CANDLESTICK-IMPROVED.md","webpack:///./docs/md/FINANCETIMESCALE.md","webpack:///./docs/md/VOLUME-HISTOGRAM-INTRO.md","webpack:///./docs/md/VOLUME-HISTOGRAM.md","webpack:///./docs/md/VOLUME-HISTOGRAM-Contd.md","webpack:///./docs/md/MOUSEPOINTER.md","webpack:///./docs/md/ZOOM-AND-PAN.md","webpack:///./docs/md/MOVING-AVERAGE-OVERLAY.md","webpack:///./docs/md/EDGE-COORDINATE.md","webpack:///./docs/md/LOTS-OF-DATA.md","webpack:///./docs/md/COMING-SOON.md"],"names":["webpackJsonp","module","exports","__webpack_require__","renderPage","data","dataFull","forEach","d","date","Date","parseDate","getTime","open","high","low","close","volume","AreaChart","init","AreaChartWithYPercent","CandleStickChart","CandleStickStockScaleChart","CandleStickStockScaleChartWithVolumeHistogramV1","CandleStickStockScaleChartWithVolumeHistogramV2","CandleStickChartWithCHMousePointer","CandleStickChartWithZoomPan","CandleStickChartWithMA","CandleStickChartWithEdge","CandleStickChartWithLotsOfData","ExamplesPage","React","createClass","displayName","render","createElement","Nav","MainContainer","Sidebar","MenuGroup","MenuItem","label","active","ContentSection","title","Row","Section","colSpan","dangerouslySetInnerHTML","__html","className","document","body","d3","time","format","parse","tsv","err","MSFT","err2","MSFTFull","ReStock","ChartCanvas","XAxis","YAxis","AreaSeries","Chart","Translate","DataSeries","ChartWidthMixin","InitialStateMixin","mixins","this","state","width","height","margin","left","right","top","bottom","id","axisAt","orient","ticks","yAccessor","xAccessor","console","log","percentScale","tickFormat","EventCapture","MouseCoordinates","CrossHair","AreaChartWithCrossHairMousePointer","getInitialState","dateFormat","from","to","forChart","xDisplayFormat","yDisplayFormat","y","toFixed","mouseMove","mainChart","VerticalMousePointer","CurrentCoordinate","AreaChartWithVerticalMousePointer","TooltipContainer","OHLCTooltip","AreaChartWithToolTip","OverlaySeries","LineSeries","MovingAverageTooltip","AreaChartWithMA","handleMATooltipClick","overlay","type","options","period","onClick","EdgeContainer","EdgeIndicator","AreaChartWithEdgeCoordinates","getEventStore","refs","eventStore","updateEventStore","ref","forOverlay","itemType","edgeAt","LineChart","CandlestickSeries","DataTransform","transformType","SyncMouseMove","componentDidMount","componentDidUpdate","AreaChartWithZoom","zoom","origin","HistogramSeries","w","h","pan","defaultFocus","pluck","e","interval","displayFormat","href","SideBar","props","children","propTypes","PropTypes","bool","anchor","string","isRequired","getDefaultProps","number","contentTop","ScrollMixin","handleWindowResize","splice","$","find","each","push","attr","offset","componentWillUnMount","window","removeEventListener","addEventListener","topRange","edgeMargin","animationTime","bind","which","stop","click","index","length","newTop","Math","min","animate","scrollTop","scroll","winTop","bodyHt","vpHt","i","loc","removeClass","eq","addClass","on"],"mappings":"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","file":"react-stockcharts-dashboard.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**/\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\n\t__webpack_require__(33);\n\t__webpack_require__(31);\n\n\tvar Nav = __webpack_require__(22);\n\tvar Sidebar = __webpack_require__(23);\n\tvar MainContainer = __webpack_require__(24);\n\tvar MenuGroup = __webpack_require__(25);\n\tvar MenuItem = __webpack_require__(26);\n\tvar ContentSection = __webpack_require__(27);\n\tvar Row = __webpack_require__(28);\n\tvar Section = __webpack_require__(29);\n\tvar ScrollMixin = __webpack_require__(30);\n\n\tfunction renderPage(data, dataFull) {\n\t\tdata.forEach(function(d, i)  {\n\t\t\td.date = new Date(parseDate(d.date).getTime());\n\t\t\td.open = +d.open;\n\t\t\td.high = +d.high;\n\t\t\td.low = +d.low;\n\t\t\td.close = +d.close;\n\t\t\td.volume = +d.volume;\n\t\t\t// console.log(d);\n\t\t});\n\n\t\tdataFull.forEach(function(d, i)  {\n\t\t\td.date = new Date(parseDate(d.date).getTime());\n\t\t\td.open = +d.open;\n\t\t\td.high = +d.high;\n\t\t\td.low = +d.low;\n\t\t\td.close = +d.close;\n\t\t\td.volume = +d.volume;\n\t\t\t// console.log(d);\n\t\t});\n\n\t\tvar AreaChart = __webpack_require__(4).init(data);\n\t\tvar AreaChartWithYPercent = __webpack_require__(5).init(data);\n\t\tvar AreaChartWithCrossHairMousePointer = __webpack_require__(6).init(data);\n\t\tvar AreaChartWithVerticalMousePointer = __webpack_require__(7).init(data);\n\t\tvar AreaChartWithToolTip = __webpack_require__(8).init(data);\n\t\tvar AreaChartWithMA = __webpack_require__(9).init(data);\n\t\tvar AreaChartWithEdgeCoordinates = __webpack_require__(10).init(data);\n\t\tvar LineChart = __webpack_require__(11).init(data);\n\t\tvar CandleStickChart = __webpack_require__(12).init(data);\n\t\tvar CandleStickStockScaleChart = __webpack_require__(13).init(data);\n\t\tvar SyncMouseMove = __webpack_require__(14).init(data);\n\t\tvar AreaChartWithZoom = __webpack_require__(15).init(data);\n\t\tvar AreaChartWithZoomPan = __webpack_require__(3).init(data);\n\t\tvar CandleStickStockScaleChart = __webpack_require__(13).init(data);\n\t\tvar CandleStickStockScaleChartWithVolumeHistogramV1 = __webpack_require__(16).init(data);\n\t\tvar CandleStickStockScaleChartWithVolumeHistogramV2 = __webpack_require__(17).init(data);\n\t\tvar CandleStickChartWithCHMousePointer = __webpack_require__(18).init(data);\n\t\tvar CandleStickChartWithZoomPan = __webpack_require__(19).init(data);\n\t\tvar CandleStickChartWithMA = __webpack_require__(20).init(data);\n\t\tvar CandleStickChartWithEdge = __webpack_require__(21).init(data);\n\t\tvar CandleStickChartWithLotsOfData = __webpack_require__(21).init(dataFull);\n\t\tvar ExamplesPage = React.createClass({displayName: \"ExamplesPage\",\n\t\t\t//mixins: [ScrollMixin],\n\t\t\trender:function() {\n\t\t\t\treturn (\n\t\t\t\t\tReact.createElement(\"body\", null, \n\t\t\t\t\t\tReact.createElement(Nav, null), \n\t\t\t\t\t\tReact.createElement(MainContainer, null, \n\t\t\t\t\t\t\tReact.createElement(Sidebar, null, \n\t\t\t\t\t\t\t\tReact.createElement(MenuGroup, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Overview\", active: true}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"AreaChart\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"CandlestickChart\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"stocktime scale\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Volume histogram\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Mouse pointer\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Zoom and Pan\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Overlay\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Edge coordinate\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Lots of data\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MenuItem, {label: \"Coming soon...\"})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(ContentSection, {title: \"Getting Started\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"Overview\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(36)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"AreaChart\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(AreaChart, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(37)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(AreaChartWithYPercent, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"CandlestickChart\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickChart, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(38)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickStockScaleChart, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(39)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"stocktime scale\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(40)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"Volume histogram\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(41)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickStockScaleChartWithVolumeHistogramV1, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(42)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickStockScaleChartWithVolumeHistogramV2, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(43)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"Mouse pointer\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickChartWithCHMousePointer, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(44)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"Zoom and Pan\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickChartWithZoomPan, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(45)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"Overlay\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickChartWithMA, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(46)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"Edge coordinate\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickChartWithEdge, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(47)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"Lots of data\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(48)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandleStickChartWithLotsOfData, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Row, {title: \"Coming soon...\"}, \n\t\t\t\t\t\t\t\t\tReact.createElement(Section, {colSpan: 2, className: \"react-stockchart\"}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(\"aside\", {dangerouslySetInnerHTML: {__html: __webpack_require__(49)}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tReact.render(React.createElement(ExamplesPage, null), document.body);\n\t}\n\t// React.render(<ExamplesPage />, document.getElementById(\"area\"));\n\n\t//module.exports = ExamplesPage;\n\n\n\td3.tsv(\"data/MSFT.tsv\", function(err, MSFT)  {\n\t\td3.tsv(\"data/MSFT_full.tsv\", function(err2, MSFTFull)  {\n\t\t\trenderPage(MSFT, MSFTFull)\n\t\t});\n\t})\n\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChart = React.createClass({displayName: \"AreaChart\",/**/\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 0}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn AreaChart;\n\t\t}\n\t}\n\n\t/*\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\n\t<ChartCanvas  width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t\t<Chart data={this.state.data}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(0.15)}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.log()}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data} interval=\"D\"\n\t\t\tpolyLinear={false}\n\t\t\tviewRange={dateRange}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={4} tickFormat={d3.time.format(\"%b\")}/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data} interval=\"D\"\n\t\t\tpolyLinear={false}\n\t\t\tviewRange={dateRange}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data}\n\t\t\tpolyLinear={true}\n\t\t\tdateAccessor={(d) => d.date}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(.5)}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\n\n\t<DataTransform data={} transformDataAs={POLYLINEAR}>\n\t\t<DataTransform transformDataAs={RENKO}>\n\t\t\t<Chart currentItemEmitter={} xScale={} yScale={} xDomainUpdate={true} yDomainUpdate={true}>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={} xAccesor={} tooltipDisplayEmitter={}>\n\t\t\t\t\t<CandlestickSeries/>\n\t\t\t\t</DataSeries\n\t\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} xAccesor={} yAccesor={} toolTipId={}>\n\t\t\t\t\t<LineSeries />\n\t\t\t\t</ChartOverlay>\n\t\t\t\t<ChartOverlay type=\"macrossover\" options={{ period: 10 }} id={0}> //moving average crossover\n\t\t\t\t\t<Markers />\n\t\t\t\t</ChartOverlay>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t\t<DataTransform transformDataAs={VOLUMEPROFILE}>\n\t\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t\t<YAxis />\n\t\t\t\t<LineSeries />\n\t\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} id={0}>\n\t\t\t\t\t<LineSeries />\n\t\t\t\t</ChartOverlay>\n\t\t\t\t<TooltipEmitter sendUsing={} />\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t<YAxis />\n\t\t\t<HistogramSeries  />\n\t\t\t<EdgeCoordinate />\n\t\t</Chart>\n\t\t<MouseCoordinates listenTo={} /> // this is here so it is above all charts\n\t\t<EdgeCoordinate /> // this is here so it is above all charts and I can click and bring an edge coordinate to the front\n\t\t<EdgeCoordinate edgeAt=\"\" orient=\"\" />\n\t\t<EventCapture mouseMove={true} zoom={true} pan={true} />\n\t\t<TooltipContainer>\n\t\t\t<OHLCTooltip />\n\t\t\t<MovingAverageTooltipContainer>\n\t\t\t\t<MATooltip onClick={} onToggle={} onRemove={} toolTipId={} />\n\t\t\t\t<MATooltip toolTipId={} />\n\t\t\t\t<MATooltip toolTipId={} />\n\t\t\t</MovingAverageTooltipContainer>\n\t\t</TooltipContainer>\n\t</DataTransform>\n\t*/\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithYPercent = React.createClass({displayName: \"AreaChartWithYPercent\",/**/\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\t\t\t\t\tconsole.log(this.state.width);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 0}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", percentScale: true, tickFormat: d3.format(\".0%\")}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn AreaChartWithYPercent;\n\t\t}\n\t}\n\n\t/*\n\n\t<ChartCanvas  width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t\t<Chart data={this.state.data}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(0.15)}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.log()}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data} interval=\"D\"\n\t\t\tpolyLinear={false}\n\t\t\tviewRange={dateRange}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={4} tickFormat={d3.time.format(\"%b\")}/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data} interval=\"D\"\n\t\t\tpolyLinear={false}\n\t\t\tviewRange={dateRange}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<DataTransform data={this.state.data}\n\t\t\tpolyLinear={true}\n\t\t\tdateAccessor={(d) => d.date}>\n\t\t\t<Chart>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={(d) => d.close}>\n\t\t\t\t\t<AreaSeries />\n\t\t\t\t</DataSeries>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\t<ChartCanvas  width={500} height={400}>\n\t\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(.5)}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</ChartCanvas>\n\n\n\t<DataTransform data={} transformDataAs={POLYLINEAR}>\n\t\t<DataTransform transformDataAs={RENKO}>\n\t\t\t<Chart currentItemEmitter={} xScale={} yScale={} xDomainUpdate={true} yDomainUpdate={true}>\n\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t\t<DataSeries yAccessor={} xAccesor={} tooltipDisplayEmitter={}>\n\t\t\t\t\t<CandlestickSeries/>\n\t\t\t\t</DataSeries\n\t\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} xAccesor={} yAccesor={} toolTipId={}>\n\t\t\t\t\t<LineSeries />\n\t\t\t\t</ChartOverlay>\n\t\t\t\t<ChartOverlay type=\"macrossover\" options={{ period: 10 }} id={0}> //moving average crossover\n\t\t\t\t\t<Markers />\n\t\t\t\t</ChartOverlay>\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t\t<DataTransform transformDataAs={VOLUMEPROFILE}>\n\t\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t\t<YAxis />\n\t\t\t\t<LineSeries />\n\t\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} id={0}>\n\t\t\t\t\t<LineSeries />\n\t\t\t\t</ChartOverlay>\n\t\t\t\t<TooltipEmitter sendUsing={} />\n\t\t\t</Chart>\n\t\t</DataTransform>\n\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t<YAxis />\n\t\t\t<HistogramSeries  />\n\t\t\t<EdgeCoordinate />\n\t\t</Chart>\n\t\t<MouseCoordinates listenTo={} /> // this is here so it is above all charts\n\t\t<EdgeCoordinate /> // this is here so it is above all charts and I can click and bring an edge coordinate to the front\n\t\t<EdgeCoordinate edgeAt=\"\" orient=\"\" />\n\t\t<EventCapture mouseMove={true} zoom={true} pan={true} />\n\t\t<TooltipContainer>\n\t\t\t<OHLCTooltip />\n\t\t\t<MovingAverageTooltipContainer>\n\t\t\t\t<MATooltip onClick={} onToggle={} onRemove={} toolTipId={} />\n\t\t\t\t<MATooltip toolTipId={} />\n\t\t\t\t<MATooltip toolTipId={} />\n\t\t\t</MovingAverageTooltipContainer>\n\t\t</TooltipContainer>\n\t</DataTransform>\n\t*/\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithCrossHairMousePointer = React.createClass({displayName: \"AreaChartWithCrossHairMousePointer\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: this.state.width, height: this.state.height, margin: {left: 5, right: 90, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 3}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 3, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 3})\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithCrossHairMousePointer;\n\t\t}\n\t}\n\n\t/*\n\t\tchangeWidth() {\n\t\t\tthis.setState({\n\t\t\t\twidth: this.state.width + 10\n\t\t\t});\n\t\t},\n\t\t\t<rect width={100} height={100} onClick={this.changeWidth}/>\n\t*/\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, VerticalMousePointer = ReStock.VerticalMousePointer\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithVerticalMousePointer = React.createClass({displayName: \"AreaChartWithVerticalMousePointer\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: this.state.width, height: this.state.height, margin: {left: 50, right: 100, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 0}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", percentScale: true, tickFormat: d3.format(\".0%\")}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 0}), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 0, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(VerticalMousePointer, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 0})\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn AreaChartWithVerticalMousePointer;\n\t\t}\n\t}\n\n\t/*\n\t\t\t\t\t\t\t\t\t\n\n\t*/\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithToolTip = React.createClass({displayName: \"AreaChartWithToolTip\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: this.state.width, height: this.state.height, margin: {left: 5, right: 90, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithToolTip;\n\t\t}\n\t}\n\n\t/*\n\t\tchangeWidth() {\n\t\t\tthis.setState({\n\t\t\t\twidth: this.state.width + 10\n\t\t\t});\n\t\t},\t\t\t\t\t\t\t<OHLCTooltip xDisplayFormat={dateFormat} accessor={(d) => {return {open: d.open, high: d.high, low: d.low, close: d.close, volume: d.volume}}}/>\n\n\t\t\t<rect width={100} height={100} onClick={this.changeWidth}/>\n\t*/\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t\t, OverlaySeries = ReStock.OverlaySeries\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithMA = React.createClass({displayName: \"AreaChartWithMA\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\thandleMATooltipClick:function(overlay) {\n\t\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: this.state.width, height: this.state.height, margin: {left: 5, right: 90, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 0, type: \"sma\", options: { period: 50}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 1, type: \"sma\", options: { period: 150}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 3, type: \"sma\", options: { period: 250}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 4, type: \"sma\", options: { period: 350}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 5, type: \"sma\", options: { period: 450}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1}), \n\t\t\t\t\t\t\t\tReact.createElement(MovingAverageTooltip, {forChart: 1, onClick: this.handleMATooltipClick})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithMA;\n\t\t}\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t\t, OverlaySeries = ReStock.OverlaySeries\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t\t, EdgeContainer = ReStock.EdgeContainer\n\t\t, EdgeIndicator = ReStock.EdgeIndicator\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithEdgeCoordinates = React.createClass({displayName: \"AreaChartWithEdgeCoordinates\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetEventStore:function() {\n\t\t\t\t\treturn this.refs.eventStore.getEventStore();\n\t\t\t\t},\n\t\t\t\tupdateEventStore:function(eventStore) {\n\t\t\t\t\treturn this.refs.eventStore.updateEventStore(eventStore);\n\t\t\t\t},\n\t\t\t\thandleMATooltipClick:function(overlay) {\n\t\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {\n\t\t\t\t\t\t\twidth: this.state.width, height: this.state.height, \n\t\t\t\t\t\t\tmargin: {left: 5, right: 90, top:10, bottom: 30}, data: data, ref: \"eventStore\"}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 0, type: \"sma\", options: { period: 50}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 1, type: \"sma\", options: { period: 150}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 3, type: \"sma\", options: { period: 250}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 4, type: \"sma\", options: { period: 350}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 5, type: \"sma\", options: { period: 450}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 1}), \n\t\t\t\t\t\t\tReact.createElement(EdgeContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 1}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 5}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1}), \n\t\t\t\t\t\t\t\tReact.createElement(MovingAverageTooltip, {forChart: 1, onClick: this.handleMATooltipClick})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithEdgeCoordinates;\n\t\t}\n\t}\n\n\t/*\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t<EdgeContainer>\n\n\t\t\t\t\t\t\t</EdgeContainer>\n\n\n\t\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t\t/>\n\t*/\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries;\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar LineChart = React.createClass({displayName: \"LineChart\",\n\t\t\t\trender:function() {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {data: data, width: 500, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", percentScale: true, tickFormat: d3.format(\".0%\")}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn LineChart\n\t\t}\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\", ticks: 5}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(DataTransform, {transformType: \"stockscale\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", ticks: 5}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithEdgeCoordinates = __webpack_require__(10).init(data);\n\n\t\t\tvar SyncMouseMove = React.createClass({displayName: \"SyncMouseMove\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\thandleMATooltipClick:function(overlay) {\n\t\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t\t},\n\t\t\t\tcomponentDidMount:function() {\n\t\t\t\t\tvar eventStore = this.refs.left.getEventStore();\n\t\t\t\t\tthis.refs.right.updateEventStore(eventStore);\n\t\t\t\t\t// console.log('SyncMouseMove.componentDidMount', eventStore);\n\t\t\t\t},\n\t\t\t\tcomponentDidUpdate:function() {\n\t\t\t\t\t// console.log('SyncMouseMove.componentDidUpdate');\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\tReact.createElement(\"div\", null, \n\t\t\t\t\t\tReact.createElement(\"div\", {className: \"col-md-6 react-stockchart\"}, \n\t\t\t\t\t\t\tReact.createElement(AreaChartWithEdgeCoordinates, {ref: \"left\"})\n\t\t\t\t\t\t), \n\t\t\t\t\t\tReact.createElement(\"div\", {className: \"col-md-6 react-stockchart\"}, \n\t\t\t\t\t\t\tReact.createElement(AreaChartWithEdgeCoordinates, {ref: \"right\"})\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn SyncMouseMove;\n\t\t}\n\t}\n\n\t/*\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t<EdgeContainer>\n\n\t\t\t\t\t\t\t</EdgeContainer>\n\n\n\t\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t\t/>\n\t*/\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, Translate = ReStock.Translate\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t\t, OverlaySeries = ReStock.OverlaySeries\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t\t, EdgeContainer = ReStock.EdgeContainer\n\t\t, EdgeIndicator = ReStock.EdgeIndicator\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar AreaChartWithZoom = React.createClass({displayName: \"AreaChartWithZoom\",\n\t\t\t\tgetInitialState:function() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\theight: 400\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\thandleMATooltipClick:function(overlay) {\n\t\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t\t},\n\t\t\t\trender:function() {\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {\n\t\t\t\t\t\t\twidth: this.state.width, height: this.state.height, \n\t\t\t\t\t\t\tmargin: {left: 65, right: 90, top:30, bottom: 30}, data: data, ref: \"eventStore\"}, \n\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\", ticks: 6}), \n\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\"}), \n\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.close;}, xAccessor: function(d)  {return d.date;}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 0, type: \"sma\", options: { period: 50}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 1, type: \"sma\", options: { period: 150}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 2, type: \"sma\", options: { period: 250}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 3, type: \"sma\", options: { period: 350}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 4, type: \"sma\", options: { period: 450}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 1}), \n\t\t\t\t\t\t\tReact.createElement(EdgeContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 0}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"first\", \n\t\t\t\t\t\t\t\t\torient: \"left\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"left\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 1}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"first\", \n\t\t\t\t\t\t\t\t\torient: \"left\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"left\", \n\t\t\t\t\t\t\t\t\tforChart: 1}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 2}\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {\n\t\t\t\t\t\t\t\t\tclassName: \"horizontal\", \n\t\t\t\t\t\t\t\t\titemType: \"last\", \n\t\t\t\t\t\t\t\t\torient: \"right\", \n\t\t\t\t\t\t\t\t\tedgeAt: \"right\", \n\t\t\t\t\t\t\t\t\tforChart: 1, \n\t\t\t\t\t\t\t\t\tforOverlay: 3}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, zoom: true, mainChart: 1}), \n\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1, origin: [-60, -20]}), \n\t\t\t\t\t\t\t\tReact.createElement(MovingAverageTooltip, {forChart: 1, onClick: this.handleMATooltipClick, origin: [-60, -10]})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn AreaChartWithZoom;\n\t\t}\n\t}\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t\t, HistogramSeries = ReStock.HistogramSeries\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(DataTransform, {transformType: \"stockscale\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", ticks: 5}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 2}, \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\", ticks: 5, tickFormat: d3.format(\"s\")}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.volume;}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(HistogramSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n\t/*\n\t xScaleDependsOn={1}\n\t\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t\t</Chart>\n\n\t*/\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t\t, HistogramSeries = ReStock.HistogramSeries\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 50, right: 50, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(DataTransform, {transformType: \"stockscale\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", ticks: 5}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 2, height: 150, origin: function(w, h)  {return [0, h - 150];}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\", ticks: 5, tickFormat: d3.format(\"s\")}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.volume;}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(HistogramSeries, {className: function(d)  {return d.close > d.open ? 'up' : 'down';}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n\t/*\n\t xScaleDependsOn={1}\n\t\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t\t</Chart>\n\n\t*/\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t\t, HistogramSeries = ReStock.HistogramSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 40, right: 70, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(DataTransform, {transformType: \"stockscale\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", ticks: 5}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 2, height: 150, origin: function(w, h)  {return [0, h - 150];}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\", ticks: 5, tickFormat: d3.format(\"s\")}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.volume;}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(HistogramSeries, {className: function(d)  {return d.close > d.open ? 'up' : 'down';}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, mainChart: 1}), \n\t\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1, origin: [-40, 0]})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n\t/*\n\t xScaleDependsOn={1}\n\t\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t\t</Chart>\n\n\t*/\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t\t, HistogramSeries = ReStock.HistogramSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 40, right: 70, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(DataTransform, {transformType: \"stockscale\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", ticks: 5}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 2, height: 150, origin: function(w, h)  {return [0, h - 150];}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\", ticks: 5, tickFormat: d3.format(\"s\")}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.volume;}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(HistogramSeries, {className: function(d)  {return d.close > d.open ? 'up' : 'down';}})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, zoom: true, pan: true, mainChart: 1, defaultFocus: false}), \n\t\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1, origin: [-40, 0]})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n\t/*\n\t xScaleDependsOn={1}\n\t\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t\t</Chart>\n\n\t*/\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t\t, HistogramSeries = ReStock.HistogramSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t\t, OverlaySeries = ReStock.OverlaySeries\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t\t, AreaSeries = ReStock.AreaSeries\n\n\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 40, right: 70, top:10, bottom: 30}, data: data}, \n\t\t\t\t\t\t\tReact.createElement(DataTransform, {transformType: \"stockscale\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", ticks: 5}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null), \n\t\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 0, type: \"sma\", options: { period: 20, pluck: 'close'}}, \n\t\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 1, type: \"sma\", options: { period: 30}}, \n\t\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 2, type: \"sma\", options: { period: 50}}, \n\t\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 0}), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 1}), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 2}), \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 2, height: 150, origin: function(w, h)  {return [0, h - 150];}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\", ticks: 5, tickFormat: d3.format(\"s\")}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.volume;}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(HistogramSeries, {className: function(d)  {return d.close > d.open ? 'up' : 'down';}}), \n\t\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 3, type: \"sma\", options: { period: 10, pluck:'volume'}}, \n\t\t\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 2, forOverlay: 3}), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 2}), \n\t\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, zoom: true, pan: true, mainChart: 1, defaultFocus: false}), \n\t\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1, origin: [-40, 0]}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MovingAverageTooltip, {forChart: 1, onClick: function(e)  {return console.log(e);}, origin: [-38, 15]})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n\t/*\n\t xScaleDependsOn={1}\n\t\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t\t</Chart>\n\n\t*/\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar ReStock = __webpack_require__(53);\n\n\tvar ChartCanvas = ReStock.ChartCanvas\n\t\t, XAxis = ReStock.XAxis\n\t\t, YAxis = ReStock.YAxis\n\t\t, CandlestickSeries = ReStock.CandlestickSeries\n\t\t, DataTransform = ReStock.DataTransform\n\t\t, Chart = ReStock.Chart\n\t\t, DataSeries = ReStock.DataSeries\n\t\t, ChartWidthMixin = __webpack_require__(51)\n\t\t, InitialStateMixin = __webpack_require__(52)\n\t\t, HistogramSeries = ReStock.HistogramSeries\n\t\t, EventCapture = ReStock.EventCapture\n\t\t, MouseCoordinates = ReStock.MouseCoordinates\n\t\t, CrossHair = ReStock.CrossHair\n\t\t, TooltipContainer = ReStock.TooltipContainer\n\t\t, OHLCTooltip = ReStock.OHLCTooltip\n\t\t, OverlaySeries = ReStock.OverlaySeries\n\t\t, LineSeries = ReStock.LineSeries\n\t\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t\t, AreaSeries = ReStock.AreaSeries\n\t\t, EdgeContainer = ReStock.EdgeContainer\n\t\t, EdgeIndicator = ReStock.EdgeIndicator\n\n\n\t;\n\n\tmodule.exports = {\n\t\tinit:function(data) {\n\t\t\tvar CandleStickChart = React.createClass({displayName: \"CandleStickChart\",\n\t\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\t\trender:function() {\n\t\t\t\t\tif (!this.state.width) return React.createElement(\"div\", null);\n\n\t\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(ChartCanvas, {width: this.state.width, height: 400, margin: {left: 90, right: 70, top:10, bottom: 30}, data: data, interval: \"1D\"}, \n\t\t\t\t\t\t\tReact.createElement(DataTransform, {transformType: \"stockscale\"}, \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 1}, \n\t\t\t\t\t\t\t\t\tReact.createElement(XAxis, {axisAt: \"bottom\", orient: \"bottom\"}), \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"right\", orient: \"right\", ticks: 5}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: CandlestickSeries.yAccessor}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(CandlestickSeries, null), \n\t\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 0, type: \"sma\", options: { period: 20, pluck: 'close'}}, \n\t\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 1, type: \"sma\", options: { period: 30}}, \n\t\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 2, type: \"sma\", options: { period: 50}}, \n\t\t\t\t\t\t\t\t\t\t\tReact.createElement(LineSeries, null)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 0}), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 1}), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 1, forOverlay: 2}), \n\t\t\t\t\t\t\t\tReact.createElement(Chart, {id: 2, height: 150, origin: function(w, h)  {return [0, h - 150];}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(YAxis, {axisAt: \"left\", orient: \"left\", ticks: 5, tickFormat: d3.format(\"s\")}), \n\t\t\t\t\t\t\t\t\tReact.createElement(DataSeries, {yAccessor: function(d)  {return d.volume;}}, \n\t\t\t\t\t\t\t\t\t\tReact.createElement(HistogramSeries, {className: function(d)  {return d.close > d.open ? 'up' : 'down';}}), \n\t\t\t\t\t\t\t\t\t\tReact.createElement(OverlaySeries, {id: 3, type: \"sma\", options: { period: 10, pluck:'volume'}}, \n\t\t\t\t\t\t\t\t\t\t\tReact.createElement(AreaSeries, null)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 2, forOverlay: 3}), \n\t\t\t\t\t\t\t\tReact.createElement(CurrentCoordinate, {forChart: 2}), \n\t\t\t\t\t\t\t\tReact.createElement(EdgeContainer, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"last\", orient: \"right\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"right\", forChart: 1, forOverlay: 0}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"last\", orient: \"right\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"right\", forChart: 1, forOverlay: 1}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"last\", orient: \"right\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"right\", forChart: 1, forOverlay: 2}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"first\", orient: \"left\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"left\", forChart: 1, forOverlay: 0}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"first\", orient: \"left\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"left\", forChart: 1, forOverlay: 1}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"first\", orient: \"left\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"left\", forChart: 1, forOverlay: 2}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"first\", orient: \"left\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"left\", forChart: 2, forOverlay: 3, displayFormat: d3.format(\".4s\")}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"last\", orient: \"right\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"right\", forChart: 2, forOverlay: 3, displayFormat: d3.format(\".4s\")}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"first\", orient: \"left\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"left\", forChart: 2, displayFormat: d3.format(\".4s\")}\n\t\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\tReact.createElement(EdgeIndicator, {className: \"horizontal\", itemType: \"last\", orient: \"right\", \n\t\t\t\t\t\t\t\t\t\tedgeAt: \"right\", forChart: 2, displayFormat: d3.format(\".4s\")}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(MouseCoordinates, {forChart: 1, xDisplayFormat: dateFormat, yDisplayFormat: function(y)  {return y.toFixed(2);}}, \n\t\t\t\t\t\t\t\t\tReact.createElement(CrossHair, null)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tReact.createElement(EventCapture, {mouseMove: true, zoom: true, pan: true, mainChart: 1, defaultFocus: false}), \n\t\t\t\t\t\t\t\tReact.createElement(TooltipContainer, null, \n\t\t\t\t\t\t\t\t\tReact.createElement(OHLCTooltip, {forChart: 1, origin: [-50, 0]}), \n\t\t\t\t\t\t\t\t\tReact.createElement(MovingAverageTooltip, {forChart: 1, onClick: function(e)  {return console.log(e);}, origin: [-48, 15]})\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn CandleStickChart\n\t\t}\n\t}\n\n\n\t/*\n\t xScaleDependsOn={1}\n\t\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t\t</Chart>\n\n\t*/\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar Nav = React.createClass({displayName: \"Nav\",\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"nav\", {className: \"navbar navbar-fixed-top\"}, \n\t\t\t\t\tReact.createElement(\"div\", {className: \"container-fluid\"}, \n\t\t\t\t\t\tReact.createElement(\"div\", {className: \"navbar-header\"}, \n\t\t\t\t\t\t\tReact.createElement(\"a\", {className: \"navbar-brand\", href: \"index.html\"}, \"React Stockcharts\")\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = Nav;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar SideBar = React.createClass({displayName: \"SideBar\",\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"col-sm-3 col-md-2 sidebar\"}, this.props.children)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = SideBar;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\tvar Row = __webpack_require__(28);\n\n\tvar MainContainer = React.createClass({displayName: \"MainContainer\",\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"container-fluid\", id: \"MainContainer\"}, \n\t\t\t\t\tReact.createElement(Row, null, this.props.children)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = MainContainer;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar MenuGroup = React.createClass({displayName: \"MenuGroup\",\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"ul\", {className: \"nav nav-sidebar\"}, this.props.children)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = MenuGroup;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar MenuItem = React.createClass({displayName: \"MenuItem\",\n\t\tpropTypes: {\n\t\t\tactive: React.PropTypes.bool,\n\t\t\tanchor: React.PropTypes.string,\n\t\t\tlabel: React.PropTypes.string.isRequired\n\t\t},\n\t\tgetDefaultProps:function() {\n\t\t\treturn {\n\t\t\t\tactive: false,\n\t\t\t};\n\t\t},\n\t\trender:function() {\n\t\t\tvar className = (this.props.active) ? 'active' : '';\n\t\t\tvar anchor = this.props.anchor || this.props.label;\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"li\", {className: className}, \n\t\t\t\t\tReact.createElement(\"a\", {href: '#' + anchor}, this.props.label, \n\t\t\t\t\t\t(this.props.active) ? React.createElement(\"span\", {className: \"sr-only\"}, \"(current)\") : ''\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = MenuItem;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar ContentSection = React.createClass({displayName: \"ContentSection\",\n\t\tpropTypes: {\n\t\t\ttitle: React.PropTypes.string.isRequired\n\t\t},\n\t\trender:function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {id: \"ContentSection\", className: \"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\"}, \n\t\t\t\t\tReact.createElement(\"h1\", {className: \"page-header\"}, this.props.title), \n\t\t\t\t\tthis.props.children\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = ContentSection;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar Row = React.createClass({displayName: \"Row\",\n\t\tpropTypes: {\n\t\t\ttitle: React.PropTypes.string,\n\t\t\tanchor: React.PropTypes.string\n\t\t},\n\t\trender:function() {\n\t\t\tvar anchor = this.props.anchor || this.props.title;\n\t\t\tvar title = this.props.title\n\t\t\t\t\t? React.createElement(\"h4\", null, React.createElement(\"a\", {id: anchor, href: '#' + anchor}, this.props.title))\n\t\t\t\t\t: null;\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"row\"}, \n\t\t\t\t\ttitle, \n\t\t\t\t\tthis.props.children\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = Row;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\n\tvar Section = React.createClass({displayName: \"Section\",\n\t\tpropTypes: {\n\t\t\tcolSpan: React.PropTypes.number.isRequired,\n\t\t\ttitle: React.PropTypes.string\n\t\t},\n\t\tgetDefaultProps:function() {\n\t\t\treturn {\n\t\t\t\tcolSpan: 1\n\t\t\t}\n\t\t},\n\t\trender:function() {\n\t\t\tvar className = this.props.className + ' col-md-' + (6 * this.props.colSpan);\n\t\t\tvar title = this.props.title ? React.createElement(\"h4\", null, this.props.title) : null;\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: className}, \n\t\t\t\t\ttitle, \n\t\t\t\t\tthis.props.children\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tmodule.exports = Section;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar contentTop = [];\n\n\tvar ScrollMixin = {\n\t\thandleWindowResize:function() {\n\t\t\tcontentTop.splice(0);\n\t\t\t// Set up content an array of locations\n\t\t\t$('.nav-sidebar').find('a').each(function(){\n\t\t\t\tcontentTop.push( $( $(this).attr('href') ).offset().top );\n\t\t\t})\n\t\t},\n\t\tcomponentWillUnMount:function() {\n\t\t\twindow.removeEventListener(\"resize\", this.handleWindowResize);\n\t\t},\n\t\tcomponentDidMount:function() {\n\t\t\twindow.addEventListener(\"resize\", this.handleWindowResize);\n\n\t\t\tvar topRange      = 200,  // measure from the top of the viewport to X pixels down\n\t\t\t\tedgeMargin    = 20,   // margin above the top or margin from the end of the page\n\t\t\t\tanimationTime = 500; // time in milliseconds\n\t\t\t\t\n\t\t\t// Stop animated scroll if the user does something\n\t\t\t$('html,body').bind('scroll mousedown DOMMouseScroll mousewheel keyup', function(e) {\n\t\t\t\tif ( e.which > 0 || e.type == 'mousedown' || e.type == 'mousewheel' ) {\n\t\t\t\t\t$('html,body').stop();\n\t\t\t\t}\n\t\t\t});\n\t\t\t//$('div#ContentSection').scrollTop(-50)\n\t\t\t// console.log($('html,body').scrollTop());\n\t\t\t// Set up content an array of locations\n\t\t\t$('.nav-sidebar').find('a').each(function(){\n\t\t\t\tcontentTop.push( $( $(this).attr('href') ).offset().top );\n\t\t\t})\n\t\t\t// Animate menu scroll to content\n\t\t\t$('.nav-sidebar').find('a').click(function() {\n\t\t\t\tvar sel = this,\n\t\t\t\t\tindex = $('.nav-sidebar a').index( $(this) ),\n\t\t\t\t\toffset = index === contentTop.length - 1 ? 0 : -50,\n\t\t\t\t\tnewTop = Math.min( contentTop[index], $(document).height() - $(window).height() ) + offset; // get content top or top position if at the document bottom\n\t\t\t\t// console.log(newTop)\n\t\t\t\t$('html,body')\n\t\t\t\t\t//.stop()\n\t\t\t\t\t.animate({\n\t\t\t\t\t\t\t'scrollTop' : newTop\n\t\t\t\t\t\t},\n\t\t\t\t\t\tanimationTime/*,\n\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\twindow.location.hash = $(sel).attr('href');\n\t\t\t\t\t\t}*/);\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\t$(window).scroll(function(e) {\n\t\t\t\t// console.log(e)\n\t\t\t\tvar winTop = $(window).scrollTop(),\n\t\t\t\t\tbodyHt = $(document).height(),\n\t\t\t\t\tvpHt = $(window).height() + edgeMargin;  // viewport height + margin\n\n\t\t\t\t$.each( contentTop, function(i, loc){\n\t\t\t\t\tif ( ( loc > winTop - edgeMargin && ( loc < winTop + topRange || ( winTop + vpHt ) >= bodyHt ) ) ) {\n\t\t\t\t\t\t$('ul.nav-sidebar li')\n\t\t\t\t\t\t\t.removeClass('active')\n\t\t\t\t\t\t\t.eq(i).addClass('active');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t\t\t$(window).on('hashchange', function() {\n\t\t\t\tvar top = $('html,body').scrollTop() - 50;\n\t\t\t\t$('html,body').scrollTop(top);\n\t\t\t});/**/\n\t\t}\n\t};\n\n\tmodule.exports = ScrollMixin;\n\n/***/ },\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<h4>React Stockcharts - Built with <a href=\\\"http://facebook.github.io/react/\\\">React JS</a> and <a href=\\\"http://d3js.org/\\\">d3</a></h4><p>React Stockcharts project provides a flexible library to create charts that represent time series data. It is easy to learn and can be customized by</p><ul><li>adding custom chart components</li><li>access the <code>svg</code> elements</li><li>styling with CSS</li></ul><p>There are many charting libraries available, but I feel there are very few that provide the features and flexibility to create stock charts that compete with the likes of the ones provided by commercial trading systems.</p><h4>SVG vs Canvas</h4><p>When deciding on a web technology for charts - not just charts, but ones which are interactive too - representing many many data points, the decision of performance is bound to come up, and HTML5 presents options.</p><p>I am not going to debate between the pros and cons between SVG and Canvas. They are discussed at great length <a href=http://stackoverflow.com/questions/12310024/fast-and-responsive-interactive-charts-graphs-svg-canvas-other>here</a> and <a href=http://stackoverflow.com/questions/5882716/html5-canvas-vs-svg-vs-div>here</a>. Needless to say they are both very powerful and for charting, there really is no right answer. I have chosen to use SVG for React Stockcharts because,</p><ul><li>you will see very soon the performance is not an issue really, thanks to React JS and the virtual dom</li><li>the flexibility of development and the convinenience of debuging a DOM is hard to beat</li><li>styling with css is something I cannot give up</li></ul><p>That said, I do wish to some day create a fork of this on Canvas.</p><h4>DOM Manipulation</h4><p>The only place where DOM Manipulation is used is in the <code>XAxis</code> and <code>YAxis</code> components, I will soon migrate to use the native <code>svg</code> axes provided by <a href=https://github.com/esbullington/react-d3>react-d3</a>, at which time the entire project will be built with native svg components making server side rendering possible.</p><p>Now let us get started with a very simple AreaChart</p>\";\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p><code>data.tsv</code></p><table><thead><tr><th>date<th>close<tbody><tr><td>2011-01-24<td>5743.25<tr><td>2011-01-25<td>5687.4<tr><td>2011-01-27<td>5604.3<tr><td>2011-01-28<td>5512.15<tr><td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>'d3'</span>);\\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>\\\"%Y-%m-%d\\\"</span>).parse\\n\\nd3.tsv(<span class=hljs-string>\\\"path/to/data.tsv\\\"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\\n    data.forEach((d, i) =&gt; {\\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\\n        d.close = +d.close;\\n    });\\n...\\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>Let us review each line</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n</code></pre><p>Creates an <code>svg</code> element with the provided <code>height</code> and <code>width</code> and creates a <code>svg:g</code> element with the provided <code>margin</code>. <code>data</code> is well the data used to plot.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\\n</code></pre><p>There can be one or more <code>Chart</code>s in each <code>ChartCanvas</code> and hence the need for an <code>id</code> attribute.</p><p>If you are not familiar with <a href=https://github.com/mbostock/d3/wiki/Scales>scales</a> in d3 I recommend doing so. Each <code>Chart</code> defines an <code>xScale</code> and <code>yScale</code>. For starters, it is easier to understand scale as a function which converts a <code>domain</code> say 2011-01-01 to 2014-12-31 to a <code>range</code> say 0 to 500 pixels. This scale can now interpolate an input date to a value in pixels which can be drawn.</p><p>With SVG it is important to understand the coordinate system and where the origin <code>(0, 0)</code> is located. for a SVG of size 300x100, the</p><p><img src=http://www.w3.org/TR/SVG/images/coords/InitialCoords.png alt=\\\"alt text\\\" title=\\\"Logo Title Text 1\\\"></p><p>For more details about the SVG coordinate system see <a href=http://www.w3.org/TR/SVG/coords.html>here</a></p><p>Back to scales,</p><p>A time scale converts a date/time domain to a range, this is used as the xScale, the xDomain is calculated from the input data, and the range is calculated as <code>height - margin.left - margin.right</code>.</p><p>A Linear scale converts a <code>domain</code> say 4600 - 6200 to a <code>range</code> say 0 to 300 pixels. Like the name represents the data in between is interpolated linear, similarly there is log scale which creates a logrithmic scale, which is not linear.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\\n</code></pre><p>The <code>ticks</code> attribute simple passes on the value to the <a href=https://github.com/mbostock/d3/wiki/SVG-Axes#ticks>d3.axis</a>, the <code>XAxis</code> also has the following optional attributes <code>innerTickSize, outerTickSize, tickFormat, tickPadding, tickSize, ticks, tickValues</code> all of which correspond to a function with the same name in d3.axis.</p><p><code>axisAt</code> takes on possible values as <code>top, middle, bottom</code> for advanced cases, you can also pass in a number indicating the pixel position where the axis has to be drawn.</p><p><code>orient</code> takes on possible values as <code>top, bottom</code>, this orients the axis ticks on the top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> /&gt;</span>\\n</code></pre><p>Similar to <code>XAxis</code> except left/right instead of top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p>A <code>DataSeries</code> is a shell component intended to house the x and y Accessor. You will find in other examples below how <code>DataSeries</code> helps create a yAccessor with more than one y value to plot for a given x, like in candlestick.</p><p>If you are not clear what the arrow functions mean, read more about them <a href=https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions>here</a>. In short</p><p><code>(d) =&gt; d.close</code> means <code>function (d) { return d.close; }</code></p><p><code>(d) =&gt; d.date</code> means <code>function (d) { return d.date; }</code></p><h3>Highly customizable you say, how?</h3><p>So you dont want to display the <code>YAxis</code> at all, go ahead and just remove that.</p><p>Want to display <code>YAxis</code> on both left and right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> /&gt;</span>\\n</code></pre><p>next to the existing <code>YAxis</code></p><p>Create custom components and use them, it is explained <a href=http://add.link.here>here</a></p><p>Want to add a <code>YAxis</code> with a percent scale on the right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>percentScale</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\".0%\\\")}</span>/&gt;</span>\\n</code></pre><p>and you get.</p>\";\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p>well, that looks ok, but something is not right. Look closer, you will find that the candles are not spread at regular intervals, there is a gap of say 2 candles every so often. That gap is because the data is plot on a continious time scale, and a continious time scale has week ends and national holidays, days when trading does not happen. Now we dont want to show non trading days on the chart. If it is an intra day chart, you want to see only 9:30 AM to 4:00 PM (or 1:00 PM if it is holiday hours)</p><p>What we need here is to show time that is not continious on the x axis. Enter <strong>stocktime scale</strong> (or <strong>financetime scale</strong>).</p>\";\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p>That is better. let us see how to create it</p><p><code>data.tsv</code></p><table><thead><tr><th>date<th>open<th>high<th>low<th>close<tbody><tr><td>2013-08-16<td>5705.45<td>5716.6<td>5496.05<td>5507.85<tr><td>2013-08-19<td>5497.55<td>5499.65<td>5360.65<td>5414.75<tr><td>2013-08-20<td>5353.45<td>5417.8<td>5306.35<td>5401.45<tr><td>…<td>…<td>…<td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>'d3'</span>);\\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>\\\"%Y-%m-%d\\\"</span>).parse;\\n\\nd3.tsv(<span class=hljs-string>\\\"path/to/data.tsv\\\"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\\n    data.forEach((d, i) =&gt; {\\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\\n        d.open = +d.open;\\n        d.high = +d.high;\\n        d.low = +d.low;\\n        d.close = +d.close;\\n    });\\n...\\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>Compare this with the simpler <code>AreaChart</code> example from before</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n</code></pre><p>It is the same as for <code>AreaChart</code></p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n</code></pre><p>Converting the data provided as input which when taken as a linear scale includes weekend time breaks, into a linear scale over the input domain. More usecases of <code>DataTransform</code> are listed below.</p><p><strong>Coming Soon</strong> Create your own transforms and register them for use</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n</code></pre><p>Same as for <code>AreaChart</code> example above</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p>You will notice that the <code>DataSeries</code> component does not include the <code>xAccessor</code>, that is because it is defined inside the stockscale <code>DataTransform</code> which provides the <code>xAccessor</code> behind the scenes</p><p><code>yAccessor={CandlestickSeries.yAccessor}</code> is just a convenience <code>yAccessor</code> available, it can also be represented as</p><pre><code class=language-js>yAccessor={(d) =&gt; ({open: d.open, high: d.high, low: d.low, close: d.close})}\\n</code></pre><p>or if arrow functions is not your thing, use</p><pre><code class=language-js>yAccessor={<span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-params>(d)</span> </span>{ <span class=hljs-keyword>return</span> {open: d.open, high: d.high, low: d.low, close: d.close}; }}\\n</code></pre>\";\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p>The financetime scale takes the input data and converts to linear and plots time on the axis. The outcome is quite interesting. This scale is particularly of use not just for simple time series data, but more importantly for charts which are dependent on price movement, think Point &amp; Figure, Line break, Kagi, Renko.</p><p>scale provides ticks of the format</p><ul><li>Start of year as <code>YYYY</code> e.g. 2013</li><li>Start of Quarter as <code>mmm YYYY</code> e.g. Oct 2013</li><li>Start of Month <code>as mmm</code> e.g. Nov</li><li>Start of Week as <code>dd mmm</code> e.g. 25 Nov</li><li>day as <code>a dd</code> e.g. Wed 27</li></ul><p><strong>Coming Soon</strong> updated financetime scale for intra day</p>\";\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p>There are a couple of ways Volume histogram is usually displayed. Let us see them.</p>\";\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span>&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\"s\\\")}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>Look!!! there is more than one <code>Chart</code> there.</p><p>Each <code>Chart</code> has a pair of <code>xScale</code> and <code>yScale</code> since <code>volume</code> is on a different domain from <code>open</code>/<code>high</code>/<code>low</code>/<code>close</code>, It has to be created as a different <code>Chart</code>.</p><p>To summarize, All <code>Chart</code>s use the same <code>data</code> but each <code>Chart</code> has different <code>xScale</code> and <code>yScale</code>. In this example above the <code>xScale</code> of chart 2 has the same <code>domain</code> and <code>range</code> as the <code>xScale</code> of <code>Chart</code> 1, so we did not draw the <code>XAxis</code> again for the Volume.</p><h5>But… I dont want the Volume chart to span the whole chart height.</h5><p>I got you covered.</p>\";\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\"s\\\")}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>The portion of interest here is</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\\n</code></pre><p>the chart has a defined <code>height</code> of 150, which is good.</p><p><code>origin</code> can be either a function which returns a <code>[x, y]</code> to be used as origin or it can be an array with 2 elements representing <code>[x, y]</code>. The default value for <code>origin</code> is <code>[0, 0]</code></p><p><code>(w, h) =&gt; [0, h - 150]</code> is the same as <code>function (w, h) { return [0, h - 150]; }</code></p><p>given the <code>width</code> and <code>height</code> available inside the <code>ChartCanvas</code> as input, this function returns an origin of <code>[0, height - 150]</code> to draw the volume histogram</p><p>Similarly the <code>className</code> of <code>HistogramSeries</code> accepts either</p><ul><li>a function which returns a string</li><li>or a string</li></ul><p>which is used as the css class</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n</code></pre><p>a class of ‘up’ is applied if <code>close &gt; open</code> for that day and ‘down’ otherwise</p>\";\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>40</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>70</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\"s\\\")}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>MouseCoordinates</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>xDisplayFormat</span>=<span class=hljs-value>{d3.time.format(\\\"%Y-%m-%d\\\")}</span> <span class=hljs-attribute>yDisplayFormat</span>=<span class=hljs-value>{(y)</span> =&gt;</span> y.toFixed(2)}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>CrossHair</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>MouseCoordinates</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span>/&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p><code>EventCapture</code> is used to capture mousemove, scroll/zoom and drag events</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span>/&gt;</span>\\n</code></pre><p>By default none of the events are captured, and each has to be enabled individually <code>mouseMove</code> is enabled above. <code>mainChart</code> as the name describes is used to refer to the <code>Chart</code> from which the <code>xScale</code> and <code>yScale</code> are used to determine the nearest value to the mouse position.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>MouseCoordinates</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>xDisplayFormat</span>=<span class=hljs-value>{d3.time.format(\\\"%Y-%m-%d\\\")}</span> <span class=hljs-attribute>yDisplayFormat</span>=<span class=hljs-value>{(y)</span> =&gt;</span> y.toFixed(2)}&gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>CrossHair</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>MouseCoordinates</span>&gt;</span>\\n</code></pre><p>Displays the crosshair at the mouse position, the attributes of <code>MouseCoordinates</code> are self explanatory. You can swap out with <code>CrossHair</code> with <code>VerticalMousePointer</code> if crosshair is not your thing.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n</code></pre><p>Displays the tooltip on the top left, use the <code>origin</code> and <code>margin</code> of <code>ChartCanvas</code> to adjust the position of the tooltip. You can also create your custom tooltip, by swapping out <code>OHLCTooltip</code> with your own</p>\";\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p>The only change is enabling <code>zoom</code> and <code>pan</code></p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>zoom</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>pan</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>defaultFocus</span>=<span class=hljs-value>{false}</span> /&gt;</span>\\n</code></pre><p>other than enabling <code>zoom</code> and <code>pan</code>, <code>defaultFocus</code> of <code>true</code> means mouse scroll over the chart, triggers zoom action if zoom is enabled. If <code>defaultFocus</code> is <code>false</code>, you have to click on the chart to get focus and then all scroll events are zoom events if <code>zoom</code> is enabled</p><p>You could set the focus programatically by adding a ref to the <code>EventCapture</code></p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>ref</span>=<span class=hljs-value>\\\"eventCapture\\\"</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>zoom</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>pan</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>defaultFocus</span>=<span class=hljs-value>{false}</span> /&gt;</span>\\n</code></pre><pre><code class=language-js><span class=hljs-keyword>this</span>.refs.eventCapture.toggleFocus(); <span class=hljs-comment>// to toggle focus so scroll events over the chart will either simulate zoom or perform the default action</span>\\n\\n<span class=hljs-keyword>this</span>.refs.eventCapture.setFocus(<span class=hljs-literal>false</span>); <span class=hljs-comment>// set the focus </span>\\n</code></pre>\";\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p><code>Overlay</code>s share the scales of a <code>Chart</code> and contribute to the <code>domain</code> of the <code>Chart</code> they belong to.</p><p>In this chart we are introducing</p><ul><li>Moving average on daily <code>close</code> as a <code>LineSeries</code></li><li>Moving average on daily <code>volume</code> as an <code>AreaSeries</code></li><li>Current item indicator as a circle over the different moving averages</li><li>Moving average tooltip</li></ul><p>Let us review each of these in a little more detail</p><h4>Moving average on daily <code>close</code> as a <code>LineSeries</code></h4><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=<span class=hljs-value>{{</span> <span class=hljs-attribute>period:</span> <span class=hljs-attribute>20</span>, <span class=hljs-attribute>pluck:</span> '<span class=hljs-attribute>close</span>' }}&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=<span class=hljs-value>{{</span> <span class=hljs-attribute>period:</span> <span class=hljs-attribute>30</span> }} &gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=<span class=hljs-value>{{</span> <span class=hljs-attribute>period:</span> <span class=hljs-attribute>50</span> }} &gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p><code>type</code> indicates it is a simple moving average, <code>options</code> used to specify the moving average <code>period</code>, and <code>pluck</code> to specify attribute against which moving average is to be calculated. If not specified, <code>pluck</code> defaults to <code>close</code></p><h4>Moving average on daily <code>volume</code> as an <code>AreaSeries</code></h4><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{3}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=<span class=hljs-value>{{</span> <span class=hljs-attribute>period:</span> <span class=hljs-attribute>10</span>, <span class=hljs-attribute>pluck:</span>'<span class=hljs-attribute>volume</span>' }} &gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p>Similar to above</p><h4>Current item indicator as a circle over the different moving averages</h4><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{0}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{1}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{2}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{3}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span>/&gt;</span>\\n</code></pre><p>That was easy, right?</p><p><code>forOverlay</code> is an optional attribute, and absense of that will default the <code>CurrentCoordinate</code> to display a circle on the main series. This only makes sense if the main series plots a single value on y. For <code>CandlestickSeries</code> as it plots 4 attributes, <code>CurrentCoordinate</code> is not valid for <code>CandlestickSeries</code></p><h4>Moving average tooltip</h4><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>MovingAverageTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>onClick</span>=<span class=hljs-value>{(e)</span> =&gt;</span> console.log(e)} origin={[-38, 15]}/&gt;\\n<span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n</code></pre><p>Open the dev console and see what is logged on click of the moving average tooltip</p><p>adding it all together</p><pre><code class=language-jsx><span class=xml><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=</span></span><span class=hljs-expression>{{<span class=hljs-variable>left</span>: 40, <span class=hljs-variable>right</span>: 70, <span class=hljs-variable>top</span>:10, <span class=hljs-variable>bottom</span>: 30}}</span><span class=xml><span class=hljs-tag> <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=</span></span><span class=hljs-expression>{{ <span class=hljs-variable>period</span>: 20, <span class=hljs-variable>pluck</span>: '<span class=hljs-variable>close</span>' }}</span><span class=xml><span class=hljs-tag>&gt;</span>\\n                    <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n                <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=</span></span><span class=hljs-expression>{{ <span class=hljs-variable>period</span>: 30 }}</span><span class=xml><span class=hljs-tag> &gt;</span>\\n                    <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n                <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=</span></span><span class=hljs-expression>{{ <span class=hljs-variable>period</span>: 50 }}</span><span class=xml><span class=hljs-tag> &gt;</span>\\n                    <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n                <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{0}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{1}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{2}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\"s\\\")}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{3}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=</span></span><span class=hljs-expression>{{ <span class=hljs-variable>period</span>: 10, <span class=hljs-variable>pluck</span>:'<span class=hljs-variable>volume</span>' }}</span><span class=xml><span class=hljs-tag> &gt;</span>\\n                    <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span>/&gt;</span>\\n                <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{3}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span>/&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>MouseCoordinates</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>xDisplayFormat</span>=<span class=hljs-value>{dateFormat}</span> <span class=hljs-attribute>yDisplayFormat</span>=<span class=hljs-value>{(y)</span> =&gt;</span> y.toFixed(2)}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>CrossHair</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>MouseCoordinates</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>zoom</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>pan</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>defaultFocus</span>=<span class=hljs-value>{false}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>MovingAverageTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>onClick</span>=<span class=hljs-value>{(e)</span> =&gt;</span> console.log(e)} origin={[-38, 15]}/&gt;\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</span></code></pre>\";\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p><code>EdgeIndicator</code>s are inside the <code>EdgeContainer</code> and can be of type <code>first</code> or <code>last</code>, can be located <code>left</code> or <code>right</code> and orient <code>left</code> or <code>right</code>. Below you see edges <code>first</code> and <code>last</code> for all the overlays and also for the <code>volume</code> histogram.</p><p>The edge values are updated on zoom and pan too</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>EdgeContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{0}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{1}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{2}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{0}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{1}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{2}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{3}</span> <span class=hljs-attribute>displayFormat</span>=<span class=hljs-value>{d3.format(\\\".4s\\\")}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{3}</span> <span class=hljs-attribute>displayFormat</span>=<span class=hljs-value>{d3.format(\\\".4s\\\")}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>displayFormat</span>=<span class=hljs-value>{d3.format(\\\".4s\\\")}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>displayFormat</span>=<span class=hljs-value>{d3.format(\\\".4s\\\")}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>EdgeContainer</span>&gt;</span>\\n</code></pre>\";\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<p>Let us turn it up a notch, we all have access to lots of historical data for stocks. As an example, let us work with MSFT from 1986-03-13 till 2015-03-26</p><p>That is 7221 one day periods, lot more if you have access to intra day, how can all that fit into one screen? Although technically it can be done there are a few problems</p><ol><li>Every time you zoom/pan a chart with that many data points it just does not work. Browsers do not have the power to recalculate the scales for the new domain and appear responsive.</li><li>Even with cross hair and tool tip you could see the lag</li></ol><p>Fortunately seeing end of day data over 30 years on a single chart is not really useful. This problem is addressed in React Stockcharts by displaying data consolidated by month or week, this gives a better representation of the overall price movement. This technique is employed by many trading systems to show the larger time range.</p><p>If the number of periods to show &gt; width / 3, then automatically switch to the next higher period. e.g. If width = 1000 and showing more than 333 1 day periods, the program switches to 1 week period automatically so that less than 333 periods are shown on screen.</p><p>* Period can be 1min, 5min, … 1 day, 1 week, 1 month</p><p>Let us see all this in action for MSFT 1986-03-13 till 2015-03-26</p>\";\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<h4>Overlays</h4><ul><li>Exponential Moving Average (EMA) - v0.2</li><li>Bolinger Bands - v0.2</li><li>Compare with another stock - v0.2</li></ul><h4>Indicators</h4><ul><li>Moving Average Convergence Divergence (MACD) - v0.2</li><li>Relative Strength Index (RSI) - v0.2</li></ul><h4>Chart types</h4><ul><li>Heiken Ashi - v0.1</li><li>Kagi - v0.1</li><li>Point and Figure - v0.1</li><li>Renko - v0.1</li><li>Better Renko/Mean Renko - v0.2</li><li>Line break - v0.2</li><li>Volume Profile - v0.3</li></ul><h4>Chart features</h4><ul><li>Change interval on zoom out/zoom in - v0.1</li><li>Add custom data transforms - v0.3</li></ul><h4>More examples</h4><ul><li>gists, fiddle and <a href=\\\"http://bl.ocks.org/\\\">blocks</a> for each chart type - v0.1</li></ul><h4>Open issues</h4><ul><li>Window Resize after zoom/pan messes up the chart</li><li>Candle width increases if data spans less than the width</li><li>Zoom out after threshold, slowly zooms in by 1 period at a time</li></ul>\";\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** react-stockcharts-dashboard.js\n **/","'use strict';\n/**/\nvar React = require('react');\nvar d3 = require('d3');\nvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\nrequire('styles/react-stockcharts');\nrequire('stylesheets/re-stock');\n\nvar Nav = require('lib/navbar');\nvar Sidebar = require('lib/sidebar');\nvar MainContainer = require('lib/main-container');\nvar MenuGroup = require('lib/menu-group');\nvar MenuItem = require('lib/menu-item');\nvar ContentSection = require('lib/content-section');\nvar Row = require('lib/row');\nvar Section = require('lib/section');\nvar ScrollMixin = require('lib/scroll-mixin');\n\nfunction renderPage(data, dataFull) {\n\tdata.forEach((d, i) => {\n\t\td.date = new Date(parseDate(d.date).getTime());\n\t\td.open = +d.open;\n\t\td.high = +d.high;\n\t\td.low = +d.low;\n\t\td.close = +d.close;\n\t\td.volume = +d.volume;\n\t\t// console.log(d);\n\t});\n\n\tdataFull.forEach((d, i) => {\n\t\td.date = new Date(parseDate(d.date).getTime());\n\t\td.open = +d.open;\n\t\td.high = +d.high;\n\t\td.low = +d.low;\n\t\td.close = +d.close;\n\t\td.volume = +d.volume;\n\t\t// console.log(d);\n\t});\n\n\tvar AreaChart = require('./lib/examples/areachart').init(data);\n\tvar AreaChartWithYPercent = require('./lib/examples/areachart-with-ypercent').init(data);\n\tvar AreaChartWithCrossHairMousePointer = require('./lib/examples/areachart-with-crosshair-mousepointer').init(data);\n\tvar AreaChartWithVerticalMousePointer = require('./lib/examples/areachart-with-mousepointer').init(data);\n\tvar AreaChartWithToolTip = require('./lib/examples/areachart-with-tooltip').init(data);\n\tvar AreaChartWithMA = require('./lib/examples/areachart-with-ma').init(data);\n\tvar AreaChartWithEdgeCoordinates = require('./lib/examples/areachart-with-edge-coordinates').init(data);\n\tvar LineChart = require('./lib/examples/linechart').init(data);\n\tvar CandleStickChart = require('./lib/examples/candlestickchart').init(data);\n\tvar CandleStickStockScaleChart = require('./lib/examples/candlestickchart-stockscale').init(data);\n\tvar SyncMouseMove = require('./lib/examples/synchronized-mouse-move').init(data);\n\tvar AreaChartWithZoom = require('./lib/examples/areachart-with-zoom').init(data);\n\tvar AreaChartWithZoomPan = require('./lib/examples/areachart-with-zoom-and-pan').init(data);\n\tvar CandleStickStockScaleChart = require('./lib/examples/candlestickchart-stockscale').init(data);\n\tvar CandleStickStockScaleChartWithVolumeHistogramV1 = require('./lib/examples/candlestickchart-with-volume-histogram').init(data);\n\tvar CandleStickStockScaleChartWithVolumeHistogramV2 = require('./lib/examples/candlestickchart-with-volume-histogram2').init(data);\n\tvar CandleStickChartWithCHMousePointer = require('./lib/examples/candlestickchart-with-crosshair').init(data);\n\tvar CandleStickChartWithZoomPan = require('./lib/examples/candlestickchart-with-zoompan').init(data);\n\tvar CandleStickChartWithMA = require('./lib/examples/candlestickchart-with-ma').init(data);\n\tvar CandleStickChartWithEdge = require('./lib/examples/candlestickchart-with-edge').init(data);\n\tvar CandleStickChartWithLotsOfData = require('./lib/examples/candlestickchart-with-edge').init(dataFull);\n\tvar ExamplesPage = React.createClass({\n\t\t//mixins: [ScrollMixin],\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<body>\n\t\t\t\t\t<Nav />\n\t\t\t\t\t<MainContainer>\n\t\t\t\t\t\t<Sidebar>\n\t\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t\t<MenuItem label=\"Overview\" active={true} />\n\t\t\t\t\t\t\t\t<MenuItem label=\"AreaChart\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"CandlestickChart\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"stocktime scale\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"Volume histogram\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"Mouse pointer\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"Zoom and Pan\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"Overlay\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"Edge coordinate\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"Lots of data\" />\n\t\t\t\t\t\t\t\t<MenuItem label=\"Coming soon...\" />\n\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t</Sidebar>\n\t\t\t\t\t\t<ContentSection title=\"Getting Started\">\n\t\t\t\t\t\t\t<Row title=\"Overview\">\n\t\t\t\t\t\t\t\t<Section  colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/OVERVIEW')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"AreaChart\">\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<AreaChart />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/AREACHART')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<AreaChartWithYPercent />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"CandlestickChart\">\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickChart />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/CANDLESTICK')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickStockScaleChart />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/CANDLESTICK-IMPROVED')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"stocktime scale\">\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/FINANCETIMESCALE')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"Volume histogram\">\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/VOLUME-HISTOGRAM-INTRO')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickStockScaleChartWithVolumeHistogramV1 />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/VOLUME-HISTOGRAM')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickStockScaleChartWithVolumeHistogramV2 />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/VOLUME-HISTOGRAM-Contd')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"Mouse pointer\">\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickChartWithCHMousePointer />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/MOUSEPOINTER')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"Zoom and Pan\">\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickChartWithZoomPan />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/ZOOM-AND-PAN')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"Overlay\">\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickChartWithMA />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/MOVING-AVERAGE-OVERLAY')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"Edge coordinate\">\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickChartWithEdge />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/EDGE-COORDINATE')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"Lots of data\">\n\t\t\t\t\t\t\t\t<Section colSpan={2}>\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/LOTS-OF-DATA')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<CandleStickChartWithLotsOfData />\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row title=\"Coming soon...\">\n\t\t\t\t\t\t\t\t<Section colSpan={2} className=\"react-stockchart\">\n\t\t\t\t\t\t\t\t\t<aside dangerouslySetInnerHTML={{__html: require('md/COMING-SOON')}}></aside>\n\t\t\t\t\t\t\t\t</Section>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</ContentSection>\n\t\t\t\t\t</MainContainer>\n\t\t\t\t</body>\n\t\t\t);\n\t\t}\n\t});\n\n\tReact.render(<ExamplesPage />, document.body);\n}\n// React.render(<ExamplesPage />, document.getElementById(\"area\"));\n\n//module.exports = ExamplesPage;\n\n\nd3.tsv(\"data/MSFT.tsv\", (err, MSFT) => {\n\td3.tsv(\"data/MSFT_full.tsv\", (err2, MSFTFull) => {\n\t\trenderPage(MSFT, MSFTFull)\n\t});\n})\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/dashboard.js\n **/","'use strict';\n\nvar React = require('react');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChart = React.createClass({/**/\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<Chart id={0} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn AreaChart;\n\t}\n}\n\n/*\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\n<ChartCanvas  width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t<Chart data={this.state.data}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(0.15)}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.log()}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data} interval=\"D\"\n\t\tpolyLinear={false}\n\t\tviewRange={dateRange}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={4} tickFormat={d3.time.format(\"%b\")}/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data} interval=\"D\"\n\t\tpolyLinear={false}\n\t\tviewRange={dateRange}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data}\n\t\tpolyLinear={true}\n\t\tdateAccessor={(d) => d.date}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(.5)}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n\n\n<DataTransform data={} transformDataAs={POLYLINEAR}>\n\t<DataTransform transformDataAs={RENKO}>\n\t\t<Chart currentItemEmitter={} xScale={} yScale={} xDomainUpdate={true} yDomainUpdate={true}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={} xAccesor={} tooltipDisplayEmitter={}>\n\t\t\t\t<CandlestickSeries/>\n\t\t\t</DataSeries\n\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} xAccesor={} yAccesor={} toolTipId={}>\n\t\t\t\t<LineSeries />\n\t\t\t</ChartOverlay>\n\t\t\t<ChartOverlay type=\"macrossover\" options={{ period: 10 }} id={0}> //moving average crossover\n\t\t\t\t<Markers />\n\t\t\t</ChartOverlay>\n\t\t</Chart>\n\t</DataTransform>\n\t<DataTransform transformDataAs={VOLUMEPROFILE}>\n\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t<YAxis />\n\t\t\t<LineSeries />\n\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} id={0}>\n\t\t\t\t<LineSeries />\n\t\t\t</ChartOverlay>\n\t\t\t<TooltipEmitter sendUsing={} />\n\t\t</Chart>\n\t</DataTransform>\n\t<Chart xAccesor={} yAccesor={}>\n\t\t<YAxis />\n\t\t<HistogramSeries  />\n\t\t<EdgeCoordinate />\n\t</Chart>\n\t<MouseCoordinates listenTo={} /> // this is here so it is above all charts\n\t<EdgeCoordinate /> // this is here so it is above all charts and I can click and bring an edge coordinate to the front\n\t<EdgeCoordinate edgeAt=\"\" orient=\"\" />\n\t<EventCapture mouseMove={true} zoom={true} pan={true} />\n\t<TooltipContainer>\n\t\t<OHLCTooltip />\n\t\t<MovingAverageTooltipContainer>\n\t\t\t<MATooltip onClick={} onToggle={} onRemove={} toolTipId={} />\n\t\t\t<MATooltip toolTipId={} />\n\t\t\t<MATooltip toolTipId={} />\n\t\t</MovingAverageTooltipContainer>\n\t</TooltipContainer>\n</DataTransform>\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart.jsx\n **/","'use strict';\n\nvar React = require('react');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithYPercent = React.createClass({/**/\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\t\t\t\tconsole.log(this.state.width);\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<Chart id={0} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn AreaChartWithYPercent;\n\t}\n}\n\n/*\n\n<ChartCanvas  width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t<Chart data={this.state.data}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(0.15)}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.log()}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data} interval=\"D\"\n\t\tpolyLinear={false}\n\t\tviewRange={dateRange}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={4} tickFormat={d3.time.format(\"%b\")}/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data} interval=\"D\"\n\t\tpolyLinear={false}\n\t\tviewRange={dateRange}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<DataTransform data={this.state.data}\n\t\tpolyLinear={true}\n\t\tdateAccessor={(d) => d.date}>\n\t\t<Chart>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt={-10} orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={(d) => d.close}>\n\t\t\t\t<AreaSeries />\n\t\t\t</DataSeries>\n\t\t</Chart>\n\t</DataTransform>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n<ChartCanvas  width={500} height={400}>\n\t<Chart data={this.state.data} yScale={d3.scale.pow().exponent(.5)}>\n\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t<AreaSeries />\n\t\t</DataSeries>\n\t</Chart>\n</ChartCanvas>\n\n\n<DataTransform data={} transformDataAs={POLYLINEAR}>\n\t<DataTransform transformDataAs={RENKO}>\n\t\t<Chart currentItemEmitter={} xScale={} yScale={} xDomainUpdate={true} yDomainUpdate={true}>\n\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t<YAxis axisAt=\"left\" orient=\"left\"/>\n\t\t\t<DataSeries yAccessor={} xAccesor={} tooltipDisplayEmitter={}>\n\t\t\t\t<CandlestickSeries/>\n\t\t\t</DataSeries\n\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} xAccesor={} yAccesor={} toolTipId={}>\n\t\t\t\t<LineSeries />\n\t\t\t</ChartOverlay>\n\t\t\t<ChartOverlay type=\"macrossover\" options={{ period: 10 }} id={0}> //moving average crossover\n\t\t\t\t<Markers />\n\t\t\t</ChartOverlay>\n\t\t</Chart>\n\t</DataTransform>\n\t<DataTransform transformDataAs={VOLUMEPROFILE}>\n\t\t<Chart xAccesor={} yAccesor={}>\n\t\t\t<YAxis />\n\t\t\t<LineSeries />\n\t\t\t<ChartOverlay type=\"sma\" options={{ period: 10 }} id={0}>\n\t\t\t\t<LineSeries />\n\t\t\t</ChartOverlay>\n\t\t\t<TooltipEmitter sendUsing={} />\n\t\t</Chart>\n\t</DataTransform>\n\t<Chart xAccesor={} yAccesor={}>\n\t\t<YAxis />\n\t\t<HistogramSeries  />\n\t\t<EdgeCoordinate />\n\t</Chart>\n\t<MouseCoordinates listenTo={} /> // this is here so it is above all charts\n\t<EdgeCoordinate /> // this is here so it is above all charts and I can click and bring an edge coordinate to the front\n\t<EdgeCoordinate edgeAt=\"\" orient=\"\" />\n\t<EventCapture mouseMove={true} zoom={true} pan={true} />\n\t<TooltipContainer>\n\t\t<OHLCTooltip />\n\t\t<MovingAverageTooltipContainer>\n\t\t\t<MATooltip onClick={} onToggle={} onRemove={} toolTipId={} />\n\t\t\t<MATooltip toolTipId={} />\n\t\t\t<MATooltip toolTipId={} />\n\t\t</MovingAverageTooltipContainer>\n\t</TooltipContainer>\n</DataTransform>\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-ypercent.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithCrossHairMousePointer = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas data={data} width={this.state.width} height={this.state.height} margin={{left: 5, right: 90, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={3}>\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<MouseCoordinates forChart={3} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true} mainChart={3}/>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithCrossHairMousePointer;\n\t}\n}\n\n/*\n\tchangeWidth() {\n\t\tthis.setState({\n\t\t\twidth: this.state.width + 10\n\t\t});\n\t},\n\t\t<rect width={100} height={100} onClick={this.changeWidth}/>\n*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-crosshair-mousepointer.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, VerticalMousePointer = ReStock.VerticalMousePointer\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithVerticalMousePointer = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas data={data} width={this.state.width} height={this.state.height} margin={{left: 50, right: 100, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={0} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<CurrentCoordinate forChart={0} />\n\t\t\t\t\t\t<MouseCoordinates forChart={0} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<VerticalMousePointer />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true}  mainChart={0}/>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn AreaChartWithVerticalMousePointer;\n\t}\n}\n\n/*\n\t\t\t\t\t\t\t\t\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-mousepointer.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithToolTip = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas data={data} width={this.state.width} height={this.state.height} margin={{left: 5, right: 90, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={1}>\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true} mainChart={1} />\n\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t<OHLCTooltip forChart={1} />\n\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithToolTip;\n\t}\n}\n\n/*\n\tchangeWidth() {\n\t\tthis.setState({\n\t\t\twidth: this.state.width + 10\n\t\t});\n\t},\t\t\t\t\t\t\t<OHLCTooltip xDisplayFormat={dateFormat} accessor={(d) => {return {open: d.open, high: d.high, low: d.low, close: d.close, volume: d.volume}}}/>\n\n\t\t<rect width={100} height={100} onClick={this.changeWidth}/>\n*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-tooltip.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\t, OverlaySeries = ReStock.OverlaySeries\n\t, LineSeries = ReStock.LineSeries\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithMA = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\thandleMATooltipClick(overlay) {\n\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas data={data} width={this.state.width} height={this.state.height} margin={{left: 5, right: 90, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={1}>\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t\t<OverlaySeries id={0} type=\"sma\" options={{ period: 50 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={1} type=\"sma\" options={{ period: 150 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={3} type=\"sma\" options={{ period: 250 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={4} type=\"sma\" options={{ period: 350 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={5} type=\"sma\" options={{ period: 450 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} />\n\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true}  mainChart={1}/>\n\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t<OHLCTooltip forChart={1} />\n\t\t\t\t\t\t\t<MovingAverageTooltip forChart={1} onClick={this.handleMATooltipClick} />\n\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithMA;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-ma.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\t, OverlaySeries = ReStock.OverlaySeries\n\t, LineSeries = ReStock.LineSeries\n\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t, EdgeContainer = ReStock.EdgeContainer\n\t, EdgeIndicator = ReStock.EdgeIndicator\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithEdgeCoordinates = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetEventStore() {\n\t\t\t\treturn this.refs.eventStore.getEventStore();\n\t\t\t},\n\t\t\tupdateEventStore(eventStore) {\n\t\t\t\treturn this.refs.eventStore.updateEventStore(eventStore);\n\t\t\t},\n\t\t\thandleMATooltipClick(overlay) {\n\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas \n\t\t\t\t\t\twidth={this.state.width} height={this.state.height}\n\t\t\t\t\t\tmargin={{left: 5, right: 90, top:10, bottom: 30}} data={data} ref=\"eventStore\">\n\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t\t<OverlaySeries id={0} type=\"sma\" options={{ period: 50 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={1} type=\"sma\" options={{ period: 150 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={3} type=\"sma\" options={{ period: 250 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={4} type=\"sma\" options={{ period: 350 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={5} type=\"sma\" options={{ period: 450 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} />\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={1} />\n\t\t\t\t\t\t<EdgeContainer>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={5}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</EdgeContainer>\n\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true}  mainChart={1}/>\n\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t<OHLCTooltip forChart={1} />\n\t\t\t\t\t\t\t<MovingAverageTooltip forChart={1} onClick={this.handleMATooltipClick} />\n\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithEdgeCoordinates;\n\t}\n}\n\n/*\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t<EdgeContainer>\n\n\t\t\t\t\t\t</EdgeContainer>\n\n\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t/>\n*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-edge-coordinates.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, LineSeries = ReStock.LineSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries;\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar LineChart = React.createClass({\n\t\t\trender() {\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas  data={data} width={500} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}}>\n\t\t\t\t\t\t<Chart id={1}>\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" percentScale={true} tickFormat={d3.format(\".0%\")}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<LineSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn LineChart\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/linechart.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\n\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<DataTransform transformType=\"stockscale\">\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" />\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t</DataTransform>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart-stockscale.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithEdgeCoordinates = require('./areachart-with-edge-coordinates').init(data);\n\n\t\tvar SyncMouseMove = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\thandleMATooltipClick(overlay) {\n\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t},\n\t\t\tcomponentDidMount() {\n\t\t\t\tvar eventStore = this.refs.left.getEventStore();\n\t\t\t\tthis.refs.right.updateEventStore(eventStore);\n\t\t\t\t// console.log('SyncMouseMove.componentDidMount', eventStore);\n\t\t\t},\n\t\t\tcomponentDidUpdate() {\n\t\t\t\t// console.log('SyncMouseMove.componentDidUpdate');\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"col-md-6 react-stockchart\">\n\t\t\t\t\t\t<AreaChartWithEdgeCoordinates ref=\"left\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-6 react-stockchart\">\n\t\t\t\t\t\t<AreaChartWithEdgeCoordinates ref=\"right\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn SyncMouseMove;\n\t}\n}\n\n/*\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t<EdgeContainer>\n\n\t\t\t\t\t\t</EdgeContainer>\n\n\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\ttype=\"horizontal\"\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\tforSeries={1}\n\t\t\t\t\t\t\t\tdisplayFormat={(d) => (d)}\n\t\t\t\t\t\t\t\t/>\n*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/synchronized-mouse-move.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, AreaSeries = ReStock.AreaSeries\n\t, Translate = ReStock.Translate\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\t, OverlaySeries = ReStock.OverlaySeries\n\t, LineSeries = ReStock.LineSeries\n\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t, EdgeContainer = ReStock.EdgeContainer\n\t, EdgeIndicator = ReStock.EdgeIndicator\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar AreaChartWithZoom = React.createClass({\n\t\t\tgetInitialState() {\n\t\t\t\treturn {\n\t\t\t\t\twidth: 500,\n\t\t\t\t\theight: 400\n\t\t\t\t};\n\t\t\t},\n\t\t\thandleMATooltipClick(overlay) {\n\t\t\t\tconsole.log('You clicked on ', overlay, ' handle your onclick event here...');\n\t\t\t},\n\t\t\trender() {\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-06-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas \n\t\t\t\t\t\twidth={this.state.width} height={this.state.height}\n\t\t\t\t\t\tmargin={{left: 65, right: 90, top:30, bottom: 30}} data={data} ref=\"eventStore\">\n\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\n\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.close} xAccessor={(d) => d.date}>\n\t\t\t\t\t\t\t\t<AreaSeries />\n\t\t\t\t\t\t\t\t<OverlaySeries id={0} type=\"sma\" options={{ period: 50 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={1} type=\"sma\" options={{ period: 150 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={2} type=\"sma\" options={{ period: 250 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={3} type=\"sma\" options={{ period: 350 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t<OverlaySeries id={4} type=\"sma\" options={{ period: 450 }} >\n\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} />\n\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={1} />\n\t\t\t\t\t\t<EdgeContainer>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={0}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"first\"\n\t\t\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\t\t\tedgeAt=\"left\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={2}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<EdgeIndicator\n\t\t\t\t\t\t\t\tclassName=\"horizontal\"\n\t\t\t\t\t\t\t\titemType=\"last\"\n\t\t\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\t\t\tedgeAt=\"right\"\n\t\t\t\t\t\t\t\tforChart={1}\n\t\t\t\t\t\t\t\tforOverlay={3}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</EdgeContainer>\n\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t<EventCapture mouseMove={true} zoom={true} mainChart={1}/>\n\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t<OHLCTooltip forChart={1} origin={[-60, -20]}/>\n\t\t\t\t\t\t\t<MovingAverageTooltip forChart={1} onClick={this.handleMATooltipClick}  origin={[-60, -10]}/>\n\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn AreaChartWithZoom;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/areachart-with-zoom.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n\t, HistogramSeries = ReStock.HistogramSeries\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<DataTransform transformType=\"stockscale\">\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<Chart id={2}>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={d3.format(\"s\")}/>\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.volume} >\n\t\t\t\t\t\t\t\t\t<HistogramSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t</DataTransform>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n/*\n xScaleDependsOn={1}\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart-with-volume-histogram.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n\t, HistogramSeries = ReStock.HistogramSeries\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 50, right: 50, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<DataTransform transformType=\"stockscale\">\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<Chart id={2} height={150} origin={(w, h) => [0, h - 150]}>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={d3.format(\"s\")}/>\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.volume} >\n\t\t\t\t\t\t\t\t\t<HistogramSeries className={(d) => d.close > d.open ? 'up' : 'down'} />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t</DataTransform>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n/*\n xScaleDependsOn={1}\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart-with-volume-histogram2.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n\t, HistogramSeries = ReStock.HistogramSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 40, right: 70, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<DataTransform transformType=\"stockscale\">\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<Chart id={2} height={150} origin={(w, h) => [0, h - 150]}>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={d3.format(\"s\")}/>\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.volume} >\n\t\t\t\t\t\t\t\t\t<HistogramSeries className={(d) => d.close > d.open ? 'up' : 'down'} />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t\t<EventCapture mouseMove={true} mainChart={1}/>\n\t\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t\t<OHLCTooltip forChart={1} origin={[-40, 0]}/>\n\t\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t\t</DataTransform>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n/*\n xScaleDependsOn={1}\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart-with-crosshair.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n\t, HistogramSeries = ReStock.HistogramSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 40, right: 70, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<DataTransform transformType=\"stockscale\">\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<Chart id={2} height={150} origin={(w, h) => [0, h - 150]}>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={d3.format(\"s\")}/>\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.volume} >\n\t\t\t\t\t\t\t\t\t<HistogramSeries className={(d) => d.close > d.open ? 'up' : 'down'} />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t\t<EventCapture mouseMove={true} zoom={true} pan={true} mainChart={1} defaultFocus={false} />\n\t\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t\t<OHLCTooltip forChart={1} origin={[-40, 0]}/>\n\t\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t\t</DataTransform>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n/*\n xScaleDependsOn={1}\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart-with-zoompan.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n\t, HistogramSeries = ReStock.HistogramSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\t, OverlaySeries = ReStock.OverlaySeries\n\t, LineSeries = ReStock.LineSeries\n\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t, AreaSeries = ReStock.AreaSeries\n\n\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 40, right: 70, top:10, bottom: 30}} data={data}>\n\t\t\t\t\t\t<DataTransform transformType=\"stockscale\">\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t\t<OverlaySeries id={0} type=\"sma\" options={{ period: 20, pluck: 'close' }}>\n\t\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t\t<OverlaySeries id={1} type=\"sma\" options={{ period: 30 }} >\n\t\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t\t<OverlaySeries id={2} type=\"sma\" options={{ period: 50 }} >\n\t\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={0} />\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={1} />\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={2} />\n\t\t\t\t\t\t\t<Chart id={2} height={150} origin={(w, h) => [0, h - 150]}>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={d3.format(\"s\")}/>\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.volume} >\n\t\t\t\t\t\t\t\t\t<HistogramSeries className={(d) => d.close > d.open ? 'up' : 'down'} />\n\t\t\t\t\t\t\t\t\t<OverlaySeries id={3} type=\"sma\" options={{ period: 10, pluck:'volume' }} >\n\t\t\t\t\t\t\t\t\t\t<AreaSeries/>\n\t\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={2} forOverlay={3} />\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={2}/>\n\t\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t\t<EventCapture mouseMove={true} zoom={true} pan={true} mainChart={1} defaultFocus={false} />\n\t\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t\t<OHLCTooltip forChart={1} origin={[-40, 0]}/>\n\t\t\t\t\t\t\t\t<MovingAverageTooltip forChart={1} onClick={(e) => console.log(e)} origin={[-38, 15]}/>\n\t\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t\t</DataTransform>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n/*\n xScaleDependsOn={1}\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart-with-ma.jsx\n **/","'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar ReStock = require('src/');\n\nvar ChartCanvas = ReStock.ChartCanvas\n\t, XAxis = ReStock.XAxis\n\t, YAxis = ReStock.YAxis\n\t, CandlestickSeries = ReStock.CandlestickSeries\n\t, DataTransform = ReStock.DataTransform\n\t, Chart = ReStock.Chart\n\t, DataSeries = ReStock.DataSeries\n\t, ChartWidthMixin = require('./mixin/chart-width-mixin')\n\t, InitialStateMixin = require('./mixin/initial-state-mixin')\n\t, HistogramSeries = ReStock.HistogramSeries\n\t, EventCapture = ReStock.EventCapture\n\t, MouseCoordinates = ReStock.MouseCoordinates\n\t, CrossHair = ReStock.CrossHair\n\t, TooltipContainer = ReStock.TooltipContainer\n\t, OHLCTooltip = ReStock.OHLCTooltip\n\t, OverlaySeries = ReStock.OverlaySeries\n\t, LineSeries = ReStock.LineSeries\n\t, MovingAverageTooltip = ReStock.MovingAverageTooltip\n\t, CurrentCoordinate = ReStock.CurrentCoordinate\n\t, AreaSeries = ReStock.AreaSeries\n\t, EdgeContainer = ReStock.EdgeContainer\n\t, EdgeIndicator = ReStock.EdgeIndicator\n\n\n;\n\nmodule.exports = {\n\tinit(data) {\n\t\tvar CandleStickChart = React.createClass({\n\t\t\tmixins: [InitialStateMixin, ChartWidthMixin],\n\t\t\trender() {\n\t\t\t\tif (!this.state.width) return <div />;\n\n\t\t\t\tvar parseDate = d3.time.format(\"%Y-%m-%d\").parse\n\t\t\t\tvar dateRange = { from: parseDate(\"2012-12-01\"), to: parseDate(\"2012-12-31\")}\n\t\t\t\tvar dateFormat = d3.time.format(\"%Y-%m-%d\");\n\n\t\t\t\treturn (\n\t\t\t\t\t<ChartCanvas width={this.state.width} height={400} margin={{left: 90, right: 70, top:10, bottom: 30}} data={data} interval=\"1D\" >\n\t\t\t\t\t\t<DataTransform transformType=\"stockscale\">\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t\t<OverlaySeries id={0} type=\"sma\" options={{ period: 20, pluck: 'close' }}>\n\t\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t\t<OverlaySeries id={1} type=\"sma\" options={{ period: 30 }} >\n\t\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t\t<OverlaySeries id={2} type=\"sma\" options={{ period: 50 }} >\n\t\t\t\t\t\t\t\t\t\t<LineSeries/>\n\t\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={0} />\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={1} />\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={1} forOverlay={2} />\n\t\t\t\t\t\t\t<Chart id={2} height={150} origin={(w, h) => [0, h - 150]}>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={d3.format(\"s\")}/>\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={(d) => d.volume} >\n\t\t\t\t\t\t\t\t\t<HistogramSeries className={(d) => d.close > d.open ? 'up' : 'down'} />\n\t\t\t\t\t\t\t\t\t<OverlaySeries id={3} type=\"sma\" options={{ period: 10, pluck:'volume' }} >\n\t\t\t\t\t\t\t\t\t\t<AreaSeries/>\n\t\t\t\t\t\t\t\t\t</OverlaySeries>\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={2} forOverlay={3} />\n\t\t\t\t\t\t\t<CurrentCoordinate forChart={2}/>\n\t\t\t\t\t\t\t<EdgeContainer>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"last\" orient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\" forChart={1} forOverlay={0}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"last\" orient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\" forChart={1} forOverlay={1}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"last\" orient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\" forChart={1} forOverlay={2}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"first\" orient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\" forChart={1} forOverlay={0}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"first\" orient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\" forChart={1} forOverlay={1}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"first\" orient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\" forChart={1} forOverlay={2}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"first\" orient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\" forChart={2} forOverlay={3} displayFormat={d3.format(\".4s\")}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"last\" orient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\" forChart={2} forOverlay={3} displayFormat={d3.format(\".4s\")}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"first\" orient=\"left\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"left\" forChart={2} displayFormat={d3.format(\".4s\")}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EdgeIndicator className=\"horizontal\" itemType=\"last\" orient=\"right\"\n\t\t\t\t\t\t\t\t\tedgeAt=\"right\" forChart={2} displayFormat={d3.format(\".4s\")}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</EdgeContainer>\n\t\t\t\t\t\t\t<MouseCoordinates forChart={1} xDisplayFormat={dateFormat} yDisplayFormat={(y) => y.toFixed(2)}>\n\t\t\t\t\t\t\t\t<CrossHair />\n\t\t\t\t\t\t\t</MouseCoordinates>\n\t\t\t\t\t\t\t<EventCapture mouseMove={true} zoom={true} pan={true} mainChart={1} defaultFocus={false} />\n\t\t\t\t\t\t\t<TooltipContainer>\n\t\t\t\t\t\t\t\t<OHLCTooltip forChart={1} origin={[-50, 0]}/>\n\t\t\t\t\t\t\t\t<MovingAverageTooltip forChart={1} onClick={(e) => console.log(e)} origin={[-48, 15]}/>\n\t\t\t\t\t\t\t</TooltipContainer>\n\t\t\t\t\t\t</DataTransform>\n\t\t\t\t\t</ChartCanvas>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\treturn CandleStickChart\n\t}\n}\n\n\n/*\n xScaleDependsOn={1}\n\t\t\t\t\t\t\t<Chart id={1} >\n\t\t\t\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5}/>\n\t\t\t\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\t\t\t\t\t\t\t\t<DataSeries yAccessor={CandlestickSeries.yAccessor} >\n\t\t\t\t\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t\t\t\t</DataSeries>\n\t\t\t\t\t\t\t</Chart>\n\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/examples/candlestickchart-with-edge.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar Nav = React.createClass({\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-fixed-top\">\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t\t<a className=\"navbar-brand\" href=\"index.html\">React Stockcharts</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n});\n\nmodule.exports = Nav;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/navbar.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar SideBar = React.createClass({\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"col-sm-3 col-md-2 sidebar\">{this.props.children}</div>\n\t\t);\n\t}\n});\n\nmodule.exports = SideBar;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/sidebar.jsx\n **/","'use strict';\nvar React = require('react');\nvar Row = require('lib/row');\n\nvar MainContainer = React.createClass({\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container-fluid\" id=\"MainContainer\">\n\t\t\t\t<Row>{this.props.children}</Row>\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nmodule.exports = MainContainer;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/main-container.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar MenuGroup = React.createClass({\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"nav nav-sidebar\">{this.props.children}</ul>\n\t\t);\n\t}\n});\n\nmodule.exports = MenuGroup;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/menu-group.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar MenuItem = React.createClass({\n\tpropTypes: {\n\t\tactive: React.PropTypes.bool,\n\t\tanchor: React.PropTypes.string,\n\t\tlabel: React.PropTypes.string.isRequired\n\t},\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tactive: false,\n\t\t};\n\t},\n\trender() {\n\t\tvar className = (this.props.active) ? 'active' : '';\n\t\tvar anchor = this.props.anchor || this.props.label;\n\t\treturn (\n\t\t\t<li className={className}>\n\t\t\t\t<a href={'#' + anchor}>{this.props.label}\n\t\t\t\t\t{(this.props.active) ? <span className=\"sr-only\">(current)</span> : ''}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t}\n});\n\nmodule.exports = MenuItem;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/menu-item.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar ContentSection = React.createClass({\n\tpropTypes: {\n\t\ttitle: React.PropTypes.string.isRequired\n\t},\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"ContentSection\" className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n\t\t\t\t<h1 className=\"page-header\">{this.props.title}</h1>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nmodule.exports = ContentSection;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/content-section.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar Row = React.createClass({\n\tpropTypes: {\n\t\ttitle: React.PropTypes.string,\n\t\tanchor: React.PropTypes.string\n\t},\n\trender() {\n\t\tvar anchor = this.props.anchor || this.props.title;\n\t\tvar title = this.props.title\n\t\t\t\t? <h4><a id={anchor} href={'#' + anchor}>{this.props.title}</a></h4>\n\t\t\t\t: null;\n\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t{title}\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nmodule.exports = Row;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/row.jsx\n **/","'use strict';\nvar React = require('react');\n\nvar Section = React.createClass({\n\tpropTypes: {\n\t\tcolSpan: React.PropTypes.number.isRequired,\n\t\ttitle: React.PropTypes.string\n\t},\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tcolSpan: 1\n\t\t}\n\t},\n\trender() {\n\t\tvar className = this.props.className + ' col-md-' + (6 * this.props.colSpan);\n\t\tvar title = this.props.title ? <h4>{this.props.title}</h4> : null;\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t{title}\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nmodule.exports = Section;\n\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/section.jsx\n **/","'use strict';\nvar contentTop = [];\n\nvar ScrollMixin = {\n\thandleWindowResize() {\n\t\tcontentTop.splice(0);\n\t\t// Set up content an array of locations\n\t\t$('.nav-sidebar').find('a').each(function(){\n\t\t\tcontentTop.push( $( $(this).attr('href') ).offset().top );\n\t\t})\n\t},\n\tcomponentWillUnMount() {\n\t\twindow.removeEventListener(\"resize\", this.handleWindowResize);\n\t},\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"resize\", this.handleWindowResize);\n\n\t\tvar topRange      = 200,  // measure from the top of the viewport to X pixels down\n\t\t\tedgeMargin    = 20,   // margin above the top or margin from the end of the page\n\t\t\tanimationTime = 500; // time in milliseconds\n\t\t\t\n\t\t// Stop animated scroll if the user does something\n\t\t$('html,body').bind('scroll mousedown DOMMouseScroll mousewheel keyup', function(e) {\n\t\t\tif ( e.which > 0 || e.type == 'mousedown' || e.type == 'mousewheel' ) {\n\t\t\t\t$('html,body').stop();\n\t\t\t}\n\t\t});\n\t\t//$('div#ContentSection').scrollTop(-50)\n\t\t// console.log($('html,body').scrollTop());\n\t\t// Set up content an array of locations\n\t\t$('.nav-sidebar').find('a').each(function(){\n\t\t\tcontentTop.push( $( $(this).attr('href') ).offset().top );\n\t\t})\n\t\t// Animate menu scroll to content\n\t\t$('.nav-sidebar').find('a').click(function() {\n\t\t\tvar sel = this,\n\t\t\t\tindex = $('.nav-sidebar a').index( $(this) ),\n\t\t\t\toffset = index === contentTop.length - 1 ? 0 : -50,\n\t\t\t\tnewTop = Math.min( contentTop[index], $(document).height() - $(window).height() ) + offset; // get content top or top position if at the document bottom\n\t\t\t// console.log(newTop)\n\t\t\t$('html,body')\n\t\t\t\t//.stop()\n\t\t\t\t.animate({\n\t\t\t\t\t\t'scrollTop' : newTop\n\t\t\t\t\t},\n\t\t\t\t\tanimationTime/*,\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\twindow.location.hash = $(sel).attr('href');\n\t\t\t\t\t}*/);\n\t\t\treturn false;\n\t\t});\n\n\t\t$(window).scroll(function(e) {\n\t\t\t// console.log(e)\n\t\t\tvar winTop = $(window).scrollTop(),\n\t\t\t\tbodyHt = $(document).height(),\n\t\t\t\tvpHt = $(window).height() + edgeMargin;  // viewport height + margin\n\n\t\t\t$.each( contentTop, function(i, loc){\n\t\t\t\tif ( ( loc > winTop - edgeMargin && ( loc < winTop + topRange || ( winTop + vpHt ) >= bodyHt ) ) ) {\n\t\t\t\t\t$('ul.nav-sidebar li')\n\t\t\t\t\t\t.removeClass('active')\n\t\t\t\t\t\t.eq(i).addClass('active');\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t\t$(window).on('hashchange', function() {\n\t\t\tvar top = $('html,body').scrollTop() - 50;\n\t\t\t$('html,body').scrollTop(top);\n\t\t});/**/\n\t}\n};\n\nmodule.exports = ScrollMixin;\n\n\n/** WEBPACK FOOTER **\n ** ./docs/lib/scroll-mixin.jsx\n **/","module.exports = \"<h4>React Stockcharts - Built with <a href=\\\"http://facebook.github.io/react/\\\">React JS</a> and <a href=\\\"http://d3js.org/\\\">d3</a></h4><p>React Stockcharts project provides a flexible library to create charts that represent time series data. It is easy to learn and can be customized by</p><ul><li>adding custom chart components</li><li>access the <code>svg</code> elements</li><li>styling with CSS</li></ul><p>There are many charting libraries available, but I feel there are very few that provide the features and flexibility to create stock charts that compete with the likes of the ones provided by commercial trading systems.</p><h4>SVG vs Canvas</h4><p>When deciding on a web technology for charts - not just charts, but ones which are interactive too - representing many many data points, the decision of performance is bound to come up, and HTML5 presents options.</p><p>I am not going to debate between the pros and cons between SVG and Canvas. They are discussed at great length <a href=http://stackoverflow.com/questions/12310024/fast-and-responsive-interactive-charts-graphs-svg-canvas-other>here</a> and <a href=http://stackoverflow.com/questions/5882716/html5-canvas-vs-svg-vs-div>here</a>. Needless to say they are both very powerful and for charting, there really is no right answer. I have chosen to use SVG for React Stockcharts because,</p><ul><li>you will see very soon the performance is not an issue really, thanks to React JS and the virtual dom</li><li>the flexibility of development and the convinenience of debuging a DOM is hard to beat</li><li>styling with css is something I cannot give up</li></ul><p>That said, I do wish to some day create a fork of this on Canvas.</p><h4>DOM Manipulation</h4><p>The only place where DOM Manipulation is used is in the <code>XAxis</code> and <code>YAxis</code> components, I will soon migrate to use the native <code>svg</code> axes provided by <a href=https://github.com/esbullington/react-d3>react-d3</a>, at which time the entire project will be built with native svg components making server side rendering possible.</p><p>Now let us get started with a very simple AreaChart</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/OVERVIEW.md\n ** module id = 36\n ** module chunks = 0\n **/","module.exports = \"<p><code>data.tsv</code></p><table><thead><tr><th>date<th>close<tbody><tr><td>2011-01-24<td>5743.25<tr><td>2011-01-25<td>5687.4<tr><td>2011-01-27<td>5604.3<tr><td>2011-01-28<td>5512.15<tr><td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>'d3'</span>);\\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>\\\"%Y-%m-%d\\\"</span>).parse\\n\\nd3.tsv(<span class=hljs-string>\\\"path/to/data.tsv\\\"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\\n    data.forEach((d, i) =&gt; {\\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\\n        d.close = +d.close;\\n    });\\n...\\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>Let us review each line</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n</code></pre><p>Creates an <code>svg</code> element with the provided <code>height</code> and <code>width</code> and creates a <code>svg:g</code> element with the provided <code>margin</code>. <code>data</code> is well the data used to plot.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\\n</code></pre><p>There can be one or more <code>Chart</code>s in each <code>ChartCanvas</code> and hence the need for an <code>id</code> attribute.</p><p>If you are not familiar with <a href=https://github.com/mbostock/d3/wiki/Scales>scales</a> in d3 I recommend doing so. Each <code>Chart</code> defines an <code>xScale</code> and <code>yScale</code>. For starters, it is easier to understand scale as a function which converts a <code>domain</code> say 2011-01-01 to 2014-12-31 to a <code>range</code> say 0 to 500 pixels. This scale can now interpolate an input date to a value in pixels which can be drawn.</p><p>With SVG it is important to understand the coordinate system and where the origin <code>(0, 0)</code> is located. for a SVG of size 300x100, the</p><p><img src=http://www.w3.org/TR/SVG/images/coords/InitialCoords.png alt=\\\"alt text\\\" title=\\\"Logo Title Text 1\\\"></p><p>For more details about the SVG coordinate system see <a href=http://www.w3.org/TR/SVG/coords.html>here</a></p><p>Back to scales,</p><p>A time scale converts a date/time domain to a range, this is used as the xScale, the xDomain is calculated from the input data, and the range is calculated as <code>height - margin.left - margin.right</code>.</p><p>A Linear scale converts a <code>domain</code> say 4600 - 6200 to a <code>range</code> say 0 to 300 pixels. Like the name represents the data in between is interpolated linear, similarly there is log scale which creates a logrithmic scale, which is not linear.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\\n</code></pre><p>The <code>ticks</code> attribute simple passes on the value to the <a href=https://github.com/mbostock/d3/wiki/SVG-Axes#ticks>d3.axis</a>, the <code>XAxis</code> also has the following optional attributes <code>innerTickSize, outerTickSize, tickFormat, tickPadding, tickSize, ticks, tickValues</code> all of which correspond to a function with the same name in d3.axis.</p><p><code>axisAt</code> takes on possible values as <code>top, middle, bottom</code> for advanced cases, you can also pass in a number indicating the pixel position where the axis has to be drawn.</p><p><code>orient</code> takes on possible values as <code>top, bottom</code>, this orients the axis ticks on the top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> /&gt;</span>\\n</code></pre><p>Similar to <code>XAxis</code> except left/right instead of top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p>A <code>DataSeries</code> is a shell component intended to house the x and y Accessor. You will find in other examples below how <code>DataSeries</code> helps create a yAccessor with more than one y value to plot for a given x, like in candlestick.</p><p>If you are not clear what the arrow functions mean, read more about them <a href=https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions>here</a>. In short</p><p><code>(d) =&gt; d.close</code> means <code>function (d) { return d.close; }</code></p><p><code>(d) =&gt; d.date</code> means <code>function (d) { return d.date; }</code></p><h3>Highly customizable you say, how?</h3><p>So you dont want to display the <code>YAxis</code> at all, go ahead and just remove that.</p><p>Want to display <code>YAxis</code> on both left and right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> /&gt;</span>\\n</code></pre><p>next to the existing <code>YAxis</code></p><p>Create custom components and use them, it is explained <a href=http://add.link.here>here</a></p><p>Want to add a <code>YAxis</code> with a percent scale on the right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>percentScale</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\".0%\\\")}</span>/&gt;</span>\\n</code></pre><p>and you get.</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/AREACHART.md\n ** module id = 37\n ** module chunks = 0\n **/","module.exports = \"<p>well, that looks ok, but something is not right. Look closer, you will find that the candles are not spread at regular intervals, there is a gap of say 2 candles every so often. That gap is because the data is plot on a continious time scale, and a continious time scale has week ends and national holidays, days when trading does not happen. Now we dont want to show non trading days on the chart. If it is an intra day chart, you want to see only 9:30 AM to 4:00 PM (or 1:00 PM if it is holiday hours)</p><p>What we need here is to show time that is not continious on the x axis. Enter <strong>stocktime scale</strong> (or <strong>financetime scale</strong>).</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/CANDLESTICK.md\n ** module id = 38\n ** module chunks = 0\n **/","module.exports = \"<p>That is better. let us see how to create it</p><p><code>data.tsv</code></p><table><thead><tr><th>date<th>open<th>high<th>low<th>close<tbody><tr><td>2013-08-16<td>5705.45<td>5716.6<td>5496.05<td>5507.85<tr><td>2013-08-19<td>5497.55<td>5499.65<td>5360.65<td>5414.75<tr><td>2013-08-20<td>5353.45<td>5417.8<td>5306.35<td>5401.45<tr><td>…<td>…<td>…<td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>'d3'</span>);\\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>\\\"%Y-%m-%d\\\"</span>).parse;\\n\\nd3.tsv(<span class=hljs-string>\\\"path/to/data.tsv\\\"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\\n    data.forEach((d, i) =&gt; {\\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\\n        d.open = +d.open;\\n        d.high = +d.high;\\n        d.low = +d.low;\\n        d.close = +d.close;\\n    });\\n...\\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>Compare this with the simpler <code>AreaChart</code> example from before</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n</code></pre><p>It is the same as for <code>AreaChart</code></p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n</code></pre><p>Converting the data provided as input which when taken as a linear scale includes weekend time breaks, into a linear scale over the input domain. More usecases of <code>DataTransform</code> are listed below.</p><p><strong>Coming Soon</strong> Create your own transforms and register them for use</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n</code></pre><p>Same as for <code>AreaChart</code> example above</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p>You will notice that the <code>DataSeries</code> component does not include the <code>xAccessor</code>, that is because it is defined inside the stockscale <code>DataTransform</code> which provides the <code>xAccessor</code> behind the scenes</p><p><code>yAccessor={CandlestickSeries.yAccessor}</code> is just a convenience <code>yAccessor</code> available, it can also be represented as</p><pre><code class=language-js>yAccessor={(d) =&gt; ({open: d.open, high: d.high, low: d.low, close: d.close})}\\n</code></pre><p>or if arrow functions is not your thing, use</p><pre><code class=language-js>yAccessor={<span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-params>(d)</span> </span>{ <span class=hljs-keyword>return</span> {open: d.open, high: d.high, low: d.low, close: d.close}; }}\\n</code></pre>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/CANDLESTICK-IMPROVED.md\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = \"<p>The financetime scale takes the input data and converts to linear and plots time on the axis. The outcome is quite interesting. This scale is particularly of use not just for simple time series data, but more importantly for charts which are dependent on price movement, think Point &amp; Figure, Line break, Kagi, Renko.</p><p>scale provides ticks of the format</p><ul><li>Start of year as <code>YYYY</code> e.g. 2013</li><li>Start of Quarter as <code>mmm YYYY</code> e.g. Oct 2013</li><li>Start of Month <code>as mmm</code> e.g. Nov</li><li>Start of Week as <code>dd mmm</code> e.g. 25 Nov</li><li>day as <code>a dd</code> e.g. Wed 27</li></ul><p><strong>Coming Soon</strong> updated financetime scale for intra day</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/FINANCETIMESCALE.md\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = \"<p>There are a couple of ways Volume histogram is usually displayed. Let us see them.</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/VOLUME-HISTOGRAM-INTRO.md\n ** module id = 41\n ** module chunks = 0\n **/","module.exports = \"<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span>&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\"s\\\")}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>Look!!! there is more than one <code>Chart</code> there.</p><p>Each <code>Chart</code> has a pair of <code>xScale</code> and <code>yScale</code> since <code>volume</code> is on a different domain from <code>open</code>/<code>high</code>/<code>low</code>/<code>close</code>, It has to be created as a different <code>Chart</code>.</p><p>To summarize, All <code>Chart</code>s use the same <code>data</code> but each <code>Chart</code> has different <code>xScale</code> and <code>yScale</code>. In this example above the <code>xScale</code> of chart 2 has the same <code>domain</code> and <code>range</code> as the <code>xScale</code> of <code>Chart</code> 1, so we did not draw the <code>XAxis</code> again for the Volume.</p><h5>But… I dont want the Volume chart to span the whole chart height.</h5><p>I got you covered.</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/VOLUME-HISTOGRAM.md\n ** module id = 42\n ** module chunks = 0\n **/","module.exports = \"<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\"s\\\")}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p>The portion of interest here is</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\\n</code></pre><p>the chart has a defined <code>height</code> of 150, which is good.</p><p><code>origin</code> can be either a function which returns a <code>[x, y]</code> to be used as origin or it can be an array with 2 elements representing <code>[x, y]</code>. The default value for <code>origin</code> is <code>[0, 0]</code></p><p><code>(w, h) =&gt; [0, h - 150]</code> is the same as <code>function (w, h) { return [0, h - 150]; }</code></p><p>given the <code>width</code> and <code>height</code> available inside the <code>ChartCanvas</code> as input, this function returns an origin of <code>[0, height - 150]</code> to draw the volume histogram</p><p>Similarly the <code>className</code> of <code>HistogramSeries</code> accepts either</p><ul><li>a function which returns a string</li><li>or a string</li></ul><p>which is used as the css class</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n</code></pre><p>a class of ‘up’ is applied if <code>close &gt; open</code> for that day and ‘down’ otherwise</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/VOLUME-HISTOGRAM-Contd.md\n ** module id = 43\n ** module chunks = 0\n **/","module.exports = \"<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>40</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>70</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\"s\\\")}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>MouseCoordinates</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>xDisplayFormat</span>=<span class=hljs-value>{d3.time.format(\\\"%Y-%m-%d\\\")}</span> <span class=hljs-attribute>yDisplayFormat</span>=<span class=hljs-value>{(y)</span> =&gt;</span> y.toFixed(2)}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>CrossHair</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>MouseCoordinates</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span>/&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</code></pre><p><code>EventCapture</code> is used to capture mousemove, scroll/zoom and drag events</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span>/&gt;</span>\\n</code></pre><p>By default none of the events are captured, and each has to be enabled individually <code>mouseMove</code> is enabled above. <code>mainChart</code> as the name describes is used to refer to the <code>Chart</code> from which the <code>xScale</code> and <code>yScale</code> are used to determine the nearest value to the mouse position.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>MouseCoordinates</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>xDisplayFormat</span>=<span class=hljs-value>{d3.time.format(\\\"%Y-%m-%d\\\")}</span> <span class=hljs-attribute>yDisplayFormat</span>=<span class=hljs-value>{(y)</span> =&gt;</span> y.toFixed(2)}&gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>CrossHair</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>MouseCoordinates</span>&gt;</span>\\n</code></pre><p>Displays the crosshair at the mouse position, the attributes of <code>MouseCoordinates</code> are self explanatory. You can swap out with <code>CrossHair</code> with <code>VerticalMousePointer</code> if crosshair is not your thing.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n</code></pre><p>Displays the tooltip on the top left, use the <code>origin</code> and <code>margin</code> of <code>ChartCanvas</code> to adjust the position of the tooltip. You can also create your custom tooltip, by swapping out <code>OHLCTooltip</code> with your own</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/MOUSEPOINTER.md\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = \"<p>The only change is enabling <code>zoom</code> and <code>pan</code></p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>zoom</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>pan</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>defaultFocus</span>=<span class=hljs-value>{false}</span> /&gt;</span>\\n</code></pre><p>other than enabling <code>zoom</code> and <code>pan</code>, <code>defaultFocus</code> of <code>true</code> means mouse scroll over the chart, triggers zoom action if zoom is enabled. If <code>defaultFocus</code> is <code>false</code>, you have to click on the chart to get focus and then all scroll events are zoom events if <code>zoom</code> is enabled</p><p>You could set the focus programatically by adding a ref to the <code>EventCapture</code></p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>ref</span>=<span class=hljs-value>\\\"eventCapture\\\"</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>zoom</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>pan</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>defaultFocus</span>=<span class=hljs-value>{false}</span> /&gt;</span>\\n</code></pre><pre><code class=language-js><span class=hljs-keyword>this</span>.refs.eventCapture.toggleFocus(); <span class=hljs-comment>// to toggle focus so scroll events over the chart will either simulate zoom or perform the default action</span>\\n\\n<span class=hljs-keyword>this</span>.refs.eventCapture.setFocus(<span class=hljs-literal>false</span>); <span class=hljs-comment>// set the focus </span>\\n</code></pre>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/ZOOM-AND-PAN.md\n ** module id = 45\n ** module chunks = 0\n **/","module.exports = \"<p><code>Overlay</code>s share the scales of a <code>Chart</code> and contribute to the <code>domain</code> of the <code>Chart</code> they belong to.</p><p>In this chart we are introducing</p><ul><li>Moving average on daily <code>close</code> as a <code>LineSeries</code></li><li>Moving average on daily <code>volume</code> as an <code>AreaSeries</code></li><li>Current item indicator as a circle over the different moving averages</li><li>Moving average tooltip</li></ul><p>Let us review each of these in a little more detail</p><h4>Moving average on daily <code>close</code> as a <code>LineSeries</code></h4><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=<span class=hljs-value>{{</span> <span class=hljs-attribute>period:</span> <span class=hljs-attribute>20</span>, <span class=hljs-attribute>pluck:</span> '<span class=hljs-attribute>close</span>' }}&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=<span class=hljs-value>{{</span> <span class=hljs-attribute>period:</span> <span class=hljs-attribute>30</span> }} &gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=<span class=hljs-value>{{</span> <span class=hljs-attribute>period:</span> <span class=hljs-attribute>50</span> }} &gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p><code>type</code> indicates it is a simple moving average, <code>options</code> used to specify the moving average <code>period</code>, and <code>pluck</code> to specify attribute against which moving average is to be calculated. If not specified, <code>pluck</code> defaults to <code>close</code></p><h4>Moving average on daily <code>volume</code> as an <code>AreaSeries</code></h4><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{3}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=<span class=hljs-value>{{</span> <span class=hljs-attribute>period:</span> <span class=hljs-attribute>10</span>, <span class=hljs-attribute>pluck:</span>'<span class=hljs-attribute>volume</span>' }} &gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span>/&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n</code></pre><p>Similar to above</p><h4>Current item indicator as a circle over the different moving averages</h4><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{0}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{1}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{2}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{3}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span>/&gt;</span>\\n</code></pre><p>That was easy, right?</p><p><code>forOverlay</code> is an optional attribute, and absense of that will default the <code>CurrentCoordinate</code> to display a circle on the main series. This only makes sense if the main series plots a single value on y. For <code>CandlestickSeries</code> as it plots 4 attributes, <code>CurrentCoordinate</code> is not valid for <code>CandlestickSeries</code></p><h4>Moving average tooltip</h4><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>MovingAverageTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>onClick</span>=<span class=hljs-value>{(e)</span> =&gt;</span> console.log(e)} origin={[-38, 15]}/&gt;\\n<span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n</code></pre><p>Open the dev console and see what is logged on click of the moving average tooltip</p><p>adding it all together</p><pre><code class=language-jsx><span class=xml><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=</span></span><span class=hljs-expression>{{<span class=hljs-variable>left</span>: 40, <span class=hljs-variable>right</span>: 70, <span class=hljs-variable>top</span>:10, <span class=hljs-variable>bottom</span>: 30}}</span><span class=xml><span class=hljs-tag> <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>\\\"stockscale\\\"</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"bottom\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"bottom\\\"</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=</span></span><span class=hljs-expression>{{ <span class=hljs-variable>period</span>: 20, <span class=hljs-variable>pluck</span>: '<span class=hljs-variable>close</span>' }}</span><span class=xml><span class=hljs-tag>&gt;</span>\\n                    <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n                <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=</span></span><span class=hljs-expression>{{ <span class=hljs-variable>period</span>: 30 }}</span><span class=xml><span class=hljs-tag> &gt;</span>\\n                    <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n                <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n                <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=</span></span><span class=hljs-expression>{{ <span class=hljs-variable>period</span>: 50 }}</span><span class=xml><span class=hljs-tag> &gt;</span>\\n                    <span class=hljs-tag>&lt;<span class=hljs-title>LineSeries</span>/&gt;</span>\\n                <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{0}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{1}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{2}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(\\\"s\\\")}</span>/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? 'up' : 'down'} /&gt;\\n                <span class=hljs-tag>&lt;<span class=hljs-title>OverlaySeries</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{3}</span> <span class=hljs-attribute>type</span>=<span class=hljs-value>\\\"sma\\\"</span> <span class=hljs-attribute>options</span>=</span></span><span class=hljs-expression>{{ <span class=hljs-variable>period</span>: 10, <span class=hljs-variable>pluck</span>:'<span class=hljs-variable>volume</span>' }}</span><span class=xml><span class=hljs-tag> &gt;</span>\\n                    <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span>/&gt;</span>\\n                <span class=hljs-tag>&lt;/<span class=hljs-title>OverlaySeries</span>&gt;</span>\\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{3}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>CurrentCoordinate</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span>/&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>MouseCoordinates</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>xDisplayFormat</span>=<span class=hljs-value>{dateFormat}</span> <span class=hljs-attribute>yDisplayFormat</span>=<span class=hljs-value>{(y)</span> =&gt;</span> y.toFixed(2)}&gt;\\n            <span class=hljs-tag>&lt;<span class=hljs-title>CrossHair</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>MouseCoordinates</span>&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>zoom</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>pan</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>defaultFocus</span>=<span class=hljs-value>{false}</span> /&gt;</span>\\n        <span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\\n            <span class=hljs-tag>&lt;<span class=hljs-title>MovingAverageTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>onClick</span>=<span class=hljs-value>{(e)</span> =&gt;</span> console.log(e)} origin={[-38, 15]}/&gt;\\n        <span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\\n</span></code></pre>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/MOVING-AVERAGE-OVERLAY.md\n ** module id = 46\n ** module chunks = 0\n **/","module.exports = \"<p><code>EdgeIndicator</code>s are inside the <code>EdgeContainer</code> and can be of type <code>first</code> or <code>last</code>, can be located <code>left</code> or <code>right</code> and orient <code>left</code> or <code>right</code>. Below you see edges <code>first</code> and <code>last</code> for all the overlays and also for the <code>volume</code> histogram.</p><p>The edge values are updated on zoom and pan too</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>EdgeContainer</span>&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{0}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{1}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{2}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{0}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{1}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{2}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{3}</span> <span class=hljs-attribute>displayFormat</span>=<span class=hljs-value>{d3.format(\\\".4s\\\")}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>forOverlay</span>=<span class=hljs-value>{3}</span> <span class=hljs-attribute>displayFormat</span>=<span class=hljs-value>{d3.format(\\\".4s\\\")}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"first\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"left\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"left\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>displayFormat</span>=<span class=hljs-value>{d3.format(\\\".4s\\\")}</span> /&gt;</span>\\n    <span class=hljs-tag>&lt;<span class=hljs-title>EdgeIndicator</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>\\\"horizontal\\\"</span> <span class=hljs-attribute>itemType</span>=<span class=hljs-value>\\\"last\\\"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>\\\"right\\\"</span>\\n        <span class=hljs-attribute>edgeAt</span>=<span class=hljs-value>\\\"right\\\"</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>displayFormat</span>=<span class=hljs-value>{d3.format(\\\".4s\\\")}</span> /&gt;</span>\\n<span class=hljs-tag>&lt;/<span class=hljs-title>EdgeContainer</span>&gt;</span>\\n</code></pre>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/EDGE-COORDINATE.md\n ** module id = 47\n ** module chunks = 0\n **/","module.exports = \"<p>Let us turn it up a notch, we all have access to lots of historical data for stocks. As an example, let us work with MSFT from 1986-03-13 till 2015-03-26</p><p>That is 7221 one day periods, lot more if you have access to intra day, how can all that fit into one screen? Although technically it can be done there are a few problems</p><ol><li>Every time you zoom/pan a chart with that many data points it just does not work. Browsers do not have the power to recalculate the scales for the new domain and appear responsive.</li><li>Even with cross hair and tool tip you could see the lag</li></ol><p>Fortunately seeing end of day data over 30 years on a single chart is not really useful. This problem is addressed in React Stockcharts by displaying data consolidated by month or week, this gives a better representation of the overall price movement. This technique is employed by many trading systems to show the larger time range.</p><p>If the number of periods to show &gt; width / 3, then automatically switch to the next higher period. e.g. If width = 1000 and showing more than 333 1 day periods, the program switches to 1 week period automatically so that less than 333 periods are shown on screen.</p><p>* Period can be 1min, 5min, … 1 day, 1 week, 1 month</p><p>Let us see all this in action for MSFT 1986-03-13 till 2015-03-26</p>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/LOTS-OF-DATA.md\n ** module id = 48\n ** module chunks = 0\n **/","module.exports = \"<h4>Overlays</h4><ul><li>Exponential Moving Average (EMA) - v0.2</li><li>Bolinger Bands - v0.2</li><li>Compare with another stock - v0.2</li></ul><h4>Indicators</h4><ul><li>Moving Average Convergence Divergence (MACD) - v0.2</li><li>Relative Strength Index (RSI) - v0.2</li></ul><h4>Chart types</h4><ul><li>Heiken Ashi - v0.1</li><li>Kagi - v0.1</li><li>Point and Figure - v0.1</li><li>Renko - v0.1</li><li>Better Renko/Mean Renko - v0.2</li><li>Line break - v0.2</li><li>Volume Profile - v0.3</li></ul><h4>Chart features</h4><ul><li>Change interval on zoom out/zoom in - v0.1</li><li>Add custom data transforms - v0.3</li></ul><h4>More examples</h4><ul><li>gists, fiddle and <a href=\\\"http://bl.ocks.org/\\\">blocks</a> for each chart type - v0.1</li></ul><h4>Open issues</h4><ul><li>Window Resize after zoom/pan messes up the chart</li><li>Candle width increases if data spans less than the width</li><li>Zoom out after threshold, slowly zooms in by 1 period at a time</li></ul>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./docs/md/COMING-SOON.md\n ** module id = 49\n ** module chunks = 0\n **/"],"sourceRoot":""}