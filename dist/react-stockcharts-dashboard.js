webpackJsonp([1],[function(e,t,a){"use strict";var s=a(1),n=a(2),l=n.time.format("%Y-%m-%d").parse;a(25),a(23);var r=a(14),i=a(15),c=a(16),o=a(17),p=a(18),h=a(19),d=a(20),u=a(21),m=a(22);n.tsv("data/data.tsv",function(e,t){t.forEach(function(e){e.date=new Date(l(e.date).getTime()),e.open=+e.open,e.high=+e.high,e.low=+e.low,e.close=+e.close,e.volume=+e.volume});var n=a(4).init(t),v=(a(3).init(t),a(5).init(t),a(6).init(t),a(8).init(t),a(7).init(t),a(9).init(t),a(10).init(t),a(11).init(t),a(12).init(t),a(13).init(t),s.createClass({displayName:"ExamplesPage",mixins:[m],render:function(){return s.createElement("body",null,s.createElement(r,null),s.createElement(c,null,s.createElement(i,null,s.createElement(o,null,s.createElement(p,{label:"Overview",active:!0}),s.createElement(p,{label:"AreaChart"}),s.createElement(p,{label:"CandlestickChart"}),s.createElement(p,{label:"LineChart"}),s.createElement(p,{label:"LineChart2"}),s.createElement(p,{label:"LineChart3"}),s.createElement(p,{label:"LineChart4"}))),s.createElement(h,{title:"Getting Started"},s.createElement(d,{anchor:"Overview",title:"Home"},s.createElement(u,{colSpan:2},s.createElement("aside",{dangerouslySetInnerHTML:{__html:a(27)}}))),s.createElement(d,{title:"AreaChart"},s.createElement(u,{colSpan:2,className:"react-stockchart"},s.createElement(n,null))),s.createElement(d,null,s.createElement(u,{colSpan:2},s.createElement("aside",{dangerouslySetInnerHTML:{__html:a(29)}}))),s.createElement(d,{title:"CandlestickChart"},s.createElement(u,{colSpan:2})),s.createElement(d,{title:"LineChart"},s.createElement(u,{colSpan:2})),s.createElement(d,{title:"LineChart2"},s.createElement(u,{colSpan:2})),s.createElement(d,{title:"LineChart3"},s.createElement(u,{colSpan:2})),s.createElement(d,{title:"LineChart4"},s.createElement(u,{colSpan:2})))))}}));s.render(s.createElement(v,null),document.body)})},,,,,,,,,,,,,,function(e,t,a){"use strict";var s=a(1),n=s.createClass({displayName:"Nav",render:function(){return s.createElement("nav",{className:"navbar navbar-fixed-top"},s.createElement("div",{className:"container-fluid"},s.createElement("div",{className:"navbar-header"},s.createElement("a",{className:"navbar-brand",href:"index.html"},"React Stockcharts"))))}});e.exports=n},function(e,t,a){"use strict";var s=a(1),n=s.createClass({displayName:"SideBar",render:function(){return s.createElement("div",{className:"col-sm-3 col-md-2 sidebar"},this.props.children)}});e.exports=n},function(e,t,a){"use strict";var s=a(1),n=a(20),l=s.createClass({displayName:"MainContainer",render:function(){return s.createElement("div",{className:"container-fluid",id:"MainContainer"},s.createElement(n,null,this.props.children))}});e.exports=l},function(e,t,a){"use strict";var s=a(1),n=s.createClass({displayName:"MenuGroup",render:function(){return s.createElement("ul",{className:"nav nav-sidebar"},this.props.children)}});e.exports=n},function(e,t,a){"use strict";var s=a(1),n=s.createClass({displayName:"MenuItem",propTypes:{active:s.PropTypes.bool,anchor:s.PropTypes.string,label:s.PropTypes.string.isRequired},getDefaultProps:function(){return{active:!1}},render:function(){var e=this.props.active?"active":"",t=this.props.anchor||this.props.label;return s.createElement("li",{className:e},s.createElement("a",{href:"#"+t},this.props.label,this.props.active?s.createElement("span",{className:"sr-only"},"(current)"):""))}});e.exports=n},function(e,t,a){"use strict";var s=a(1),n=s.createClass({displayName:"ContentSection",propTypes:{title:s.PropTypes.string.isRequired},render:function(){return s.createElement("div",{id:"ContentSection",className:"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main"},s.createElement("h1",{className:"page-header"},this.props.title),this.props.children)}});e.exports=n},function(e,t,a){"use strict";var s=a(1),n=s.createClass({displayName:"Row",propTypes:{title:s.PropTypes.string,anchor:s.PropTypes.string},render:function(){var e=this.props.anchor||this.props.title,t=this.props.title?s.createElement("h4",null,s.createElement("a",{id:e,href:"#"+e},this.props.title)):null;return s.createElement("div",{className:"row"},t,this.props.children)}});e.exports=n},function(e,t,a){"use strict";var s=a(1),n=s.createClass({displayName:"Section",propTypes:{colSpan:s.PropTypes.number.isRequired,title:s.PropTypes.string},getDefaultProps:function(){return{colSpan:1}},render:function(){var e=this.props.className+" col-md-"+6*this.props.colSpan,t=this.props.title?s.createElement("h4",null,this.props.title):null;return s.createElement("div",{className:e},t,this.props.children)}});e.exports=n},function(e){"use strict";var t=[],a={handleWindowResize:function(){t.splice(0),$(".nav-sidebar").find("a").each(function(){t.push($($(this).attr("href")).offset().top)})},componentWillUnMount:function(){window.removeEventListener("resize",this.handleWindowResize)},componentDidMount:function(){window.addEventListener("resize",this.handleWindowResize);var e=200,a=20,s=500;$("html,body").bind("scroll mousedown DOMMouseScroll mousewheel keyup",function(e){(e.which>0||"mousedown"==e.type||"mousewheel"==e.type)&&$("html,body").stop()}),$(".nav-sidebar").find("a").each(function(){t.push($($(this).attr("href")).offset().top)}),$(".nav-sidebar").find("a").click(function(){var e=$(".nav-sidebar a").index($(this)),a=e===t.length-1?0:-50,n=Math.min(t[e],$(document).height()-$(window).height())+a;return $("html,body").animate({scrollTop:n},s),!1}),$(window).scroll(function(){var s=$(window).scrollTop(),n=$(document).height(),l=$(window).height()+a;$.each(t,function(t,r){r>s-a&&(s+e>r||s+l>=n)&&$("ul.nav-sidebar li").removeClass("active").eq(t).addClass("active")})}),$(window).on("hashchange",function(){var e=$("html,body").scrollTop()-50;$("html,body").scrollTop(e)})}};e.exports=a},,,,,function(e){e.exports='<h4>React Stockcharts - Built with <a href="http://facebook.github.io/react/">React JS</a> and <a href="http://d3js.org/">d3</a></h4><p>The motivation of the React Stockcharts project is to provide flexible library to create charts to represent time series data, easy to learn, ability to customize by means of</p><ul><li>adding custom chart components</li><li>access the <code>svg</code> elements</li><li>flexible visualization using CSS</li></ul><p>There are many charting libraries available, but I feel there are very few out there that provide the features and flexibility to create stock charts that compete with the likes of the native trading systems.</p><h4>SVG vs Canvas</h4><p>When deciding on a web technology for charts - not just charts, but ones which are interactive too - representing many many data points, the decision of performance is bound to come up, and HTML5 presents options. React Stockcharts is built on SVG</p><p>I am not going to debate between the pros and cons between SVG and Canvas. They are discussed at great length <a href=http://stackoverflow.com/questions/12310024/fast-and-responsive-interactive-charts-graphs-svg-canvas-other>here</a> and <a href=http://stackoverflow.com/questions/5882716/html5-canvas-vs-svg-vs-div>here</a>. Needless to say they are both very powerful and for charting, there really is no right answer. I have chosen to use SVG for React Stockcharts because,</p><ul><li>you will see very soon the performance is not an issue really, thanks to React JS and the virtual dom</li><li>the flexibility of development and the convinenience of debuging a DOM is hard to beat</li><li>styling with css is something I cannot give up</li></ul><p>That said, I do wish to some day create a fork of this on Canvas.</p><h4>DOM Manipulation</h4><p>The only place where DOM Manipulation is used is in the <code>XAxis</code> and <code>YAxis</code> components, I will soon migrate to use the native <code>svg</code> axes provided by <a href=https://github.com/esbullington/react-d3>react-d3</a>, at which time the entire project will be built with native svg components making server side rendering possible.</p><p>Now let us get started with a very simple AreaChart</p>'},,function(e){e.exports='<p><code>data.tsv</code></p><table><thead><tr><th>date<th>open<th>high<th>low<th>close<tbody><tr><td>2011-01-24<td>5717.1<td>5756.0<td>5697.75<td>5743.25<tr><td>2011-01-25<td>5763.3<td>5801.55<td>5680.65<td>5687.4<tr><td>2011-01-27<td>5725.3<td>5726.1<td>5594.95<td>5604.3<tr><td>2011-01-28<td>5614.0<td>5614.4<td>5459.55<td>5512.15<tr><td>…<td>…<td>…<td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'d3\'</span>);\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>"%Y-%m-%d"</span>).parse\n\nd3.tsv(<span class=hljs-string>"path/to/data.tsv"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\n    data.forEach((d, i) =&gt; {\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\n        d.open = +d.open;\n        d.high = +d.high;\n        d.low = +d.low;\n        d.close = +d.close;\n    });\n...\n...\n\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span> &gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"left"</span> /&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\n            <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\n</code></pre>'}]);
//# sourceMappingURL=react-stockcharts-dashboard.js.map