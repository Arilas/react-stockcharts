webpackJsonp([0],[function(s,t,a){"use strict";var e=a(1),n=a(2),l=n.time.format("%Y-%m-%d").parse;a(30),a(28);{var r=a(19),i=a(20),c=a(21),o=a(22),p=a(27),h=a(23),d=a(24),u=a(25);a(26)}n.tsv("data/MSFT.tsv",function(s,t){t.forEach(function(s){s.date=new Date(l(s.date).getTime()),s.open=+s.open,s.high=+s.high,s.low=+s.low,s.close=+s.close,s.volume=+s.volume});var n=a(4).init(t),m=a(5).init(t),g=(a(6).init(t),a(7).init(t),a(8).init(t),a(9).init(t),a(10).init(t),a(11).init(t),a(12).init(t)),j=a(13).init(t),j=(a(14).init(t),a(15).init(t),a(3).init(t),a(13).init(t)),f=a(16).init(t),v=a(17).init(t),b=a(18).init(t),E=e.createClass({displayName:"ExamplesPage",render:function(){return e.createElement("body",null,e.createElement(r,null),e.createElement(c,null,e.createElement(i,null,e.createElement(o,null,e.createElement(p,{label:"Overview",active:!0}),e.createElement(p,{label:"AreaChart"}),e.createElement(p,{label:"CandlestickChart"}),e.createElement(p,{label:"stocktime"}),e.createElement(p,{label:"Volume histogram"}))),e.createElement(h,{title:"Getting Started"},e.createElement(d,{title:"Overview"},e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(33)}}))),e.createElement(d,{title:"AreaChart"},e.createElement(u,{colSpan:2,className:"react-stockchart"},e.createElement(n,null))),e.createElement(d,null,e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(34)}}))),e.createElement(d,null,e.createElement(u,{colSpan:2,className:"react-stockchart"},e.createElement(m,null))),e.createElement(d,{title:"CandlestickChart"},e.createElement(u,{colSpan:2,className:"react-stockchart"},e.createElement(g,null))),e.createElement(d,null,e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(35)}}))),e.createElement(d,null,e.createElement(u,{colSpan:2,className:"react-stockchart"},e.createElement(j,null))),e.createElement(d,null,e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(36)}}))),e.createElement(d,{title:"stocktime scale"},e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(37)}}))),e.createElement(d,{title:"Volume histogram"},e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(38)}}))),e.createElement(d,null,e.createElement(u,{colSpan:2,className:"react-stockchart"},e.createElement(f,null))),e.createElement(d,null,e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(39)}}))),e.createElement(d,null,e.createElement(u,{colSpan:2,className:"react-stockchart"},e.createElement(v,null))),e.createElement(d,null,e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(40)}}))),e.createElement(d,{title:"Mouse pointer"},e.createElement(u,{colSpan:2,className:"react-stockchart"},e.createElement(b,null))),e.createElement(d,null,e.createElement(u,{colSpan:2},e.createElement("aside",{dangerouslySetInnerHTML:{__html:a(41)}}))))))}});e.render(e.createElement(E,null),document.body)})},,,,function(s,t,a){"use strict";var e=a(1),n=a(45),l=n.ChartCanvas,r=n.XAxis,i=n.YAxis,c=n.AreaSeries,o=(n.Translate,n.Chart),p=n.DataSeries,h=a(43),d=a(42);s.exports={init:function(s){var t=e.createClass({displayName:"AreaChart",mixins:[d,h],render:function(){return this.state.width?e.createElement(l,{width:this.state.width,height:400,margin:{left:50,right:50,top:10,bottom:30},data:s},e.createElement(o,{id:0},e.createElement(r,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(i,{axisAt:"left",orient:"left"}),e.createElement(p,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(c,null)))):e.createElement("div",null)}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(45),l=n.ChartCanvas,r=n.XAxis,i=n.YAxis,c=n.AreaSeries,o=(n.Translate,n.Chart),p=n.DataSeries,h=a(43),d=a(42);s.exports={init:function(s){var t=e.createClass({displayName:"AreaChartWithYPercent",mixins:[d,h],render:function(){return this.state.width?(console.log(this.state.width),e.createElement(l,{width:this.state.width,height:400,margin:{left:50,right:50,top:10,bottom:30},data:s},e.createElement(o,{id:0},e.createElement(r,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(i,{axisAt:"left",orient:"left"}),e.createElement(i,{axisAt:"right",orient:"right",percentScale:!0,tickFormat:d3.format(".0%")}),e.createElement(p,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(c,null))))):e.createElement("div",null)}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.AreaSeries,p=(l.Translate,l.Chart),h=l.DataSeries,d=l.EventCapture,u=l.MouseCoordinates,m=l.CrossHair;s.exports={init:function(s){var t=e.createClass({displayName:"AreaChartWithCrossHairMousePointer",getInitialState:function(){return{width:500,height:400}},render:function(){var t=n.time.format("%Y-%m-%d").parse,a=({from:t("2012-06-01"),to:t("2012-12-31")},n.time.format("%Y-%m-%d"));return e.createElement(r,{data:s,width:this.state.width,height:this.state.height,margin:{left:5,right:90,top:10,bottom:30}},e.createElement(p,{id:3},e.createElement(i,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(c,{axisAt:"right",orient:"right"}),e.createElement(h,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(o,null))),e.createElement(u,{forChart:3,xDisplayFormat:a,yDisplayFormat:function(s){return s.toFixed(2)}},e.createElement(m,null)),e.createElement(d,{mouseMove:!0,mainChart:3}))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.AreaSeries,p=(l.Translate,l.Chart),h=l.DataSeries,d=l.EventCapture,u=l.MouseCoordinates,m=l.VerticalMousePointer,g=l.CurrentCoordinate;s.exports={init:function(s){var t=e.createClass({displayName:"AreaChartWithVerticalMousePointer",getInitialState:function(){return{width:500,height:400}},render:function(){var t=n.time.format("%Y-%m-%d").parse,a=({from:t("2012-06-01"),to:t("2012-12-31")},n.time.format("%Y-%m-%d"));return e.createElement(r,{data:s,width:this.state.width,height:this.state.height,margin:{left:50,right:100,top:10,bottom:30}},e.createElement(p,{id:0},e.createElement(i,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(c,{axisAt:"right",orient:"right",percentScale:!0,tickFormat:n.format(".0%")}),e.createElement(c,{axisAt:"left",orient:"left"}),e.createElement(h,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(o,null))),e.createElement(g,{forChart:0}),e.createElement(u,{forChart:0,xDisplayFormat:a,yDisplayFormat:function(s){return s.toFixed(2)}},e.createElement(m,null)),e.createElement(d,{mouseMove:!0,mainChart:0}))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.AreaSeries,p=(l.Translate,l.Chart),h=l.DataSeries,d=l.EventCapture,u=l.MouseCoordinates,m=l.CrossHair,g=l.TooltipContainer,j=l.OHLCTooltip;s.exports={init:function(s){var t=e.createClass({displayName:"AreaChartWithToolTip",getInitialState:function(){return{width:500,height:400}},render:function(){var t=n.time.format("%Y-%m-%d").parse,a=({from:t("2012-06-01"),to:t("2012-12-31")},n.time.format("%Y-%m-%d"));return e.createElement(r,{data:s,width:this.state.width,height:this.state.height,margin:{left:5,right:90,top:10,bottom:30}},e.createElement(p,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(c,{axisAt:"right",orient:"right"}),e.createElement(h,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(o,null))),e.createElement(u,{forChart:1,xDisplayFormat:a,yDisplayFormat:function(s){return s.toFixed(2)}},e.createElement(m,null)),e.createElement(d,{mouseMove:!0,mainChart:1}),e.createElement(g,null,e.createElement(j,{forChart:1})))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.AreaSeries,p=(l.Translate,l.Chart),h=l.DataSeries,d=l.EventCapture,u=l.MouseCoordinates,m=l.CrossHair,g=l.TooltipContainer,j=l.OHLCTooltip,f=l.OverlaySeries,v=l.LineSeries,b=l.CurrentCoordinate,E=l.MovingAverageTooltip;s.exports={init:function(s){var t=e.createClass({displayName:"AreaChartWithMA",getInitialState:function(){return{width:500,height:400}},handleMATooltipClick:function(s){console.log("You clicked on ",s," handle your onclick event here...")},render:function(){var t=n.time.format("%Y-%m-%d").parse,a=({from:t("2012-06-01"),to:t("2012-12-31")},n.time.format("%Y-%m-%d"));return e.createElement(r,{data:s,width:this.state.width,height:this.state.height,margin:{left:5,right:90,top:10,bottom:30}},e.createElement(p,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(c,{axisAt:"right",orient:"right"}),e.createElement(h,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(o,null),e.createElement(f,{id:0,type:"sma",options:{period:50}},e.createElement(v,null)),e.createElement(f,{id:1,type:"sma",options:{period:150}},e.createElement(v,null)),e.createElement(f,{id:3,type:"sma",options:{period:250}},e.createElement(v,null)),e.createElement(f,{id:4,type:"sma",options:{period:350}},e.createElement(v,null)),e.createElement(f,{id:5,type:"sma",options:{period:450}},e.createElement(v,null)))),e.createElement(b,{forChart:1}),e.createElement(u,{forChart:1,xDisplayFormat:a,yDisplayFormat:function(s){return s.toFixed(2)}},e.createElement(m,null)),e.createElement(d,{mouseMove:!0,mainChart:1}),e.createElement(g,null,e.createElement(j,{forChart:1}),e.createElement(E,{forChart:1,onClick:this.handleMATooltipClick})))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.AreaSeries,p=(l.Translate,l.Chart),h=l.DataSeries,d=l.EventCapture,u=l.MouseCoordinates,m=l.CrossHair,g=l.TooltipContainer,j=l.OHLCTooltip,f=l.OverlaySeries,v=l.LineSeries,b=l.MovingAverageTooltip,E=l.EdgeContainer,C=l.EdgeIndicator,y=l.CurrentCoordinate;s.exports={init:function(s){var t=e.createClass({displayName:"AreaChartWithEdgeCoordinates",getInitialState:function(){return{width:500,height:400}},getEventStore:function(){return this.refs.eventStore.getEventStore()},updateEventStore:function(s){return this.refs.eventStore.updateEventStore(s)},handleMATooltipClick:function(s){console.log("You clicked on ",s," handle your onclick event here...")},render:function(){var t=n.time.format("%Y-%m-%d").parse,a=({from:t("2012-06-01"),to:t("2012-12-31")},n.time.format("%Y-%m-%d"));return e.createElement(r,{width:this.state.width,height:this.state.height,margin:{left:5,right:90,top:10,bottom:30},data:s,ref:"eventStore"},e.createElement(p,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(c,{axisAt:"right",orient:"right"}),e.createElement(h,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(o,null),e.createElement(f,{id:0,type:"sma",options:{period:50}},e.createElement(v,null)),e.createElement(f,{id:1,type:"sma",options:{period:150}},e.createElement(v,null)),e.createElement(f,{id:3,type:"sma",options:{period:250}},e.createElement(v,null)),e.createElement(f,{id:4,type:"sma",options:{period:350}},e.createElement(v,null)),e.createElement(f,{id:5,type:"sma",options:{period:450}},e.createElement(v,null)))),e.createElement(y,{forChart:1}),e.createElement(y,{forChart:1,forOverlay:1}),e.createElement(E,null,e.createElement(C,{className:"horizontal",itemType:"last",orient:"right",edgeAt:"right",forChart:1,forOverlay:1}),e.createElement(C,{className:"horizontal",itemType:"last",orient:"right",edgeAt:"right",forChart:1,forOverlay:5})),e.createElement(u,{forChart:1,xDisplayFormat:a,yDisplayFormat:function(s){return s.toFixed(2)}},e.createElement(m,null)),e.createElement(d,{mouseMove:!0,mainChart:1}),e.createElement(g,null,e.createElement(j,{forChart:1}),e.createElement(b,{forChart:1,onClick:this.handleMATooltipClick})))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.LineSeries,p=(l.Translate,l.Chart),h=l.DataSeries;s.exports={init:function(s){var t=e.createClass({displayName:"LineChart",render:function(){return e.createElement(r,{data:s,width:500,height:400,margin:{left:50,right:50,top:10,bottom:30}},e.createElement(p,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(c,{axisAt:"right",orient:"right",percentScale:!0,tickFormat:n.format(".0%")}),e.createElement(c,{axisAt:"left",orient:"left"}),e.createElement(h,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(o,null))))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.CandlestickSeries,p=(l.DataTransform,l.Chart),h=l.DataSeries,d=a(43),u=a(42);s.exports={init:function(s){var t=e.createClass({displayName:"CandleStickChart",mixins:[u,d],render:function(){if(!this.state.width)return e.createElement("div",null);{var t=n.time.format("%Y-%m-%d").parse;({from:t("2012-12-01"),to:t("2012-12-31")})}return e.createElement(r,{width:this.state.width,height:400,margin:{left:50,right:50,top:10,bottom:30},data:s},e.createElement(p,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(c,{axisAt:"left",orient:"left",ticks:5}),e.createElement(h,{yAccessor:o.yAccessor,xAccessor:function(s){return s.date}},e.createElement(o,null))))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.CandlestickSeries,p=l.DataTransform,h=l.Chart,d=l.DataSeries,u=a(43),m=a(42);s.exports={init:function(s){var t=e.createClass({displayName:"CandleStickChart",mixins:[m,u],render:function(){if(!this.state.width)return e.createElement("div",null);{var t=n.time.format("%Y-%m-%d").parse;({from:t("2012-12-01"),to:t("2012-12-31")})}return e.createElement(r,{width:this.state.width,height:400,margin:{left:50,right:50,top:10,bottom:30},data:s},e.createElement(p,{transformType:"stockscale"},e.createElement(h,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom"}),e.createElement(c,{axisAt:"right",orient:"right",ticks:5}),e.createElement(d,{yAccessor:o.yAccessor},e.createElement(o,null)))))}});return t}}},function(s,t,a){"use strict";{var e=a(1),n=a(2);a(45)}s.exports={init:function(s){var t=a(10).init(s),l=e.createClass({displayName:"SyncMouseMove",getInitialState:function(){return{width:500,height:400}},handleMATooltipClick:function(s){console.log("You clicked on ",s," handle your onclick event here...")},componentDidMount:function(){var s=this.refs.left.getEventStore();this.refs.right.updateEventStore(s)},componentDidUpdate:function(){},render:function(){{var s=n.time.format("%Y-%m-%d").parse;({from:s("2012-06-01"),to:s("2012-12-31")}),n.time.format("%Y-%m-%d")}return e.createElement("div",null,e.createElement("div",{className:"col-md-6 react-stockchart"},e.createElement(t,{ref:"left"})),e.createElement("div",{className:"col-md-6 react-stockchart"},e.createElement(t,{ref:"right"})))}});return l}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.AreaSeries,p=(l.Translate,l.Chart),h=l.DataSeries,d=l.EventCapture,u=l.MouseCoordinates,m=l.CrossHair,g=l.TooltipContainer,j=l.OHLCTooltip,f=l.OverlaySeries,v=l.LineSeries,b=l.MovingAverageTooltip,E=l.EdgeContainer,C=l.EdgeIndicator,y=l.CurrentCoordinate;s.exports={init:function(s){var t=e.createClass({displayName:"AreaChartWithZoom",getInitialState:function(){return{width:500,height:400}},handleMATooltipClick:function(s){console.log("You clicked on ",s," handle your onclick event here...")},render:function(){var t=n.time.format("%Y-%m-%d").parse,a=({from:t("2012-06-01"),to:t("2012-12-31")},n.time.format("%Y-%m-%d"));return e.createElement(r,{width:this.state.width,height:this.state.height,margin:{left:65,right:90,top:30,bottom:30},data:s,ref:"eventStore"},e.createElement(p,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom",ticks:6}),e.createElement(c,{axisAt:"right",orient:"right"}),e.createElement(h,{yAccessor:function(s){return s.close},xAccessor:function(s){return s.date}},e.createElement(o,null),e.createElement(f,{id:0,type:"sma",options:{period:50}},e.createElement(v,null)),e.createElement(f,{id:1,type:"sma",options:{period:150}},e.createElement(v,null)),e.createElement(f,{id:2,type:"sma",options:{period:250}},e.createElement(v,null)),e.createElement(f,{id:3,type:"sma",options:{period:350}},e.createElement(v,null)),e.createElement(f,{id:4,type:"sma",options:{period:450}},e.createElement(v,null)))),e.createElement(y,{forChart:1}),e.createElement(y,{forChart:1,forOverlay:1}),e.createElement(E,null,e.createElement(C,{className:"horizontal",itemType:"last",orient:"right",edgeAt:"right",forChart:1,forOverlay:0}),e.createElement(C,{className:"horizontal",itemType:"first",orient:"left",edgeAt:"left",forChart:1,forOverlay:1}),e.createElement(C,{className:"horizontal",itemType:"last",orient:"right",edgeAt:"right",forChart:1}),e.createElement(C,{className:"horizontal",itemType:"first",orient:"left",edgeAt:"left",forChart:1}),e.createElement(C,{className:"horizontal",itemType:"last",orient:"right",edgeAt:"right",forChart:1,forOverlay:2}),e.createElement(C,{className:"horizontal",itemType:"last",orient:"right",edgeAt:"right",forChart:1,forOverlay:3})),e.createElement(u,{forChart:1,xDisplayFormat:a,yDisplayFormat:function(s){return s.toFixed(2)}},e.createElement(m,null)),e.createElement(d,{mouseMove:!0,zoom:!0,mainChart:1}),e.createElement(g,null,e.createElement(j,{forChart:1,origin:[-60,-20]}),e.createElement(b,{forChart:1,onClick:this.handleMATooltipClick,origin:[-60,-10]})))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.CandlestickSeries,p=l.DataTransform,h=l.Chart,d=l.DataSeries,u=a(43),m=a(42),g=l.HistogramSeries;s.exports={init:function(s){var t=e.createClass({displayName:"CandleStickChart",mixins:[m,u],render:function(){if(!this.state.width)return e.createElement("div",null);{var t=n.time.format("%Y-%m-%d").parse;({from:t("2012-12-01"),to:t("2012-12-31")})}return e.createElement(r,{width:this.state.width,height:400,margin:{left:50,right:50,top:10,bottom:30},data:s},e.createElement(p,{transformType:"stockscale"},e.createElement(h,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom"}),e.createElement(c,{axisAt:"right",orient:"right",ticks:5}),e.createElement(d,{yAccessor:o.yAccessor},e.createElement(o,null))),e.createElement(h,{id:2},e.createElement(c,{axisAt:"left",orient:"left",ticks:5,tickFormat:n.format("s")}),e.createElement(d,{yAccessor:function(s){return s.volume}},e.createElement(g,null)))))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.CandlestickSeries,p=l.DataTransform,h=l.Chart,d=l.DataSeries,u=a(43),m=a(42),g=l.HistogramSeries;s.exports={init:function(s){var t=e.createClass({displayName:"CandleStickChart",mixins:[m,u],render:function(){if(!this.state.width)return e.createElement("div",null);{var t=n.time.format("%Y-%m-%d").parse;({from:t("2012-12-01"),to:t("2012-12-31")})}return e.createElement(r,{width:this.state.width,height:400,margin:{left:50,right:50,top:10,bottom:30},data:s},e.createElement(p,{transformType:"stockscale"},e.createElement(h,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom"}),e.createElement(c,{axisAt:"right",orient:"right",ticks:5}),e.createElement(d,{yAccessor:o.yAccessor},e.createElement(o,null))),e.createElement(h,{id:2,height:150,origin:function(s,t){return[0,t-150]}},e.createElement(c,{axisAt:"left",orient:"left",ticks:5,tickFormat:n.format("s")}),e.createElement(d,{yAccessor:function(s){return s.volume}},e.createElement(g,{className:function(s){return s.close>s.open?"up":"down"}})))))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=a(2),l=a(45),r=l.ChartCanvas,i=l.XAxis,c=l.YAxis,o=l.CandlestickSeries,p=l.DataTransform,h=l.Chart,d=l.DataSeries,u=a(43),m=a(42),g=l.HistogramSeries,j=l.EventCapture,f=l.MouseCoordinates,v=l.CrossHair,b=l.TooltipContainer,E=l.OHLCTooltip;s.exports={init:function(s){var t=e.createClass({displayName:"CandleStickChart",mixins:[m,u],render:function(){if(!this.state.width)return e.createElement("div",null);var t=n.time.format("%Y-%m-%d").parse,a=({from:t("2012-12-01"),to:t("2012-12-31")},n.time.format("%Y-%m-%d"));return e.createElement(r,{width:this.state.width,height:400,margin:{left:40,right:70,top:10,bottom:30},data:s},e.createElement(p,{transformType:"stockscale"},e.createElement(h,{id:1},e.createElement(i,{axisAt:"bottom",orient:"bottom"}),e.createElement(c,{axisAt:"right",orient:"right",ticks:5}),e.createElement(d,{yAccessor:o.yAccessor},e.createElement(o,null))),e.createElement(h,{id:2,height:150,origin:function(s,t){return[0,t-150]}},e.createElement(c,{axisAt:"left",orient:"left",ticks:5,tickFormat:n.format("s")}),e.createElement(d,{yAccessor:function(s){return s.volume}},e.createElement(g,{className:function(s){return s.close>s.open?"up":"down"}}))),e.createElement(f,{forChart:1,xDisplayFormat:a,yDisplayFormat:function(s){return s.toFixed(2)}},e.createElement(v,null)),e.createElement(j,{mouseMove:!0,mainChart:1}),e.createElement(b,null,e.createElement(E,{forChart:1,origin:[-40,0]}))))}});return t}}},function(s,t,a){"use strict";var e=a(1),n=e.createClass({displayName:"Nav",render:function(){return e.createElement("nav",{className:"navbar navbar-fixed-top"},e.createElement("div",{className:"container-fluid"},e.createElement("div",{className:"navbar-header"},e.createElement("a",{className:"navbar-brand",href:"index.html"},"React Stockcharts"))))}});s.exports=n},function(s,t,a){"use strict";var e=a(1),n=e.createClass({displayName:"SideBar",render:function(){return e.createElement("div",{className:"col-sm-3 col-md-2 sidebar"},this.props.children)}});s.exports=n},function(s,t,a){"use strict";var e=a(1),n=a(24),l=e.createClass({displayName:"MainContainer",render:function(){return e.createElement("div",{className:"container-fluid",id:"MainContainer"},e.createElement(n,null,this.props.children))}});s.exports=l},function(s,t,a){"use strict";var e=a(1),n=e.createClass({displayName:"MenuGroup",render:function(){return e.createElement("ul",{className:"nav nav-sidebar"},this.props.children)}});s.exports=n},function(s,t,a){"use strict";var e=a(1),n=e.createClass({displayName:"ContentSection",propTypes:{title:e.PropTypes.string.isRequired},render:function(){return e.createElement("div",{id:"ContentSection",className:"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main"},e.createElement("h1",{className:"page-header"},this.props.title),this.props.children)}});s.exports=n},function(s,t,a){"use strict";var e=a(1),n=e.createClass({displayName:"Row",propTypes:{title:e.PropTypes.string,anchor:e.PropTypes.string},render:function(){var s=this.props.anchor||this.props.title,t=this.props.title?e.createElement("h4",null,e.createElement("a",{id:s,href:"#"+s},this.props.title)):null;return e.createElement("div",{className:"row"},t,this.props.children)}});s.exports=n},function(s,t,a){"use strict";var e=a(1),n=e.createClass({displayName:"Section",propTypes:{colSpan:e.PropTypes.number.isRequired,title:e.PropTypes.string},getDefaultProps:function(){return{colSpan:1}},render:function(){var s=this.props.className+" col-md-"+6*this.props.colSpan,t=this.props.title?e.createElement("h4",null,this.props.title):null;return e.createElement("div",{className:s},t,this.props.children)}});s.exports=n},function(s){"use strict";var t=[],a={handleWindowResize:function(){t.splice(0),$(".nav-sidebar").find("a").each(function(){t.push($($(this).attr("href")).offset().top)})},componentWillUnMount:function(){window.removeEventListener("resize",this.handleWindowResize)},componentDidMount:function(){window.addEventListener("resize",this.handleWindowResize);var s=200,a=20,e=500;$("html,body").bind("scroll mousedown DOMMouseScroll mousewheel keyup",function(s){(s.which>0||"mousedown"==s.type||"mousewheel"==s.type)&&$("html,body").stop()}),$(".nav-sidebar").find("a").each(function(){t.push($($(this).attr("href")).offset().top)}),$(".nav-sidebar").find("a").click(function(){var s=$(".nav-sidebar a").index($(this)),a=s===t.length-1?0:-50,n=Math.min(t[s],$(document).height()-$(window).height())+a;return $("html,body").animate({scrollTop:n},e),!1}),$(window).scroll(function(){var e=$(window).scrollTop(),n=$(document).height(),l=$(window).height()+a;$.each(t,function(t,r){r>e-a&&(e+s>r||e+l>=n)&&$("ul.nav-sidebar li").removeClass("active").eq(t).addClass("active")})}),$(window).on("hashchange",function(){var s=$("html,body").scrollTop()-50;$("html,body").scrollTop(s)})}};s.exports=a},function(s,t,a){"use strict";var e=a(1),n=e.createClass({displayName:"MenuItem",propTypes:{active:e.PropTypes.bool,anchor:e.PropTypes.string,label:e.PropTypes.string.isRequired},getDefaultProps:function(){return{active:!1}},render:function(){var s=this.props.active?"active":"",t=this.props.anchor||this.props.label;return e.createElement("li",{className:s},e.createElement("a",{href:"#"+t},this.props.label,this.props.active?e.createElement("span",{className:"sr-only"},"(current)"):""))}});s.exports=n},,,,,,function(s){s.exports='<h4>React Stockcharts - Built with <a href="http://facebook.github.io/react/">React JS</a> and <a href="http://d3js.org/">d3</a></h4><p>The motivation of the React Stockcharts project is to provide flexible library to create charts to represent time series data, easy to learn, ability to customize by means of</p><ul><li>adding custom chart components</li><li>access the <code>svg</code> elements</li><li>styling with CSS</li></ul><p>There are many charting libraries available, but I feel there are very few that provide the features and flexibility to create stock charts that compete with the likes of the ones provided by commercial trading systems.</p><h4>SVG vs Canvas</h4><p>When deciding on a web technology for charts - not just charts, but ones which are interactive too - representing many many data points, the decision of performance is bound to come up, and HTML5 presents options.</p><p>I am not going to debate between the pros and cons between SVG and Canvas. They are discussed at great length <a href=http://stackoverflow.com/questions/12310024/fast-and-responsive-interactive-charts-graphs-svg-canvas-other>here</a> and <a href=http://stackoverflow.com/questions/5882716/html5-canvas-vs-svg-vs-div>here</a>. Needless to say they are both very powerful and for charting, there really is no right answer. I have chosen to use SVG for React Stockcharts because,</p><ul><li>you will see very soon the performance is not an issue really, thanks to React JS and the virtual dom</li><li>the flexibility of development and the convinenience of debuging a DOM is hard to beat</li><li>styling with css is something I cannot give up</li></ul><p>That said, I do wish to some day create a fork of this on Canvas.</p><h4>DOM Manipulation</h4><p>The only place where DOM Manipulation is used is in the <code>XAxis</code> and <code>YAxis</code> components, I will soon migrate to use the native <code>svg</code> axes provided by <a href=https://github.com/esbullington/react-d3>react-d3</a>, at which time the entire project will be built with native svg components making server side rendering possible.</p><p>Now let us get started with a very simple AreaChart</p>'},function(s){s.exports='<p><code>data.tsv</code></p><table><thead><tr><th>date<th>close<tbody><tr><td>2011-01-24<td>5743.25<tr><td>2011-01-25<td>5687.4<tr><td>2011-01-27<td>5604.3<tr><td>2011-01-28<td>5512.15<tr><td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'d3\'</span>);\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>"%Y-%m-%d"</span>).parse\n\nd3.tsv(<span class=hljs-string>"path/to/data.tsv"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\n    data.forEach((d, i) =&gt; {\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\n        d.close = +d.close;\n    });\n...\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"left"</span> /&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\n            <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\n</code></pre><p>Let us review each line</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\n</code></pre><p>Creates an <code>svg</code> element with the provided <code>height</code> and <code>width</code> and creates a <code>svg:g</code> element with the provided <code>margin</code>. <code>data</code> is well the data used to plot.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{0}</span>&gt;</span>\n</code></pre><p>There can be one or more <code>Chart</code>s in each <code>ChartCanvas</code> and hence the need for an <code>id</code> attribute.</p><p>If you are not familiar with <a href=https://github.com/mbostock/d3/wiki/Scales>scales</a> in d3 I recommend doing so. Each <code>Chart</code> defines an <code>xScale</code> and <code>yScale</code>. For starters, it is easier to understand scale as a function which converts a <code>domain</code> say 2011-01-01 to 2014-12-31 to a <code>range</code> say 0 to 500 pixels. This scale can now interpolate an input date to a value in pixels which can be drawn.</p><p>With SVG it is important to understand the coordinate system and where the origin <code>(0, 0)</code> is located. for a SVG of size 300x100, the</p><p><img src=http://www.w3.org/TR/SVG/images/coords/InitialCoords.png alt="alt text" title="Logo Title Text 1"></p><p>For more details about the SVG coordinate system see <a href=http://www.w3.org/TR/SVG/coords.html>here</a></p><p>Back to scales,</p><p>A time scale converts a date/time domain to a range, this is used as the xScale, the xDomain is calculated from the input data, and the range is calculated as <code>height - margin.left - margin.right</code>.</p><p>A Linear scale converts a <code>domain</code> say 4600 - 6200 to a <code>range</code> say 0 to 300 pixels. Like the name represents the data in between is interpolated linear, similarly there is log scale which creates a logrithmic scale, which is not linear.</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{6}</span>/&gt;</span>\n</code></pre><p>The <code>ticks</code> attribute simple passes on the value to the <a href=https://github.com/mbostock/d3/wiki/SVG-Axes#ticks>d3.axis</a>, the <code>XAxis</code> also has the following optional attributes <code>innerTickSize, outerTickSize, tickFormat, tickPadding, tickSize, ticks, tickValues</code> all of which correspond to a function with the same name in d3.axis.</p><p><code>axisAt</code> takes on possible values as <code>top, middle, bottom</code> for advanced cases, you can also pass in a number indicating the pixel position where the axis has to be drawn.</p><p><code>orient</code> takes on possible values as <code>top, bottom</code>, this orients the axis ticks on the top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"left"</span> /&gt;</span>\n</code></pre><p>Similar to <code>XAxis</code> except left/right instead of top/bottom</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close} xAccessor={(d) =&gt; d.date}&gt;\n    <span class=hljs-tag>&lt;<span class=hljs-title>AreaSeries</span> /&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n</code></pre><p>A <code>DataSeries</code> is a shell component intended to house the x and y Accessor. You will find in other examples below how <code>DataSeries</code> helps create a yAccessor with more than one y value to plot for a given x, like in candlestick.</p><p>If you are not clear what the arrow functions mean, read more about them <a href=https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions>here</a>. In short</p><p><code>(d) =&gt; d.close</code> means <code>function (d) { return d.close; }</code></p><p><code>(d) =&gt; d.date</code> means <code>function (d) { return d.date; }</code></p><h3>Highly customizable you say, how?</h3><p>So you dont want to display the <code>YAxis</code> at all, go ahead and just remove that.</p><p>Want to display <code>YAxis</code> on both left and right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"right"</span> /&gt;</span>\n</code></pre><p>next to the existing <code>YAxis</code></p><p>Create custom components and use them, it is explained <a href=http://add.link.here>here</a></p><p>Want to add a <code>YAxis</code> with a percent scale on the right? add</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>percentScale</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format(".0%")}</span>/&gt;</span>\n</code></pre><p>and you get.</p>'
},function(s){s.exports="<p>well, that looks ok, but something is not right. Look closer, you will find that the candles are not spread at regular intervals, there is a gap of say 2 candles every so often. That gap is because the data is plot on a continious time scale, and a continious time scale has week ends and national holidays, days when trading does not happen. Now we dont want to show non trading days on the chart. If it is an intra day chart, you want to see only 9:30 AM to 4:00 PM (or 1:00 PM if it is holiday hours)</p><p>What we need here is to show time that is not continious on the x axis. Enter <strong>stocktime scale</strong> (or <strong>financetime scale</strong>).</p>"},function(s){s.exports='<p>That is better. let us see how to create it</p><p><code>data.tsv</code></p><table><thead><tr><th>date<th>open<th>high<th>low<th>close<tbody><tr><td>2013-08-16<td>5705.45<td>5716.6<td>5496.05<td>5507.85<tr><td>2013-08-19<td>5497.55<td>5499.65<td>5360.65<td>5414.75<tr><td>2013-08-20<td>5353.45<td>5417.8<td>5306.35<td>5401.45<tr><td>…<td>…<td>…<td>…<td>…</table><pre><code class=language-js><span class=hljs-keyword>var</span> d3 = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'d3\'</span>);\n<span class=hljs-keyword>var</span> parseDate = d3.time.format(<span class=hljs-string>"%Y-%m-%d"</span>).parse;\n\nd3.tsv(<span class=hljs-string>"path/to/data.tsv"</span>, <span class=hljs-function><span class=hljs-keyword>function</span><span class=hljs-params>(err, data)</span> </span>{\n    data.forEach((d, i) =&gt; {\n        d.date = <span class=hljs-keyword>new</span> <span class=hljs-built_in>Date</span>(parseDate(d.date).getTime());\n        d.open = +d.open;\n        d.high = +d.high;\n        d.low = +d.low;\n        d.close = +d.close;\n    });\n...\n</code></pre><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>"stockscale"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span>/&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\n</code></pre><p>Compare this with the simpler <code>AreaChart</code> example from before</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{...}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\n</code></pre><p>It is the same as for <code>AreaChart</code></p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>"stockscale"</span>&gt;</span>\n</code></pre><p>Converting the data provided as input which when taken as a linear scale includes weekend time breaks, into a linear scale over the input domain. More usecases of <code>DataTransform</code> are listed below.</p><p><strong>Comming Soon</strong> Create your own transforms and register them for use</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span>/&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\n</code></pre><p>Same as for <code>AreaChart</code> example above</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n</code></pre><p>You will notice that the <code>DataSeries</code> component does not include the <code>xAccessor</code>, that is because it is defined inside the stockscale <code>DataTransform</code> which provides the <code>xAccessor</code> behind the scenes</p><p><code>yAccessor={CandlestickSeries.yAccessor}</code> is just a convenience <code>yAccessor</code> available, it can also be represented as</p><pre><code class=language-js>yAccessor={(d) =&gt; ({open: d.open, high: d.high, low: d.low, close: d.close})}\n</code></pre><p>or if arrow functions is not your thing, use</p><pre><code class=language-js>yAccessor={<span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-params>(d)</span> </span>{ <span class=hljs-keyword>return</span> {open: d.open, high: d.high, low: d.low, close: d.close}; }}\n</code></pre>'},function(s){s.exports="<p>The financetime scale takes the input data and converts to linear and plots time on the axis. The outcome is quite interesting. This scale is particularly of use not just for simple time series data, but more importantly for charts which are dependent on price movement, think Point &amp; Figure, Line break, Kagi, Renko.</p><p>scale provides ticks of the format</p><ul><li>Start of year as <code>YYYY</code> e.g. 2013</li><li>Start of Quarter as <code>mmm YYYY</code> e.g. Oct 2013</li><li>Start of Month <code>as mmm</code> e.g. Nov</li><li>Start of Week as <code>dd mmm</code> e.g. 25 Nov</li><li>day as <code>a dd</code> e.g. Wed 27</li></ul><p><strong>Comming Soon</strong> updated financetime scale for intra day</p>"},function(s){s.exports="<p>There are a couple of ways Volume histogram is usually displayed. Let us see them.</p>"},function(s){s.exports='<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>"stockscale"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"bottom"</span>/&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span>&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format("s")}</span>/&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> /&gt;</span>\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\n</code></pre><p>Look!!! there is more than one <code>Chart</code> there.</p><p>Each <code>Chart</code> has a pair of <code>xScale</code> and <code>yScale</code> since <code>volume</code> is on a different domain from <code>open</code>/<code>high</code>/<code>low</code>/<code>close</code>, It has to be created as a different <code>Chart</code>.</p><p>To summarize, All <code>Chart</code>s use the same <code>data</code> but each <code>Chart</code> has different <code>xScale</code> and <code>yScale</code>. In this example above the <code>xScale</code> of chart 2 has the same <code>domain</code> and <code>range</code> as the <code>xScale</code> of <code>Chart</code> 1, so we did not draw the <code>XAxis</code> again for the Volume.</p><h5>But… I dont want the Volume chart to span the whole chart height.</h5><p>I got you covered.</p>'},function(s){s.exports='<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>50</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>"stockscale"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"bottom"</span>/&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format("s")}</span>/&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? \'up\' : \'down\'} /&gt;\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\n</code></pre><p>The portion of interest here is</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\n</code></pre><p>the chart has a defined <code>height</code> of 150, which is good.</p><p><code>origin</code> can be either a function which returns a <code>[x, y]</code> to be used as origin or it can be an array with 2 elements representing <code>[x, y]</code>. The default value for <code>origin</code> is <code>[0, 0]</code></p><p><code>(w, h) =&gt; [0, h - 150]</code> is the same as <code>function (w, h) { return [0, h - 150]; }</code></p><p>given the <code>width</code> and <code>height</code> available inside the <code>ChartCanvas</code> as input, this function returns an origin of <code>[0, height - 150]</code> to draw the volume histogram</p><p>Similarly the <code>className</code> of <code>HistogramSeries</code> accepts either</p><ul><li>a function which returns a string</li><li>or a string</li></ul><p>which is used as the css class</p><pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? \'up\' : \'down\'} /&gt;\n</code></pre><p>a class of ‘up’ is applied if <code>close &gt; open</code> for that day and ‘down’ otherwise</p>'},function(s){s.exports='<pre><code class=language-html><span class=hljs-tag>&lt;<span class=hljs-title>ChartCanvas</span> <span class=hljs-attribute>width</span>=<span class=hljs-value>{this.state.width}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{400}</span> <span class=hljs-attribute>margin</span>=<span class=hljs-value>{{left:</span> <span class=hljs-attribute>40</span>, <span class=hljs-attribute>right:</span> <span class=hljs-attribute>70</span>, <span class=hljs-attribute>top:10</span>, <span class=hljs-attribute>bottom:</span> <span class=hljs-attribute>30</span>}} <span class=hljs-attribute>data</span>=<span class=hljs-value>{data}</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-title>DataTransform</span> <span class=hljs-attribute>transformType</span>=<span class=hljs-value>"stockscale"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{1}</span> &gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>XAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"bottom"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"bottom"</span>/&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"right"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> /&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{CandlestickSeries.yAccessor}</span> &gt;</span>\n                <span class=hljs-tag>&lt;<span class=hljs-title>CandlestickSeries</span> /&gt;</span>\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>Chart</span> <span class=hljs-attribute>id</span>=<span class=hljs-value>{2}</span> <span class=hljs-attribute>height</span>=<span class=hljs-value>{150}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{(w,</span> <span class=hljs-attribute>h</span>) =&gt;</span> [0, h - 150]}&gt;\n            <span class=hljs-tag>&lt;<span class=hljs-title>YAxis</span> <span class=hljs-attribute>axisAt</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>orient</span>=<span class=hljs-value>"left"</span> <span class=hljs-attribute>ticks</span>=<span class=hljs-value>{5}</span> <span class=hljs-attribute>tickFormat</span>=<span class=hljs-value>{d3.format("s")}</span>/&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>DataSeries</span> <span class=hljs-attribute>yAccessor</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.volume} &gt;\n                <span class=hljs-tag>&lt;<span class=hljs-title>HistogramSeries</span> <span class=hljs-attribute>className</span>=<span class=hljs-value>{(d)</span> =&gt;</span> d.close &gt; d.open ? \'up\' : \'down\'} /&gt;\n            <span class=hljs-tag>&lt;/<span class=hljs-title>DataSeries</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>Chart</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>MouseCoordinates</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>xDisplayFormat</span>=<span class=hljs-value>{d3.time.format("%Y-%m-%d")}</span> <span class=hljs-attribute>yDisplayFormat</span>=<span class=hljs-value>{(y)</span> =&gt;</span> y.toFixed(2)}&gt;\n            <span class=hljs-tag>&lt;<span class=hljs-title>CrossHair</span> /&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>MouseCoordinates</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>EventCapture</span> <span class=hljs-attribute>mouseMove</span>=<span class=hljs-value>{true}</span> <span class=hljs-attribute>mainChart</span>=<span class=hljs-value>{1}</span>/&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-title>TooltipContainer</span>&gt;</span>\n            <span class=hljs-tag>&lt;<span class=hljs-title>OHLCTooltip</span> <span class=hljs-attribute>forChart</span>=<span class=hljs-value>{1}</span> <span class=hljs-attribute>origin</span>=<span class=hljs-value>{[-40,</span> <span class=hljs-attribute>0</span>]}/&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-title>TooltipContainer</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-title>DataTransform</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-title>ChartCanvas</span>&gt;</span>\n</code></pre>'}]);
//# sourceMappingURL=react-stockcharts-dashboard.js.map